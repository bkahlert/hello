{
  "openapi": "3.0.0",
  "info": {
    "title": "ClickUp 2.0",
    "description": "Let's make people more productive, together.\n\nPlease use our [feedback board](https://clickup.canny.io) to report bugs, feature requests, and collaborate with the community.\n\nIf you'd like to import our entire API library, click [here](https://t333.s.clickup-attachments.com/t333/3bf59291-47c0-4f1a-ae91-5d9f26a8daca/ClickUp%20API%20V2.postman_collection.json) to download the file needed to import through Postman.\n\n## Authentication\n\nThere are two ways to authenticate with ClickUp API 2.0, with a personal token or creating an application and authenticating with an OAuth2 flow. Once you receive one of those two tokens, use that in the `Authorization` header of your API requests.\n\n**IMPORTANT** - _If you are creating an application for others to use, it is highly recommended that you use the OAuth2 flow._\n\n### Personal Token\n\nIf you are using the API for personal use, it is safe to use the personal API token. You can find this token in your user settings, under the `Apps` section. At the top of the page you have the option to generate a personal token. These tokens will always begin with `pk_`.\n\n![personal_token](https://attachments3.clickup.com/343f245e-7d27-411d-96d0-9ad3a6f2f8a7/personal_token.png)\n\nIf your token becomes compromised, you can regenerate it. However, be aware that any applications that were using the old token will lose access once it has been regenerated.\n\n### OAuth2 Flow\n\nWhen you want to develop an application that others can use, you must go through the OAuth2 flow so that every user that uses your application gets assigned an individualized token. This way each user of your application is able to access their own ClickUp resources. If you are unfamiliar with OAuth2, Digital Ocean has put together a great [guide](https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2) that should get you started.\n\n***Note:** ClickUp uses the authorization code grant type.*\n\n#### How To Use the ClickUp OAuth2 Flow\n\n1. **Create An OAuth App** - As an admin, navigate to your team settings and click on the `Integrations` section. Once there, click on the icon that is labeled \"ClickUp API\" and create a new app. When you create an app, you will be prompted to enter a name, and at least one redirect url. When your app is created, you will be provided with a `client_id` and a `secret`.\n\n2. **Authorization Code** - You must first retrieve an authorization code from your user before you can get an access token for their account.\n   - To start this process, redirect the user to `https://app.clickup.com/api?client_id={client_id}&redirect_uri={redirect_uri}` with the redirect query parameter set to a redirect uri that you specified when creating the oauth app. The host of the redirect uri must match one of those redirect uris or the request will fail. The protocol will default to https if not provided, and non-ssl redirect uris may not be supported in the future.\n   - Once the user has accepted or rejected the authorization request, they will be redirected back to the `redirect_uri` with the necessary query parameters for getting an access token.\n\n3. **Access Token** - Once you have retrieved the authorization code in the previous step, you can then use the route `POST /api/v2/oauth/token` with the parameters `client_id`, `client_secret` , and `code` to get the user access token. This is the token that is used in the `Authorization` header for all requests in the ClickUp API. Skip to the authorization section below for more information on this route.\n\n4. **Token Teams** - When you redirect your user in step 2 of this flow, they will be prompted which teams (Workspaces) they want to grant you access to. Therefore in order to access a specific Workspace for the user, you need to ensure that they have given you access. You can use the route `GET /api/v2/team` to see which Workspaces they have authorized you to access. If they have not given you access to the appropriate Workspaces, you can redirect them to the authorization code URL from step 2 at any time to reauthorize your app. Below is a screenshot of what the user sees when they visit this URL.\n\n![token_teams](https://attachments3.clickup.com/49988c04-bf0f-42a5-96cc-82ce213b7f5e/token_teams.png)\n\n## Rate Limiting\n\nThe API is rate limited per OAuth and personal token. You will receive a 429 HTTP status code if you exceed the rate limit. The rate limit varies based on [plan](https://clickup.com/expandplans):\n\n- **Free Forever**, **Unlimited**, and **Business Plan**: 100 requests per minute per token\n\n- **Business Plus Plan**: 1,000 requests per minute per token\n\n- **Enterprise Plan**: 10,000 requests per minute per token\n\nLearn more about our [ClickUp Plans](https://clickup.com/pricing).\n\n## Error Handling\n\nErrors responses will return a non-200 status code and a json err message and error code.\n\nCommon errors include:\n\n**`Team not authorized`**: This error is thrown when a team was not authorized by the user for a particular access token. Refer to the `Token Teams` section of the OAuth instructions for more information on how to fix this error. Error codes that are associated with this message include `OAUTH_023`, `OAUTH_026`, `OAUTH_027`, and `OAUTH_029` to `OAUTH_045`\n\n**`Token not found`**: This error is thrown if authorization is revoked by the user, as described in the \"Personal Token\" section. Error codes that are associated with this message include `OAUTH_019`, `OAUTH_021`, `OAUTH_025`, and `OAUTH_077`\n\n**`Authorization Header Required`**: The authorization token was missing in the `Authorization` http header. `OAUTH_017`\n\n**`Client Not Found`**: The client application was not created correctly. `OAUTH_010`\n\n**`Redirect URI not passed`**: The redirect URI was not present during the OAuth authentication flow. Refer to the section \"Create An OAuth App\" to resolve this error. `OAUTH_017`\n\n**`Redirect URI does not match the redirect uris of this application`**: The redirect URI must be registered with your client application. Refer to the section \"Create An OAuth App\" to resolve this error. `OAUTH_007`\n\n## FAQ\n\n> What is `team` in reference to?\n\nTeams is the legacy term for what are now called Workspaces in ClickUp. For compatibility, the term `team` is still used in this API to refer to Workspaces. In our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.\n\n> What `Content-Type` should I use?\n\nWhen formatting your requests to ClickUp, please always use the content type `application/json`. Using form encoded data is not fully supported and can result in unexpected consequences.\n\n> How are projects and Folders related?\n\nProjects are what we used to call Folders in ClickUp V1. If you use the first version of the API, the items that are returned to you as projects are the same as Folders in the second version of the API. You must use the correct nomenclature depending on the version of the API you are using (`project` for V1 and `folder` for V2) and cannot interchange them.\n\n> Does the access token returned from `POST /api/v2/oauth/token` expire?\n\nThe access token does not expire at this time.\n\n> Is it possible to move a task between lists using the API?\n\nIt is not possible to move a task between lists at this time. This is a complicated process, however we hope to implement this on the public API in the near future.\n\n> Will tasks created via API generate notifications?\n\nYes, all actions you take with the public api will trigger all of the same process that would occur through the UI. This includes notifications, websocket messages, webhooks, etc.\n\n> How do I tell who has access to a particular task?\n\nTo get a list of team members that have access to a particular task or list, use the routes `GET /api/v2/task/{{task_id}}/member` and `GET /api/v2/list/{{list_id}}/member` under the \"Members\" section of this documentation.\n\n> How are dates formatted in ClickUp?\n\nClickUp will always display dates in [Unix time](https://en.wikipedia.org/wiki/Unix_time) in milliseconds. You can use a website like [Epoch Converter](https://epochconverter.com) to convert dates between Unix and human readable date formats.\n\n> What timezone does your API use for timestamps?\n\nOur API always returns timestamps in [UTC (Coordinated Universal Time)](https://en.wikipedia.org/wiki/Coordinated_Universal_Time).\n\n> How are subtasks represented in the API?\n\nSubtasks are identical to tasks in every way. Therefore, you can manipulate subtasks the same way you would update any task with the API. To check if a task object is a subtask or not, locate the `parent` property. If this value is `null` then it is not a subtask, otherwise it will contain the task ID of the subtask's parent.\n\nTo create a subtask, use `POST /api/v2/list/:list_id/task` and make sure to set the `parent` property in the body of the request. Similarly, to update or delete existing subtasks, use the routes `PUT /api/v2/task/:task_id` and `DELETE /api/v2/task/:task_id` respectively. To fetch subtasks, get the parent task and add the subtask query param (`GET /api/v2/task/:parent_id?include_subtasks=true`) or use the search team route with that same query param (`GET /api/v2/team/:team_id/task?subtasks=true`).\n\n> How are [User Roles](https://docs.clickup.com/en/articles/966936-user-roles) represented in the API?\n\nUser Roles are included in the `\"role\":` field, with a number corresponding to the User Role shown below.\n\n1: Workspace owner\n\n2: Admin\n\n3: Member\n\n4: Guest\n\n> The code examples shown here aren't working\n\nOur code examples are automatically generated and may require customization for specific coding languages and implementation. They are included for reference purposes only.",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.clickup.com/api/v2",
      "variables": {}
    }
  ],
  "paths": {
    "/task/{task_id}/attachment": {
      "post": {
        "summary": "Create Task Attachment",
        "description": "To post an attachment to ClickUp, you must send the desired file in a `POST` request to the following route. Uploading attachments to ClickUp is one of the only times that you will not use `Content-Type: application/json`, instead you must send the file in the `multipart/form-data` format. Depending on what language you are building your application in, the method of formatting each request is going to look quite different.\n\nIf you are unfamiliar with this request body format, check out this article ([Understanding HTML Form Encoding: URL Encoded and Multipart Forms](https://dev.to/sidthesloth92/understanding-html-form-encoding-url-encoded-and-multipart-forms-3lpa)) which does a great job describing how you would POST an attachment from the browser. It also explains what the raw HTTP request looks like, which is helpful if you are making the request server side.\n\nYou will not be able to add attachments using the Console feature on this website. You can experiment with this endpoint using an app like [Postman](https://www.getpostman.com/). You can easily upload an attachment via `multipart/form-data` with Postman by following these [instructions](https://learning.getpostman.com/docs/postman/sending-api-requests/requests/#form-data).\n\nFinally, we have provided an example of how you would post an attachment with `Node.js`:\n\n```\nconst FormData = require('form-data');\nconst axios = require('axios');\nconst fs = require('fs');\n\nconst form = new FormData();\n\nform.append('filename', '')\nform.append('attachment', fs.createReadStream('./img.png'));\n\nconst headers = form.getHeaders();\n\nheaders.authorization = `Bearer ${your_api_token}`;\n\naxios({\n  method: 'post',\n  url: 'https://api.clickup.com/api/v2/task/123/attachment',\n  data: form,\n  headers,\n})\n  .then(() => console.log('success'))\n  .catch(() => console.log('fail'));\n```\n\n***Note:** Make sure that your file is named `attachment` otherwise the API will not recognize the file.*",
        "operationId": "CreateTaskAttachment",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "example": "attachment: raw_image_file (file)\nfilename: example.png (string)"
              },
              "example": "attachment: raw_image_file (file)\nfilename: example.png (string)"
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskAttachmentresponse"
                },
                "example": {
                  "id": "ac434d4e-8b1c-4571-951b-866b6d9f2ee6.png",
                  "version": "0",
                  "date": 1569988578766,
                  "title": "image.png",
                  "extension": "png",
                  "thumbnail_small": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png",
                  "thumbnail_large": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png",
                  "url": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Get Access Token",
        "description": "These are the routes for authing the API and going through the OAuth flow described above. Applications utilizing the personal API token can skip this section.",
        "operationId": "GetAccessToken",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "description": "Oauth app client id",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_secret",
            "in": "query",
            "description": "Oauth app client secret",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Code given in redirect url",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessTokenresponse"
                },
                "example": {
                  "access_token": "access token"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/user": {
      "get": {
        "summary": "Get Authorized User",
        "description": "These are the routes for authing the API and going through the OAuth flow described above. Applications utilizing the personal API token can skip this section.",
        "operationId": "GetAuthorizedUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthorizedUserresponse"
                },
                "example": {
                  "user": {
                    "id": 123,
                    "username": "John Doe",
                    "color": "#000000",
                    "profilePicture": "https://clickup.com/avatar.jpg"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team": {
      "get": {
        "summary": "Get Authorized Teams",
        "description": "These are the routes for authing the API and going through the OAuth flow described above. Applications utilizing the personal API token can skip this section.",
        "operationId": "GetAuthorizedTeams",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAuthorizedTeamsresponse"
                },
                "example": {
                  "teams": [
                    {
                      "id": "1234",
                      "name": "My ClickUp Workspace",
                      "color": "#000000",
                      "avatar": "https://clickup.com/avatar.jpg",
                      "members": [
                        {
                          "user": {
                            "id": 123,
                            "username": "John Doe",
                            "color": "#000000",
                            "profilePicture": "https://clickup.com/avatar.jpg"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/checklist/": {
      "post": {
        "summary": "Create Checklist",
        "description": "",
        "operationId": "CreateChecklist",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChecklistrequest"
              },
              "example": {
                "name": "Checklist"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChecklistresponse"
                },
                "example": {
                  "checklist": {
                    "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
                    "task_id": "9hz",
                    "name": "Checklist",
                    "orderindex": 0,
                    "resolved": 0,
                    "unresolved": 0,
                    "items": []
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/checklist/{checklist_id}": {
      "put": {
        "summary": "Edit Checklist",
        "description": "",
        "operationId": "EditChecklist",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`position` is the zero-based index of the order you want the checklist to exist on the task. If you want the checklist to be in the first position, pass `{ \"position\": 0 }`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChecklistrequest"
              },
              "example": {
                "name": "Updated Checklist",
                "position": 1
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Checklist",
        "description": "",
        "operationId": "DeleteChecklist",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/checklist/{checklist_id}/checklist_item": {
      "post": {
        "summary": "Create Checklist Item",
        "description": "",
        "operationId": "CreateChecklistItem",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChecklistItemrequest"
              },
              "example": {
                "name": "Checklist Item",
                "assignee": 183
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChecklistItemresponse"
                },
                "example": {
                  "checklist": {
                    "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
                    "task_id": "9hv",
                    "name": "Checklist",
                    "date_created": "1567711563204",
                    "orderindex": 0,
                    "resolved": 0,
                    "unresolved": 1,
                    "items": [
                      {
                        "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
                        "name": "Checklist Item",
                        "orderindex": 0,
                        "assignee": {
                          "id": 183,
                          "username": "John Doe",
                          "email": "example@email.com",
                          "color": "#827718",
                          "initials": "JD",
                          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg"
                        },
                        "resolved": false,
                        "parent": null,
                        "date_created": "1567711566859",
                        "children": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/checklist/{checklist_id}/checklist_item/{checklist_item_id}": {
      "put": {
        "summary": "Edit Checklist Item",
        "description": "",
        "operationId": "EditChecklistItem",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "checklist_item_id",
            "in": "path",
            "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "21e08dc8"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`parent` is another checklist item that you want to nest the target checklist item underneath.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditChecklistItemrequest"
              },
              "example": {
                "name": "Updated Checklist Item",
                "assignee": null,
                "resolved": true,
                "parent": null
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChecklistItemresponse"
                },
                "example": {
                  "checklist": {
                    "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
                    "task_id": "9hv",
                    "name": "Checklist",
                    "date_created": "1567711563204",
                    "orderindex": 0,
                    "resolved": 1,
                    "unresolved": 0,
                    "items": [
                      {
                        "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
                        "name": "Updated Checklist Item",
                        "orderindex": 0,
                        "assignee": null,
                        "resolved": true,
                        "parent": null,
                        "date_created": "1567711566859",
                        "children": []
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Checklist Item",
        "description": "",
        "operationId": "DeleteChecklistItem",
        "parameters": [
          {
            "name": "checklist_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "checklist_item_id",
            "in": "path",
            "description": "e491-47f5-9fd8-d1dc4cedcc6f (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "21e08dc8"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/comment": {
      "post": {
        "summary": "Create Task Comment",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "CreateTaskComment",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "If `notify_all` is true, creation notifications will be sent to everyone including the creator of the comment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskCommentrequest"
              },
              "example": {
                "comment_text": "Task comment content",
                "assignee": 183,
                "notify_all": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskCommentresponse"
                },
                "example": {
                  "id": "458",
                  "hist_id": "26508",
                  "date": 1568036964079
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/view/{view_id}/comment": {
      "post": {
        "summary": "Create Chat View Comment",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "CreateChatViewComment",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "If `notify_all` is true, creation notifications will be sent to everyone including the creator of the comment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChatViewCommentrequest"
              },
              "example": {
                "comment_text": "View comment content",
                "notify_all": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChatViewCommentresponse"
                },
                "example": {
                  "id": "459",
                  "hist_id": "0a45e16e-4e2f-4a9e-99ec-3cf520b87eae",
                  "date": 1568037065216
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/comment": {
      "post": {
        "summary": "Create List Comment",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "CreateListComment",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "If `notify_all` is true, creation notifications will be sent to everyone including the creator of the comment.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListCommentrequest"
              },
              "example": {
                "comment_text": "List comment content",
                "assignee": 183,
                "notify_all": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateListCommentresponse"
                },
                "example": {
                  "id": "462",
                  "hist_id": "5bbea9ad-7cc3-4038-a8bb-a89ac1337c08",
                  "date": 1568037341249
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/comment/": {
      "get": {
        "summary": "Get Task Comments",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "GetTaskComments",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Enter the `date` of a task comment using Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_id",
            "in": "query",
            "description": "Enter the Comment `id` of a task comment",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskCommentsresponse"
                },
                "example": {
                  "comments": [
                    {
                      "id": "458",
                      "comment": [
                        {
                          "text": "Task comment content"
                        }
                      ],
                      "comment_text": "Task comment content",
                      "user": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "resolved": false,
                      "assignee": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "assigned_by": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "reactions": [],
                      "date": "1568036964079"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/view/{view_id}/comment/": {
      "get": {
        "summary": "Get Chat View Comments",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "GetChatViewComments",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Enter the `date` of a Chat view comment using Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_id",
            "in": "query",
            "description": "Enter the Comment `id` of a Chat view comment",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChatViewCommentsresponse"
                },
                "example": {
                  "comments": [
                    {
                      "id": "459",
                      "comment": [
                        {
                          "text": "View comment content"
                        }
                      ],
                      "comment_text": "View comment content",
                      "user": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "resolved": false,
                      "assignee": null,
                      "assigned_by": null,
                      "reactions": [],
                      "date": "1568036964079"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/comment/": {
      "get": {
        "summary": "Get List Comments",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "GetListComments",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "start",
            "in": "query",
            "description": "Enter the `date` of a List info comment using Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_id",
            "in": "query",
            "description": "Enter the Comment `id` of a List info comment",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListCommentsresponse"
                },
                "example": {
                  "comments": [
                    {
                      "id": "462",
                      "comment": [
                        {
                          "text": "List comment content"
                        }
                      ],
                      "comment_text": "List comment content",
                      "user": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "resolved": false,
                      "assignee": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "assigned_by": {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "reactions": [],
                      "date": "1568036964079"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/comment/{comment_id}": {
      "put": {
        "summary": "Update Comment",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "UpdateComment",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 456
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Comment",
        "description": "#####Viewing Comments\n\nBy default, if you do not include the start and start_id parameters, the GET calls will return the most recent 25 comments on the specified task, Chat view, or List.\n\nTo retrieve older comments:\n\nLocate the last (oldest) comment in the response body and add the following values to the parameters of your next call:\n\n- Add the date value to the start parameter\n\n- Add the comment id value to the start_id parameter\n\nBoth parameters are required to retrieve the next 25 comments. Repeat as needed to page through all task comments.\n\nWhen you've reached the final page of comments, you'll either have less than 25 comments in the response, or when you send the next call with the start and start_id parameters, you'll receieve the following response:\n\n```json\n{\n\"comments\": []\n}\n```\n\n####Adding Comments with Formatting and emoji\n\nYou can create and update Task Comments and Chat View Comments using text formatting and emoji.\n\n#####Plain text\n\nYou can also use `\"comment_text\": \"This is a comment\"` if you are simply adding a plain text comment, as shown in the actual API calls below.\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"plain text\",\n        \"attributes\": {}\n        }\n    ]\n}\n```\n\n#####Bold text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bold text\",\n        \"attributes\": {\n            \"bold\": true\n            }\n        }\n    ]\n}\n```\n\n#####Italicized text\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"italics\",\n        \"attributes\": {\n            \"italic\": true\n            }\n        }\n    ]\n}\n```\n\n#####Inline Code\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"inline code\",\n        \"attributes\": {\n            \"code\": true\n            }\n        }\n    ]\n}\n```\n\n#####Code Block\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"code block\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"code-block\": {\n                \"code-block\": \"plain\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Bulleted list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"bulleted list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"bullet\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Numbered list\n\n```json\n{\n    \"comment\": [\n        {\n        \"text\": \"numbered list\",\n        \"attributes\": {}\n        },\n        {\n        \"text\":\"/n\",\n        \"attributes\": \n            {\n            \"list\": {\n                \"list\": \"ordered\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Checklist\n\n```json\n{\n    \"comment\": [\n        {\n            \"text\": \"Checklist\",\n            \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"unchecked\"\n                }\n            }\n        },\n        {\n        \"text\": \"Checked item\",\n        \"attributes\": {}\n        },\n        {\n        \"text\": \"\\n\",\n        \"attributes\": {\n            \"list\": {\n                \"list\": \"checked\"\n                }\n            }\n        }\n    ]\n}\n```\n\n#####Emoji\n\nThe `code` property must be a valid Unicode emoji value, often written like `U+1f60a`. Please omit the `U+` and only pass the hex value of the code as a string.\n\n```json\n{\n    \"comment\":\n    [\n        {\n        \"text\": \"😊\",\n        \"type\": \"emoticon\",\n        \"emoticon\": \n            {\n            \"code\": \"1f60a\"\n            }\n        }\n    ]\n}\n```",
        "operationId": "DeleteComment",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 456
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/field": {
      "get": {
        "summary": "Get Accessible Custom Fields",
        "description": "#### Field Types\n\nBelow are a list of field types that are available for you to use with the public API. For most use cases, you will use the `string` value to specify a type, such as `drop_down` or `number`. In a few instances, you may be returned an `integer` value. A map to each for each type is provided below.\n\n```json\n{\n    \"url\": 0,\n    \"drop_down\": 1,\n    \"email\": 2,\n    \"phone\": 3,\n    \"date\": 4,\n    \"text\": 5,\n    \"checkbox\": 6,\n    \"number\": 7,\n    \"currency\": 8,\n    \"tasks\": 9,\n    \"users\": 10,\n    \"emoji\": 11,\n    \"labels\": 13,\n    \"automatic_progress\": 14,\n    \"manual_progress\": 15,\n    \"short_text\": 16,\n    \"location\": 17\n}\n```\n\n***Note:** In the ClickUp UI, the `text` is displayed as \"Long Text\" and `short_text` is displayed as \"Text\".*\n\n#### The Field Object\n\n```json\n{\n    \"id\": \"5dc86497-098d-4bb0-87d6-cf28e43812e7\",\n    \"name\": \"Text Field\",\n    \"type\": \"text\",\n    \"type_config\": {},\n    \"date_created\": \"1577378759142\",\n    \"hide_from_guests\": false\n}\n```\n\n#### Type Config\n\nThe `type_config` property is used to set configurations that are specific to a certain field type.\n\n##### Drop Down\n\nThe drop down options exist in the `options` array, their order is determined by their array index. A `placeholder` value (string) and `default` option are available, but are not currently in use on the front end.\n\n```json\n{\n    \"name\": \"My Drop Down Field\",\n    \"type\": \"drop_down\",\n    \"type_config\": {\n        \"default\": 0,\n        \"placeholder\": \"Select a value\",\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 1\",\n                \"color\": \"#FFFFF\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 2\",\n                \"color\": \"#000000\"\n            }\n        ]\n    }\n}\n```\n\n##### Currency\n\nThe `default` option is available, but not currently in use by the FE.\n\n```json\n{\n    \"name\": \"My Currency Field\",\n    \"type\": \"currency\",\n    \"type_config\": {\n        \"precision\": 2,\n        \"currency_type\": \"USD\",\n        \"default\": 10\n    }\n}\n```\n\n##### Emoji\n\nThe `code_point` property must be a valid Unicode **emoji** code point value, many times written like `U+1f613`. Please omit the `U+` and only pass the hex value of the code point as a string. The `count` property denotes how many emoji values the rating can hold (min 1, max 5).\n\n```json\n{\n    \"name\": \"My Emoji Rating Field\",\n    \"type\": \"emoji\",\n    \"type_config\": {\n        \"code_point\": \"1f613\",\n        \"count\": 5\n    }\n}\n```\n\n##### Labels\n\nLabels is very similar to drop down, except you can set multiple option values.\n\n```json\n{\n    \"name\": \"My Label Field\",\n    \"type\": \"labels\",\n    \"type_config\": {\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 1\",\n                \"color\": \"#123456\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 2\",\n                \"color\": \"#FFFFFF\"\n            }\n        ]\n    }\n}\n```\n\n##### Automatic Progress\n\n```json\n{\n    \"name\": \"Automatic Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"automatic\",\n        \"tracking\": {\n            \"subtasks\": true,\n            \"assigned_comments\": true,\n            \"checklists\": true\n        }\n    }\n}\n```\n\n##### Manual Progress\n\n```json\n{\n    \"name\": \"Manual Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"manual\",\n        \"start\": 0,\n        \"end\": 100\n    }\n}\n```\n\n#### Field Values\n\nTo set a field value on a task use the route `POST /api/v2/task/{{task_id}}/field/{{field_id}}`. The request will always require the body `{ value: ... }` with the type of value being dependent on what type of field it is.\n\n##### Url\n\nThe value must be a string and a valid url\n\n```json\n{ \"value\": \"https://clickup.com\" }\n```\n\n##### Drop Down\n\nThe value must be a UUID that matches the drop down option that you retrieve from `type_config`\n\n```json\n{ \"value\": \"UUID\" }\n```\n\n##### Email\n\nThe value must be a string and a valid email.\n\n```json\n{ \"value\": \"lana@clickup.com\" }\n```\n\n##### Phone\n\nThe value must be a string and a valid phone number with country code.\n\n```json\n{ \"value\": \"+1 123 456 7890\" }\n```\n\n##### Date\n\nThe `\"value\"` must be Unix time in milliseconds. By default, or if you include `\"time\": false` only the date is displayed in the ClickUp UI. To display the time in the ClickUp UI, include `\"time\": true` as shown in the example below.\n\n***Note:** When requesting tasks that include a Date Custom Field (such as when using `GET task` or other calls) but that do not include or display a time in the ClickUp UI, the API will return a value in Unix time in milliseconds of 4:00 am in the authorized user's timezone.*\n\n```json\n{ \n    \"value\": 1565993299379 \n    \"value_options\": {\n        \"time\": true\n    }\n}\n```\n\n##### Text\n\nThe value must be a string\n\n```json\n{ \"value\": \"Some text\" }\n```\n\n##### Checkbox\n\nThe value must be a boolean\n\n```json\n{ \"value\": true }\n```\n\n##### Number\n\nThe value must be a number\n\n```json\n{ \"value\": -28 }\n```\n\n##### Currency\n\nThe value must be a number.\n\n```json\n{ \"value\": 80000 }\n```\n\n##### Tasks\n\nThe value must be an object with the following format. The task_ids in `add` will get added to the field, and the task_ids in `rem` will be removed. The user must have access to all of the tasks in the request.\n\n```json\n{\n    \"value\": {\n        \"add\": [\"wmq3\", \"qt15\"],\n        \"rem\": [\"wxm7\"]\n    }\n}\n```\n\n##### Users\n\nThe value must be an object with the following format. The users in `add` will get added to the field, and the users in `rem` will be removed.\n\n```json\n{\n    \"value\": {\n        \"add\": [184, 193],\n        \"rem\": [183]\n    }\n}\n```\n\n##### Filter by Users\n\nTo filter by users with the GET Filtered Team Tasks endpoint, input each `user_id` as an array into the `value` parameter.\n\n```json\n{\n   \"field_id\":\"bd12538-4cf0-51f3-13h1-a1c0bedae3f7\",\n   \"operator\":\"ANY\",\n   \"value\":[123456,765432]\n}\n```\n\n##### Emoji\n\nThe value must be an integer that meets the following condition: `0 <= value >= field.type_config.count`.\n\n```json\n{\n    \"value\": 4\n}\n```\n\n##### Automatic Progress\n\nTask value is automatically calculated for each task, trying to set a value will error.\n\n##### Manual Progress\n\nIf the field is manual progress, the value must be and object with the **current** value of the progress. For example, if your start and end is `10` and `30` respectively, you would need to pass `20` to make the progress bar at `50%`.\n\n```json\n{\n    \"value\": {\n        \"current\": 20\n    }\n}\n```\n\n##### Labels\n\nThe value must be an object with the following format. The UUID's for each label must come from the field's type_config. Any labels that currently exist will be overridden.\n\n```json\n{\n    \"value\": [\"UUID_1\", \"UUID_2\"]\n}\n```\n\n##### Location\n\nYou must provide the latitude `lat`, longitude `lng`, and `formatted address` per [Google Maps Geocoding API](https://developers.google.com/maps/documentation/geocoding/overview?hl=en).\n\n```json\n{\n    \"value\": {\n        \"location\":{\n            \"lat\": -28.016667,\n            \"lng\": 153.4\n            },\n        \"formatted_address\": \"Gold Coast QLD, Australia\"\n        }\n}\n```",
        "operationId": "GetAccessibleCustomFields",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccessibleCustomFieldsresponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/field/{field_id}/": {
      "post": {
        "summary": "Set Custom Field Value",
        "description": "#### Field Types\n\nBelow are a list of field types that are available for you to use with the public API. For most use cases, you will use the `string` value to specify a type, such as `drop_down` or `number`. In a few instances, you may be returned an `integer` value. A map to each for each type is provided below.\n\n```json\n{\n    \"url\": 0,\n    \"drop_down\": 1,\n    \"email\": 2,\n    \"phone\": 3,\n    \"date\": 4,\n    \"text\": 5,\n    \"checkbox\": 6,\n    \"number\": 7,\n    \"currency\": 8,\n    \"tasks\": 9,\n    \"users\": 10,\n    \"emoji\": 11,\n    \"labels\": 13,\n    \"automatic_progress\": 14,\n    \"manual_progress\": 15,\n    \"short_text\": 16,\n    \"location\": 17\n}\n```\n\n***Note:** In the ClickUp UI, the `text` is displayed as \"Long Text\" and `short_text` is displayed as \"Text\".*\n\n#### The Field Object\n\n```json\n{\n    \"id\": \"5dc86497-098d-4bb0-87d6-cf28e43812e7\",\n    \"name\": \"Text Field\",\n    \"type\": \"text\",\n    \"type_config\": {},\n    \"date_created\": \"1577378759142\",\n    \"hide_from_guests\": false\n}\n```\n\n#### Type Config\n\nThe `type_config` property is used to set configurations that are specific to a certain field type.\n\n##### Drop Down\n\nThe drop down options exist in the `options` array, their order is determined by their array index. A `placeholder` value (string) and `default` option are available, but are not currently in use on the front end.\n\n```json\n{\n    \"name\": \"My Drop Down Field\",\n    \"type\": \"drop_down\",\n    \"type_config\": {\n        \"default\": 0,\n        \"placeholder\": \"Select a value\",\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 1\",\n                \"color\": \"#FFFFF\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 2\",\n                \"color\": \"#000000\"\n            }\n        ]\n    }\n}\n```\n\n##### Currency\n\nThe `default` option is available, but not currently in use by the FE.\n\n```json\n{\n    \"name\": \"My Currency Field\",\n    \"type\": \"currency\",\n    \"type_config\": {\n        \"precision\": 2,\n        \"currency_type\": \"USD\",\n        \"default\": 10\n    }\n}\n```\n\n##### Emoji\n\nThe `code_point` property must be a valid Unicode **emoji** code point value, many times written like `U+1f613`. Please omit the `U+` and only pass the hex value of the code point as a string. The `count` property denotes how many emoji values the rating can hold (min 1, max 5).\n\n```json\n{\n    \"name\": \"My Emoji Rating Field\",\n    \"type\": \"emoji\",\n    \"type_config\": {\n        \"code_point\": \"1f613\",\n        \"count\": 5\n    }\n}\n```\n\n##### Labels\n\nLabels is very similar to drop down, except you can set multiple option values.\n\n```json\n{\n    \"name\": \"My Label Field\",\n    \"type\": \"labels\",\n    \"type_config\": {\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 1\",\n                \"color\": \"#123456\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 2\",\n                \"color\": \"#FFFFFF\"\n            }\n        ]\n    }\n}\n```\n\n##### Automatic Progress\n\n```json\n{\n    \"name\": \"Automatic Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"automatic\",\n        \"tracking\": {\n            \"subtasks\": true,\n            \"assigned_comments\": true,\n            \"checklists\": true\n        }\n    }\n}\n```\n\n##### Manual Progress\n\n```json\n{\n    \"name\": \"Manual Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"manual\",\n        \"start\": 0,\n        \"end\": 100\n    }\n}\n```\n\n#### Field Values\n\nTo set a field value on a task use the route `POST /api/v2/task/{{task_id}}/field/{{field_id}}`. The request will always require the body `{ value: ... }` with the type of value being dependent on what type of field it is.\n\n##### Url\n\nThe value must be a string and a valid url\n\n```json\n{ \"value\": \"https://clickup.com\" }\n```\n\n##### Drop Down\n\nThe value must be a UUID that matches the drop down option that you retrieve from `type_config`\n\n```json\n{ \"value\": \"UUID\" }\n```\n\n##### Email\n\nThe value must be a string and a valid email.\n\n```json\n{ \"value\": \"lana@clickup.com\" }\n```\n\n##### Phone\n\nThe value must be a string and a valid phone number with country code.\n\n```json\n{ \"value\": \"+1 123 456 7890\" }\n```\n\n##### Date\n\nThe `\"value\"` must be Unix time in milliseconds. By default, or if you include `\"time\": false` only the date is displayed in the ClickUp UI. To display the time in the ClickUp UI, include `\"time\": true` as shown in the example below.\n\n***Note:** When requesting tasks that include a Date Custom Field (such as when using `GET task` or other calls) but that do not include or display a time in the ClickUp UI, the API will return a value in Unix time in milliseconds of 4:00 am in the authorized user's timezone.*\n\n```json\n{ \n    \"value\": 1565993299379 \n    \"value_options\": {\n        \"time\": true\n    }\n}\n```\n\n##### Text\n\nThe value must be a string\n\n```json\n{ \"value\": \"Some text\" }\n```\n\n##### Checkbox\n\nThe value must be a boolean\n\n```json\n{ \"value\": true }\n```\n\n##### Number\n\nThe value must be a number\n\n```json\n{ \"value\": -28 }\n```\n\n##### Currency\n\nThe value must be a number.\n\n```json\n{ \"value\": 80000 }\n```\n\n##### Tasks\n\nThe value must be an object with the following format. The task_ids in `add` will get added to the field, and the task_ids in `rem` will be removed. The user must have access to all of the tasks in the request.\n\n```json\n{\n    \"value\": {\n        \"add\": [\"wmq3\", \"qt15\"],\n        \"rem\": [\"wxm7\"]\n    }\n}\n```\n\n##### Users\n\nThe value must be an object with the following format. The users in `add` will get added to the field, and the users in `rem` will be removed.\n\n```json\n{\n    \"value\": {\n        \"add\": [184, 193],\n        \"rem\": [183]\n    }\n}\n```\n\n##### Filter by Users\n\nTo filter by users with the GET Filtered Team Tasks endpoint, input each `user_id` as an array into the `value` parameter.\n\n```json\n{\n   \"field_id\":\"bd12538-4cf0-51f3-13h1-a1c0bedae3f7\",\n   \"operator\":\"ANY\",\n   \"value\":[123456,765432]\n}\n```\n\n##### Emoji\n\nThe value must be an integer that meets the following condition: `0 <= value >= field.type_config.count`.\n\n```json\n{\n    \"value\": 4\n}\n```\n\n##### Automatic Progress\n\nTask value is automatically calculated for each task, trying to set a value will error.\n\n##### Manual Progress\n\nIf the field is manual progress, the value must be and object with the **current** value of the progress. For example, if your start and end is `10` and `30` respectively, you would need to pass `20` to make the progress bar at `50%`.\n\n```json\n{\n    \"value\": {\n        \"current\": 20\n    }\n}\n```\n\n##### Labels\n\nThe value must be an object with the following format. The UUID's for each label must come from the field's type_config. Any labels that currently exist will be overridden.\n\n```json\n{\n    \"value\": [\"UUID_1\", \"UUID_2\"]\n}\n```\n\n##### Location\n\nYou must provide the latitude `lat`, longitude `lng`, and `formatted address` per [Google Maps Geocoding API](https://developers.google.com/maps/documentation/geocoding/overview?hl=en).\n\n```json\n{\n    \"value\": {\n        \"location\":{\n            \"lat\": -28.016667,\n            \"lng\": 153.4\n            },\n        \"formatted_address\": \"Gold Coast QLD, Australia\"\n        }\n}\n```",
        "operationId": "SetCustomFieldValue",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "The accessible fields can be found on the task object from the get task route. This is where you can retrieve the `field_id`.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetCustomFieldValuerequest"
              },
              "example": {
                "value": 80
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Custom Field Value",
        "description": "#### Field Types\n\nBelow are a list of field types that are available for you to use with the public API. For most use cases, you will use the `string` value to specify a type, such as `drop_down` or `number`. In a few instances, you may be returned an `integer` value. A map to each for each type is provided below.\n\n```json\n{\n    \"url\": 0,\n    \"drop_down\": 1,\n    \"email\": 2,\n    \"phone\": 3,\n    \"date\": 4,\n    \"text\": 5,\n    \"checkbox\": 6,\n    \"number\": 7,\n    \"currency\": 8,\n    \"tasks\": 9,\n    \"users\": 10,\n    \"emoji\": 11,\n    \"labels\": 13,\n    \"automatic_progress\": 14,\n    \"manual_progress\": 15,\n    \"short_text\": 16,\n    \"location\": 17\n}\n```\n\n***Note:** In the ClickUp UI, the `text` is displayed as \"Long Text\" and `short_text` is displayed as \"Text\".*\n\n#### The Field Object\n\n```json\n{\n    \"id\": \"5dc86497-098d-4bb0-87d6-cf28e43812e7\",\n    \"name\": \"Text Field\",\n    \"type\": \"text\",\n    \"type_config\": {},\n    \"date_created\": \"1577378759142\",\n    \"hide_from_guests\": false\n}\n```\n\n#### Type Config\n\nThe `type_config` property is used to set configurations that are specific to a certain field type.\n\n##### Drop Down\n\nThe drop down options exist in the `options` array, their order is determined by their array index. A `placeholder` value (string) and `default` option are available, but are not currently in use on the front end.\n\n```json\n{\n    \"name\": \"My Drop Down Field\",\n    \"type\": \"drop_down\",\n    \"type_config\": {\n        \"default\": 0,\n        \"placeholder\": \"Select a value\",\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 1\",\n                \"color\": \"#FFFFF\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"name\": \"Option 2\",\n                \"color\": \"#000000\"\n            }\n        ]\n    }\n}\n```\n\n##### Currency\n\nThe `default` option is available, but not currently in use by the FE.\n\n```json\n{\n    \"name\": \"My Currency Field\",\n    \"type\": \"currency\",\n    \"type_config\": {\n        \"precision\": 2,\n        \"currency_type\": \"USD\",\n        \"default\": 10\n    }\n}\n```\n\n##### Emoji\n\nThe `code_point` property must be a valid Unicode **emoji** code point value, many times written like `U+1f613`. Please omit the `U+` and only pass the hex value of the code point as a string. The `count` property denotes how many emoji values the rating can hold (min 1, max 5).\n\n```json\n{\n    \"name\": \"My Emoji Rating Field\",\n    \"type\": \"emoji\",\n    \"type_config\": {\n        \"code_point\": \"1f613\",\n        \"count\": 5\n    }\n}\n```\n\n##### Labels\n\nLabels is very similar to drop down, except you can set multiple option values.\n\n```json\n{\n    \"name\": \"My Label Field\",\n    \"type\": \"labels\",\n    \"type_config\": {\n        \"options\": [\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 1\",\n                \"color\": \"#123456\"\n            },\n            {\n                \"id\": \"UUID\",\n                \"label\": \"Label 2\",\n                \"color\": \"#FFFFFF\"\n            }\n        ]\n    }\n}\n```\n\n##### Automatic Progress\n\n```json\n{\n    \"name\": \"Automatic Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"automatic\",\n        \"tracking\": {\n            \"subtasks\": true,\n            \"assigned_comments\": true,\n            \"checklists\": true\n        }\n    }\n}\n```\n\n##### Manual Progress\n\n```json\n{\n    \"name\": \"Manual Progress Bar\",\n    \"type\": \"progress\",\n    \"type_config\": {\n        \"method\": \"manual\",\n        \"start\": 0,\n        \"end\": 100\n    }\n}\n```\n\n#### Field Values\n\nTo set a field value on a task use the route `POST /api/v2/task/{{task_id}}/field/{{field_id}}`. The request will always require the body `{ value: ... }` with the type of value being dependent on what type of field it is.\n\n##### Url\n\nThe value must be a string and a valid url\n\n```json\n{ \"value\": \"https://clickup.com\" }\n```\n\n##### Drop Down\n\nThe value must be a UUID that matches the drop down option that you retrieve from `type_config`\n\n```json\n{ \"value\": \"UUID\" }\n```\n\n##### Email\n\nThe value must be a string and a valid email.\n\n```json\n{ \"value\": \"lana@clickup.com\" }\n```\n\n##### Phone\n\nThe value must be a string and a valid phone number with country code.\n\n```json\n{ \"value\": \"+1 123 456 7890\" }\n```\n\n##### Date\n\nThe `\"value\"` must be Unix time in milliseconds. By default, or if you include `\"time\": false` only the date is displayed in the ClickUp UI. To display the time in the ClickUp UI, include `\"time\": true` as shown in the example below.\n\n***Note:** When requesting tasks that include a Date Custom Field (such as when using `GET task` or other calls) but that do not include or display a time in the ClickUp UI, the API will return a value in Unix time in milliseconds of 4:00 am in the authorized user's timezone.*\n\n```json\n{ \n    \"value\": 1565993299379 \n    \"value_options\": {\n        \"time\": true\n    }\n}\n```\n\n##### Text\n\nThe value must be a string\n\n```json\n{ \"value\": \"Some text\" }\n```\n\n##### Checkbox\n\nThe value must be a boolean\n\n```json\n{ \"value\": true }\n```\n\n##### Number\n\nThe value must be a number\n\n```json\n{ \"value\": -28 }\n```\n\n##### Currency\n\nThe value must be a number.\n\n```json\n{ \"value\": 80000 }\n```\n\n##### Tasks\n\nThe value must be an object with the following format. The task_ids in `add` will get added to the field, and the task_ids in `rem` will be removed. The user must have access to all of the tasks in the request.\n\n```json\n{\n    \"value\": {\n        \"add\": [\"wmq3\", \"qt15\"],\n        \"rem\": [\"wxm7\"]\n    }\n}\n```\n\n##### Users\n\nThe value must be an object with the following format. The users in `add` will get added to the field, and the users in `rem` will be removed.\n\n```json\n{\n    \"value\": {\n        \"add\": [184, 193],\n        \"rem\": [183]\n    }\n}\n```\n\n##### Filter by Users\n\nTo filter by users with the GET Filtered Team Tasks endpoint, input each `user_id` as an array into the `value` parameter.\n\n```json\n{\n   \"field_id\":\"bd12538-4cf0-51f3-13h1-a1c0bedae3f7\",\n   \"operator\":\"ANY\",\n   \"value\":[123456,765432]\n}\n```\n\n##### Emoji\n\nThe value must be an integer that meets the following condition: `0 <= value >= field.type_config.count`.\n\n```json\n{\n    \"value\": 4\n}\n```\n\n##### Automatic Progress\n\nTask value is automatically calculated for each task, trying to set a value will error.\n\n##### Manual Progress\n\nIf the field is manual progress, the value must be and object with the **current** value of the progress. For example, if your start and end is `10` and `30` respectively, you would need to pass `20` to make the progress bar at `50%`.\n\n```json\n{\n    \"value\": {\n        \"current\": 20\n    }\n}\n```\n\n##### Labels\n\nThe value must be an object with the following format. The UUID's for each label must come from the field's type_config. Any labels that currently exist will be overridden.\n\n```json\n{\n    \"value\": [\"UUID_1\", \"UUID_2\"]\n}\n```\n\n##### Location\n\nYou must provide the latitude `lat`, longitude `lng`, and `formatted address` per [Google Maps Geocoding API](https://developers.google.com/maps/documentation/geocoding/overview?hl=en).\n\n```json\n{\n    \"value\": {\n        \"location\":{\n            \"lat\": -28.016667,\n            \"lng\": 153.4\n            },\n        \"formatted_address\": \"Gold Coast QLD, Australia\"\n        }\n}\n```",
        "operationId": "RemoveCustomFieldValue",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "b8a8-48d8-a0c6-b4200788a683 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "b955c4dc"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/dependency/": {
      "post": {
        "summary": "Add Dependency",
        "description": "",
        "operationId": "AddDependency",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "To create a waiting on dependency, pass the property `depends_on` in the body. To create a blocking dependency, pass the property `dependency_of`. Both can not be passed in the same request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDependencyrequest"
              },
              "example": {
                "depends_on": "9hw"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/dependency": {
      "delete": {
        "summary": "Delete Dependency",
        "description": "",
        "operationId": "DeleteDependency",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "depends_on",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "dependency_of",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/link/{links_to}/": {
      "post": {
        "summary": "Add Task Link",
        "description": "",
        "operationId": "AddTaskLink",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "links_to",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskLinkresponse"
                },
                "example": {
                  "task": {
                    "id": "9hv",
                    "name": "Task Name",
                    "status": {
                      "status": "in progress",
                      "color": "#d3d3d3",
                      "orderindex": 1,
                      "type": "custom"
                    },
                    "orderindex": "1.00000000000000000000000000000000",
                    "date_created": "1567780450202",
                    "date_updated": "1567780450202",
                    "date_closed": null,
                    "creator": {
                      "id": 183,
                      "username": "John Doe",
                      "color": "#827718",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                    },
                    "assignees": [],
                    "checklists": [],
                    "tags": [],
                    "parent": null,
                    "priority": null,
                    "due_date": null,
                    "start_date": null,
                    "time_estimate": null,
                    "time_spent": null,
                    "list": {
                      "id": "123"
                    },
                    "folder": {
                      "id": "456"
                    },
                    "space": {
                      "id": "789"
                    },
                    "linked_tasks": [
                      {
                        "task_id": "9hv",
                        "link_id": "9hz",
                        "date_created": "1587571108988",
                        "userid": "183"
                      }
                    ],
                    "url": "https://app.clickup.com/t/9hx"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Task Link",
        "description": "",
        "operationId": "DeleteTaskLink",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "links_to",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskLinkresponse"
                },
                "example": {
                  "task": {
                    "id": "9hv",
                    "name": "Task Name",
                    "status": {
                      "status": "in progress",
                      "color": "#d3d3d3",
                      "orderindex": 1,
                      "type": "custom"
                    },
                    "orderindex": "1.00000000000000000000000000000000",
                    "date_created": "1567780450202",
                    "date_updated": "1567780450202",
                    "date_closed": null,
                    "creator": {
                      "id": 183,
                      "username": "John Doe",
                      "color": "#827718",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                    },
                    "assignees": [],
                    "checklists": [],
                    "tags": [],
                    "parent": null,
                    "priority": null,
                    "due_date": null,
                    "start_date": null,
                    "time_estimate": null,
                    "time_spent": null,
                    "list": {
                      "id": "123"
                    },
                    "folder": {
                      "id": "456"
                    },
                    "space": {
                      "id": "789"
                    },
                    "linked_tasks": [],
                    "url": "https://app.clickup.com/t/9hx"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}/folder": {
      "post": {
        "summary": "Create Folder",
        "description": "",
        "operationId": "CreateFolder",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 789
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderrequest"
              },
              "example": {
                "name": "New Folder Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderresponse"
                },
                "example": {
                  "id": "457",
                  "name": "New Folder Name",
                  "orderindex": 0,
                  "override_statuses": false,
                  "hidden": false,
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "task_count": "0"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Folders",
        "description": "",
        "operationId": "GetFolders",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 789
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetFoldersresponse"
                  },
                  "description": "",
                  "example": [
                    {
                      "id": "457",
                      "name": "Updated Folder Name",
                      "orderindex": 0,
                      "override_statuses": false,
                      "hidden": false,
                      "space": {
                        "id": "789",
                        "name": "Space Name",
                        "access": true
                      },
                      "task_count": "0",
                      "lists": []
                    },
                    {
                      "id": "458",
                      "name": "Second Folder Name",
                      "orderindex": 1,
                      "override_statuses": false,
                      "hidden": false,
                      "space": {
                        "id": "789",
                        "name": "Space Name",
                        "access": true
                      },
                      "task_count": "0",
                      "lists": []
                    }
                  ]
                },
                "example": [
                  {
                    "id": "457",
                    "name": "Updated Folder Name",
                    "orderindex": 0,
                    "override_statuses": false,
                    "hidden": false,
                    "space": {
                      "id": "789",
                      "name": "Space Name",
                      "access": true
                    },
                    "task_count": "0",
                    "lists": []
                  },
                  {
                    "id": "458",
                    "name": "Second Folder Name",
                    "orderindex": 1,
                    "override_statuses": false,
                    "hidden": false,
                    "space": {
                      "id": "789",
                      "name": "Space Name",
                      "access": true
                    },
                    "task_count": "0",
                    "lists": []
                  }
                ]
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/folder/{folder_id}": {
      "put": {
        "summary": "Update Folder",
        "description": "",
        "operationId": "UpdateFolder",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 457
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderrequest"
              },
              "example": {
                "name": "Updated Folder Name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFolderresponse"
                },
                "example": {
                  "id": "457",
                  "name": "Updated Folder Name",
                  "orderindex": 0,
                  "override_statuses": false,
                  "hidden": false,
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "task_count": "0"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Folder",
        "description": "",
        "operationId": "DeleteFolder",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 457
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Folder",
        "description": "",
        "operationId": "GetFolder",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 457
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFolderresponse"
                },
                "example": {
                  "id": "457",
                  "name": "Updated Folder Name",
                  "orderindex": 0,
                  "override_statuses": false,
                  "hidden": false,
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "task_count": "0",
                  "lists": []
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/goal": {
      "post": {
        "summary": "Create Goal",
        "description": "",
        "operationId": "CreateGoal",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGoalrequest"
              },
              "example": {
                "name": "Goal Name",
                "due_date": 1568036964079,
                "description": "Goal Description",
                "multiple_owners": true,
                "owners": [
                  183
                ],
                "color": "#32a852"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGoalresponse"
                },
                "example": {
                  "goal": {
                    "id": "e53a033c-900e-462d-a849-4a216b06d930",
                    "name": "Goal Name",
                    "team_id": "512",
                    "date_created": "1568044355026",
                    "start_date": null,
                    "due_date": "1568036964079",
                    "description": "Goal Description",
                    "private": false,
                    "archived": false,
                    "creator": 183,
                    "color": "#32a852",
                    "pretty_id": "6",
                    "multiple_owners": true,
                    "folder_id": null,
                    "members": [],
                    "owners": [
                      {
                        "id": 183,
                        "username": "John Doe",
                        "initials": "JD",
                        "email": "johndoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      }
                    ],
                    "key_results": [],
                    "percent_completed": 0,
                    "history": [],
                    "pretty_url": "https://app.clickup.com/512/goals/6"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Goals",
        "description": "",
        "operationId": "GetGoals",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "include_completed",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGoalsresponse"
                },
                "example": {
                  "goals": [
                    {
                      "id": "e53a033c-900e-462d-a849-4a216b06d930",
                      "pretty_id": "6",
                      "name": "Goal ABC",
                      "team_id": "512",
                      "creator": 182,
                      "owner": null,
                      "color": "#32a852",
                      "date_created": "1568044355026",
                      "start_date": null,
                      "due_date": "1568036964079",
                      "description": "Updated Goal Description",
                      "private": false,
                      "archived": false,
                      "multiple_owners": true,
                      "editor_token": "goal:792c3027-83a2-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485ed15e675",
                      "date_updated": "1626130440221",
                      "last_update": "1626132992152",
                      "folder_id": null,
                      "pinned": false,
                      "owners": [],
                      "key_result_count": 1,
                      "members": [
                        {
                          "id": 182,
                          "username": "Jane Doe",
                          "email": "janedoe@gmail.com",
                          "color": "#827718",
                          "permission_level": "edit",
                          "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
                          "initials": "JD",
                          "isCreator": true
                        }
                      ],
                      "group_members": [],
                      "percent_completed": 0
                    }
                  ],
                  "folders": [
                    {
                      "id": "05921253-7737-44af-a1aa-36fd11244e6f",
                      "name": "Quarterly Goals",
                      "team_id": "512",
                      "private": true,
                      "date_created": "1548802674671",
                      "creator": 182,
                      "goal_count": 1,
                      "members": [
                        {
                          "id": 182,
                          "email": "janedoe@gmail.com",
                          "username": "Jane Doe",
                          "color": "#827718",
                          "permission_level": "read",
                          "date_added": 1631599941928,
                          "added_by": 183,
                          "initials": "JD",
                          "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg"
                        }
                      ],
                      "goals": [
                        {
                          "id": "e53a033c-900e-462d-a849-4a216b06d930",
                          "pretty_id": "8",
                          "name": "Q1 Goals",
                          "team_id": "512",
                          "creator": 182,
                          "owner": null,
                          "color": "#32a852",
                          "date_created": "1568044355026",
                          "start_date": null,
                          "due_date": "1568036964079",
                          "description": "Goal for Q1",
                          "private": false,
                          "archived": false,
                          "multiple_owners": true,
                          "editor_token": "goal:792c3027-83b5-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485fc22d477",
                          "date_updated": "1626130440221",
                          "last_update": "1626132992152",
                          "folder_id": "05921253-7737-44af-a1aa-36fd11244e6f",
                          "folder_access": true,
                          "pinned": false,
                          "owners": [],
                          "key_result_count": 1,
                          "members": [
                            {
                              "id": 182,
                              "username": "Jane Doe",
                              "email": "janedoe@gmail.com",
                              "color": "#827718",
                              "permission_level": "edit",
                              "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
                              "initials": "JD",
                              "isCreator": true
                            }
                          ],
                          "group_members": [],
                          "percent_completed": 1
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/goal/{goal_id}": {
      "put": {
        "summary": "Update Goal",
        "description": "",
        "operationId": "UpdateGoal",
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e53a033c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateGoalresponse"
                },
                "example": {
                  "goal": {
                    "id": "e53a033c-900e-462d-a849-4a216b06d930",
                    "name": "Updated Goal Name",
                    "team_id": "512",
                    "date_created": "1568044355026",
                    "start_date": null,
                    "due_date": "1568036964079",
                    "description": "Updated Goal Description",
                    "private": false,
                    "archived": false,
                    "creator": 183,
                    "color": "#32a852",
                    "pretty_id": "6",
                    "multiple_owners": true,
                    "folder_id": null,
                    "members": [],
                    "owners": [
                      {
                        "id": 182,
                        "username": "Jane Doe",
                        "initials": "JD",
                        "email": "janedoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/182_abc.jpg"
                      }
                    ],
                    "key_results": [],
                    "percent_completed": 0,
                    "history": [],
                    "pretty_url": "https://app.clickup.com/512/goals/6"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Goal",
        "description": "",
        "operationId": "DeleteGoal",
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e53a033c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Goal",
        "description": "",
        "operationId": "GetGoal",
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e53a033c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGoalresponse"
                },
                "example": {
                  "goal": {
                    "id": "e53a033c-900e-462d-a849-4a216b06d930",
                    "name": "Updated Goal Name",
                    "team_id": "512",
                    "date_created": "1568044355026",
                    "start_date": null,
                    "due_date": "1568036964079",
                    "description": "Updated Goal Description",
                    "private": false,
                    "archived": false,
                    "creator": 183,
                    "color": "#32a852",
                    "pretty_id": "6",
                    "multiple_owners": true,
                    "folder_id": null,
                    "members": [],
                    "owners": [
                      {
                        "id": 182,
                        "username": "Jane Doe",
                        "initials": "JD",
                        "email": "janedoe@gmail.com",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/182_abc.jpg"
                      }
                    ],
                    "key_results": [],
                    "percent_completed": 0,
                    "history": [],
                    "pretty_url": "https://app.clickup.com/512/goals/6"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/goal/{goal_id}/key_result": {
      "post": {
        "summary": "Create Key Result",
        "description": "",
        "operationId": "CreateKeyResult",
        "parameters": [
          {
            "name": "goal_id",
            "in": "path",
            "description": "900e-462d-a849-4a216b06d930 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "e53a033c"
            }
          },
          {
            "name": "Authoriation",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "Key result types can be `number`, `currency`, `boolean`, `percentage`, or `automatic`. The task ID's array and list ID's array can be used to attach resources to the goal.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateKeyResultrequest"
              },
              "example": {
                "name": "New Key Result Name",
                "owners": [
                  183
                ],
                "type": "number",
                "steps_start": 0,
                "steps_end": 10,
                "unit": "km",
                "task_ids": [],
                "list_ids": []
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateKeyResultresponse"
                },
                "example": {
                  "key_result": {
                    "id": "947d46ed-8480-49bc-8c57-e569747efe93",
                    "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
                    "name": "New Key Result Name",
                    "type": "number",
                    "unit": "km",
                    "creator": 183,
                    "date_created": "1568062902048",
                    "goal_pretty_id": "6",
                    "percent_completed": null,
                    "completed": false,
                    "task_ids": [],
                    "subcategory_ids": [],
                    "owners": [
                      {
                        "id": 183,
                        "username": "John Doe",
                        "email": "example@email.com",
                        "color": "#827718",
                        "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
                        "initials": "JK"
                      }
                    ],
                    "last_action": {
                      "id": "d3183d0f-5cbd-4158-b015-71465f1df269",
                      "key_result_id": "947d46ed-8480-49bc-8c57-e569747efe93",
                      "userid": 183,
                      "date_modified": "1568062902048",
                      "steps_taken": null,
                      "note": "Created Key Result",
                      "steps_before": null,
                      "steps_current": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/key_result/{key_result_id}": {
      "put": {
        "summary": "Edit Key Result",
        "description": "",
        "operationId": "EditKeyResult",
        "parameters": [
          {
            "name": "key_result_id",
            "in": "path",
            "description": "8480-49bc-8c57-e569747efe93 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "947d46ed"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "All properties available in the create key result route may also be used along with the additional properties below.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditKeyResultrequest"
              },
              "example": {
                "steps_current": 5,
                "note": "Target achieved"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditKeyResultresponse"
                },
                "example": {
                  "key_result": {
                    "id": "947d46ed-8480-49bc-8c57-e569747efe93",
                    "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
                    "name": "New Key Result Name",
                    "type": "number",
                    "unit": "km",
                    "creator": 183,
                    "date_created": "1568062902048",
                    "goal_pretty_id": "6",
                    "percent_completed": null,
                    "completed": false,
                    "task_ids": [],
                    "subcategory_ids": [],
                    "owners": [
                      {
                        "id": 183,
                        "username": "John Doe",
                        "email": "example@email.com",
                        "color": "#827718",
                        "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
                        "initials": "JK"
                      }
                    ],
                    "last_action": {
                      "id": "e889858b-a023-46cc-968a-cac32fd04c1e",
                      "key_result_id": "19c7a55e-537e-4bc9-b741-08df05a5bda8",
                      "userid": 183,
                      "date_modified": "1568122776851",
                      "steps_taken": null,
                      "note": "Target achieved",
                      "steps_before": null,
                      "steps_current": null,
                      "steps_before_float": 0,
                      "steps_taken_float": 5,
                      "steps_current_float": null
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Key Result",
        "description": "",
        "operationId": "DeleteKeyResult",
        "parameters": [
          {
            "name": "key_result_id",
            "in": "path",
            "description": "8480-49bc-8c57-e569747efe93 (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "947d46ed"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/guest": {
      "post": {
        "summary": "Invite Guest To Workspace",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "InviteGuestToWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteGuestToWorkspacerequest"
              },
              "example": {
                "email": "guest@example.com",
                "can_edit_tags": true,
                "can_see_time_spent": true,
                "can_see_time_estimated": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteGuestToWorkspaceresponse"
                },
                "example": {
                  "team": {
                    "id": "333",
                    "name": "Team Name",
                    "color": "#8D00D4",
                    "avatar": null,
                    "members": [
                      {
                        "user": {
                          "id": 184,
                          "username": null,
                          "email": "guest@example.com",
                          "color": null,
                          "profilePicture": null,
                          "initials": "G",
                          "role": 4,
                          "last_active": null,
                          "date_joined": null,
                          "date_invited": "1583358383412"
                        },
                        "invited_by": {
                          "id": 183,
                          "color": "#827718",
                          "username": "Jerry",
                          "email": "jerry@example.com",
                          "initials": "J",
                          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                        },
                        "can_see_time_spent": true,
                        "can_see_time_estimated": true,
                        "can_edit_tags": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/guest/{guest_id}": {
      "put": {
        "summary": "Edit Guest On Workspace",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "EditGuestOnWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditGuestOnWorkspacerequest"
              },
              "example": {
                "username": "Guest User",
                "can_edit_tags": true,
                "can_see_time_spent": true,
                "can_see_time_estimated": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditGuestOnWorkspaceresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Guest From Workspace",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "RemoveGuestFromWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveGuestFromWorkspaceresponse"
                },
                "example": {
                  "team": {
                    "id": "333",
                    "name": "Team Name",
                    "color": "#8D00D4",
                    "avatar": null,
                    "members": []
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Guest",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "GetGuest",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/guest/{guest_id}/": {
      "post": {
        "summary": "Add Guest To Task",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "AddGuestToTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "c04"
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "`permisson_level` can be `read`, `comment`, `edit`, or `create`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGuestToTaskrequest"
              },
              "example": {
                "permission_level": "read"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGuestToTaskresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [
                        {
                          "id": "c04",
                          "name": "Task Name",
                          "status": {
                            "status": "Open",
                            "color": "#d3d3d3",
                            "type": "open",
                            "orderindex": 0
                          },
                          "orderindex": "0",
                          "date_created": "1574718405408",
                          "date_updated": "1574722145869",
                          "date_closed": null,
                          "archived": false,
                          "creator": {
                            "id": 183,
                            "username": "Jerry",
                            "color": "#827718",
                            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                          },
                          "assignees": [],
                          "checklists": [],
                          "tags": [],
                          "parent": null,
                          "priority": {
                            "id": "1",
                            "priority": "urgent",
                            "color": "#f50000",
                            "orderindex": "1"
                          },
                          "due_date": "1508369194377",
                          "start_date": null,
                          "points": null,
                          "time_estimate": null,
                          "custom_fields": [],
                          "dependencies": [],
                          "team_id": "108",
                          "url": "https://app.clickup.com/t/c04",
                          "permission_level": "read",
                          "list": {
                            "id": "1752",
                            "name": "Shared with me",
                            "access": false
                          },
                          "folder": {
                            "id": "1217",
                            "name": "Shared with me",
                            "hidden": false,
                            "access": false
                          },
                          "space": {
                            "id": "380"
                          }
                        }
                      ],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Guest From Task",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "RemoveGuestFromTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "c04"
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveGuestFromTaskresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/guest/{guest_id}": {
      "post": {
        "summary": "Add Guest To List",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "AddGuestToList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1427
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`permisson_level` can be `read`, `comment`, `edit`, or `create`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGuestToListrequest"
              },
              "example": {
                "permission_level": "read"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGuestToListresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [
                        {
                          "id": "1427",
                          "name": "List Name",
                          "orderindex": 1,
                          "status": null,
                          "priority": null,
                          "assignee": null,
                          "task_count": "5",
                          "due_date": null,
                          "start_date": null,
                          "archived": false,
                          "override_statuses": true,
                          "statuses": [
                            {
                              "status": "Open",
                              "orderindex": 0,
                              "color": "#d3d3d3",
                              "type": "open"
                            },
                            {
                              "status": "Closed",
                              "orderindex": 5,
                              "color": "#6bc950",
                              "type": "closed"
                            }
                          ],
                          "permission_level": "read"
                        }
                      ],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Guest From List",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "RemoveGuestFromList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1427
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveGuestFromListresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/folder/{folder_id}/guest/{guest_id}": {
      "post": {
        "summary": "Add Guest To Folder",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "AddGuestToFolder",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1057
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`permisson_level` can be `read`, `comment`, `edit`, or `create`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGuestToFolderrequest"
              },
              "example": {
                "permission_level": "read"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddGuestToFolderresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": [
                        {
                          "id": "1057",
                          "name": "Folder Name",
                          "orderindex": 5,
                          "override_statuses": true,
                          "hidden": false,
                          "task_count": "20",
                          "archived": false,
                          "statuses": [
                            {
                              "status": "Open",
                              "orderindex": 0,
                              "color": "#d3d3d3",
                              "type": "open"
                            },
                            {
                              "status": "Closed",
                              "orderindex": 5,
                              "color": "#6bc950",
                              "type": "closed"
                            }
                          ],
                          "lists": [],
                          "permission_level": "read"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Guest From Folder",
        "description": "***Note:** The following guest routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "RemoveGuestFromFolder",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 1057
            }
          },
          {
            "name": "guest_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveGuestFromFolderresponse"
                },
                "example": {
                  "guest": {
                    "user": {
                      "id": 184,
                      "username": null,
                      "email": "guest@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 4,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "can_see_time_spent": true,
                    "can_see_time_estimated": true,
                    "can_edit_tags": true,
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/folder/{folder_id}/list": {
      "post": {
        "summary": "Create List",
        "description": "",
        "operationId": "CreateList",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 456
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`assignee` is a userid of the assignee to be added to this task.\n`priority` is an integer mapping as 1 : Urgent, 2 : High, 3 : Normal, 4 : Low.\nThe `status` included in the body of this request refers to the List color rather than the task Statuses available in the List.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListrequest"
              },
              "example": {
                "name": "New List Name",
                "content": "New List Content",
                "due_date": 1567780450202,
                "due_date_time": false,
                "priority": 1,
                "assignee": 183,
                "status": "red"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateListresponse"
                },
                "example": {
                  "id": "124",
                  "name": "New List Name",
                  "orderindex": 1,
                  "content": "New List Content",
                  "status": {
                    "status": "red",
                    "color": "#e50000",
                    "hide_label": true
                  },
                  "priority": {
                    "priority": "urgent",
                    "color": "#f50000"
                  },
                  "assignee": {
                    "id": 183,
                    "color": "#827718",
                    "username": "Jerry",
                    "initials": "J",
                    "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                  },
                  "task_count": null,
                  "due_date": "1567780450202",
                  "due_date_time": false,
                  "start_date": null,
                  "start_date_time": null,
                  "folder": {
                    "id": "456",
                    "name": "Folder Name",
                    "hidden": false,
                    "access": true
                  },
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "statuses": [
                    {
                      "status": "to do",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "complete",
                      "orderindex": 1,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Lists",
        "description": "",
        "operationId": "GetLists",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 456
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListsresponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}/list": {
      "post": {
        "summary": "Create Folderless List",
        "description": "",
        "operationId": "CreateFolderlessList",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 789
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "`assignee` is a userid of the assignee to be added to this task.\n`priority` is an integer mapping as 1 : Urgent, 2 : High, 3 : Normal, 4 : Low.\nThe `status` included in the body of this request refers to the List color rather than the task Statuses available in the List.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderlessListrequest"
              },
              "example": {
                "name": "New List Name",
                "content": "New List Content",
                "due_date": 1567780450202,
                "due_date_time": false,
                "priority": 1,
                "assignee": 183,
                "status": "red"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderlessListresponse"
                },
                "example": {
                  "id": "124",
                  "name": "New List Name",
                  "orderindex": 1,
                  "content": "New List Content",
                  "status": {
                    "status": "red",
                    "color": "#e50000",
                    "hide_label": true
                  },
                  "priority": {
                    "priority": "urgent",
                    "color": "#f50000"
                  },
                  "assignee": {
                    "id": 183,
                    "color": "#827718",
                    "username": "Jerry",
                    "initials": "J",
                    "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                  },
                  "task_count": null,
                  "due_date": "1567780450202",
                  "due_date_time": false,
                  "start_date": null,
                  "start_date_time": null,
                  "folder": {
                    "id": "457",
                    "name": "hidden",
                    "hidden": true,
                    "access": true
                  },
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "statuses": [
                    {
                      "status": "to do",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "complete",
                      "orderindex": 1,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Folderless Lists",
        "description": "",
        "operationId": "GetFolderlessLists",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 789
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFolderlessListsresponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}": {
      "put": {
        "summary": "Update List",
        "description": "",
        "operationId": "UpdateList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "124"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "Only pass the properties you want to update. It is unnessary to pass the entire list object. `assignee` is a userid of the assignee to be added to this task.\n`priority` is an integer mapping as 1 : Urgent, 2 : High, 3 : Normal, 4 : Low.\nYou can set a List color using `status` as shown in Create List and Create Folderless List, \nor use `unset_status` as shown in the body of the example request below to clear the List color.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListrequest"
              },
              "example": {
                "name": "Updated List Name",
                "content": "Updated List Content",
                "due_date": 1567780450202,
                "due_date_time": true,
                "priority": 2,
                "assignee": "none",
                "unset_status": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateListresponse"
                },
                "example": {
                  "id": "124",
                  "name": "Updated List Name",
                  "orderindex": 1,
                  "content": "Updated List Content",
                  "status": {
                    "status": "red",
                    "color": "#e50000",
                    "hide_label": true
                  },
                  "priority": {
                    "priority": "high",
                    "color": "#f50000"
                  },
                  "assignee": null,
                  "task_count": null,
                  "due_date": "1567780450202",
                  "due_date_time": true,
                  "start_date": null,
                  "start_date_time": null,
                  "folder": {
                    "id": "456",
                    "name": "Folder Name",
                    "hidden": false,
                    "access": true
                  },
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "statuses": [
                    {
                      "status": "to do",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "complete",
                      "orderindex": 1,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete List",
        "description": "",
        "operationId": "DeleteList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get List",
        "description": "",
        "operationId": "GetList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "applicaton/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListresponse"
                },
                "example": {
                  "id": "124",
                  "name": "Updated List Name",
                  "orderindex": 1,
                  "content": "Updated List Content",
                  "status": {
                    "status": "red",
                    "color": "#e50000",
                    "hide_label": true
                  },
                  "priority": {
                    "priority": "high",
                    "color": "#f50000"
                  },
                  "assignee": null,
                  "task_count": null,
                  "due_date": "1567780450202",
                  "due_date_time": true,
                  "start_date": null,
                  "start_date_time": null,
                  "folder": {
                    "id": "456",
                    "name": "Folder Name",
                    "hidden": false,
                    "access": true
                  },
                  "space": {
                    "id": "789",
                    "name": "Space Name",
                    "access": true
                  },
                  "inbound_address": "add.task.124.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com",
                  "archived": false,
                  "override_statuses": false,
                  "statuses": [
                    {
                      "status": "to do",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "complete",
                      "orderindex": 1,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "permission_level": "create"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/task/{task_id}": {
      "post": {
        "summary": "Add Task To List",
        "description": "",
        "operationId": "AddTaskToList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Task From List",
        "description": "",
        "operationId": "RemoveTaskFromList",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/member": {
      "get": {
        "summary": "Get Task Members",
        "description": "",
        "operationId": "GetTaskMembers",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskMembersresponse"
                },
                "example": {
                  "members": [
                    {
                      "id": 812,
                      "username": "John Doe",
                      "email": "john@example.com",
                      "color": "#FFFFFF",
                      "initials": "JD",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/812_nx1.jpg",
                      "profileInfo": {
                        "display_profile": null,
                        "verified_ambassador": null,
                        "verified_consultant": null,
                        "top_tier_user": null,
                        "viewed_verified_ambassador": null,
                        "viewed_verified_consultant": null,
                        "viewed_top_tier_user": null
                      }
                    },
                    {
                      "id": 813,
                      "username": "Jane Doe",
                      "email": "jane@example.com",
                      "color": null,
                      "initials": "JD",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/813_nx1.jpg",
                      "profileInfo": {
                        "display_profile": null,
                        "verified_ambassador": null,
                        "verified_consultant": null,
                        "top_tier_user": null,
                        "viewed_verified_ambassador": null,
                        "viewed_verified_consultant": null,
                        "viewed_top_tier_user": null
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/member": {
      "get": {
        "summary": "Get List Members",
        "description": "",
        "operationId": "GetListMembers",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListMembersresponse"
                },
                "example": {
                  "members": [
                    {
                      "id": 812,
                      "username": "John Doe",
                      "email": "john@example.com",
                      "color": "#FFFFFF",
                      "initials": "JD",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/812_nx1.jpg",
                      "profileInfo": {
                        "display_profile": null,
                        "verified_ambassador": null,
                        "verified_consultant": null,
                        "top_tier_user": null,
                        "viewed_verified_ambassador": null,
                        "viewed_verified_consultant": null,
                        "viewed_top_tier_user": null
                      }
                    },
                    {
                      "id": 813,
                      "username": "Jane Doe",
                      "email": "jane@example.com",
                      "color": null,
                      "initials": "JD",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/813_nx1.jpg",
                      "profileInfo": {
                        "display_profile": null,
                        "verified_ambassador": null,
                        "verified_consultant": null,
                        "top_tier_user": null,
                        "viewed_verified_ambassador": null,
                        "viewed_verified_consultant": null,
                        "viewed_top_tier_user": null
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/shared": {
      "get": {
        "summary": "Shared Hierarchy",
        "description": "",
        "operationId": "SharedHierarchy",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedHierarchyresponse"
                },
                "example": {
                  "shared": {
                    "tasks": [],
                    "lists": [
                      {
                        "id": "1421",
                        "name": "Shared List",
                        "orderindex": 0,
                        "content": null,
                        "status": null,
                        "priority": null,
                        "assignee": null,
                        "task_count": "0",
                        "due_date": null,
                        "start_date": null,
                        "archived": false
                      }
                    ],
                    "folders": [
                      {
                        "id": "1058",
                        "name": "Shared Folder",
                        "orderindex": 0,
                        "content": null,
                        "task_count": "0",
                        "due_date": null,
                        "archived": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/space": {
      "post": {
        "summary": "Create Space",
        "description": "",
        "operationId": "CreateSpace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpacerequest"
              },
              "example": {
                "name": "New Space Name",
                "multiple_assignees": true,
                "features": {
                  "due_dates": {
                    "enabled": true,
                    "start_date": false,
                    "remap_due_dates": true,
                    "remap_closed_due_date": false
                  },
                  "time_tracking": {
                    "enabled": false
                  },
                  "tags": {
                    "enabled": true
                  },
                  "time_estimates": {
                    "enabled": true
                  },
                  "checklists": {
                    "enabled": true
                  },
                  "custom_fields": {
                    "enabled": true
                  },
                  "remap_dependencies": {
                    "enabled": true
                  },
                  "dependency_warning": {
                    "enabled": true
                  },
                  "portfolios": {
                    "enabled": true
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSpaceresponse"
                },
                "example": {
                  "id": "790",
                  "name": "New Space Name",
                  "private": false,
                  "statuses": [
                    {
                      "id": "p16911531_p8y2WNC6",
                      "status": "to do",
                      "type": "open",
                      "orderindex": 0,
                      "color": "#d3d3d3"
                    },
                    {
                      "id": "p17911545_ABo7jSsf",
                      "status": "complete",
                      "type": "closed",
                      "orderindex": 1,
                      "color": "#6bc950"
                    }
                  ],
                  "multiple_assignees": true,
                  "features": {
                    "due_dates": {
                      "enabled": true,
                      "start_date": false,
                      "remap_due_dates": true,
                      "remap_closed_due_date": false
                    },
                    "sprints": {
                      "enabled": false
                    },
                    "points": {
                      "enabled": false
                    },
                    "custom_items": {
                      "enabled": false
                    },
                    "tags": {
                      "enabled": true
                    },
                    "time_estimates": {
                      "enabled": true
                    },
                    "checklists": {
                      "enabled": true
                    },
                    "zoom": {
                      "enabled": false
                    },
                    "milestones": {
                      "enabled": false
                    },
                    "custom_fields": {
                      "enabled": true
                    },
                    "remap_dependencies": {
                      "enabled": true
                    },
                    "dependency_warning": {
                      "enabled": true
                    },
                    "multiple_assignees": {
                      "enabled": true
                    },
                    "portfolios": {
                      "enabled": true
                    },
                    "emails": {
                      "enabled": true
                    }
                  },
                  "archived": false
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Spaces",
        "description": "",
        "operationId": "GetSpaces",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpacesresponse"
                },
                "example": {
                  "spaces": [
                    {
                      "id": "790",
                      "name": "Updated Space Name",
                      "private": false,
                      "statuses": [
                        {
                          "status": "to do",
                          "type": "open",
                          "orderindex": 0,
                          "color": "#d3d3d3"
                        },
                        {
                          "status": "complete",
                          "type": "closed",
                          "orderindex": 1,
                          "color": "#6bc950"
                        }
                      ],
                      "multiple_assignees": false,
                      "features": {
                        "due_dates": {
                          "enabled": false,
                          "start_date": false,
                          "remap_due_dates": false,
                          "remap_closed_due_date": false
                        },
                        "time_tracking": {
                          "enabled": false
                        },
                        "tags": {
                          "enabled": false
                        },
                        "time_estimates": {
                          "enabled": false
                        },
                        "checklists": {
                          "enabled": true
                        },
                        "custom_fields": {
                          "enabled": true
                        },
                        "remap_dependencies": {
                          "enabled": false
                        },
                        "dependency_warning": {
                          "enabled": false
                        },
                        "portfolios": {
                          "enabled": false
                        }
                      }
                    },
                    {
                      "id": "791",
                      "name": "Second Space Name",
                      "private": false,
                      "statuses": [
                        {
                          "status": "Open",
                          "type": "open",
                          "orderindex": 0,
                          "color": "#d3d3d3"
                        },
                        {
                          "status": "Closed",
                          "type": "closed",
                          "orderindex": 1,
                          "color": "#6bc950"
                        }
                      ],
                      "multiple_assignees": true,
                      "features": {
                        "due_dates": {
                          "enabled": true,
                          "start_date": false,
                          "remap_due_dates": false,
                          "remap_closed_due_date": false
                        },
                        "time_tracking": {
                          "enabled": true
                        },
                        "tags": {
                          "enabled": true
                        },
                        "time_estimates": {
                          "enabled": true
                        },
                        "checklists": {
                          "enabled": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}": {
      "put": {
        "summary": "Update Space",
        "description": "",
        "operationId": "UpdateSpace",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 790
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSpacerequest"
              },
              "example": {
                "name": "Updated Space Name",
                "multiple_assignees": false,
                "features": {
                  "due_dates": {
                    "enabled": false,
                    "start_date": false,
                    "remap_due_dates": false,
                    "remap_closed_due_date": false
                  },
                  "time_tracking": {
                    "enabled": false
                  },
                  "tags": {
                    "enabled": false
                  },
                  "time_estimates": {
                    "enabled": false
                  },
                  "checklists": {
                    "enabled": true
                  },
                  "custom_fields": {
                    "enabled": true
                  },
                  "remap_dependencies": {
                    "enabled": false
                  },
                  "dependency_warning": {
                    "enabled": false
                  },
                  "portfolios": {
                    "enabled": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSpaceresponse"
                },
                "example": {
                  "id": "790",
                  "name": "Updated Space Name",
                  "private": false,
                  "statuses": [
                    {
                      "status": "to do",
                      "type": "open",
                      "orderindex": 0,
                      "color": "#d3d3d3"
                    },
                    {
                      "status": "complete",
                      "type": "closed",
                      "orderindex": 1,
                      "color": "#6bc950"
                    }
                  ],
                  "multiple_assignees": false,
                  "features": {
                    "due_dates": {
                      "enabled": false,
                      "start_date": false,
                      "remap_due_dates": false,
                      "remap_closed_due_date": false
                    },
                    "time_tracking": {
                      "enabled": false
                    },
                    "tags": {
                      "enabled": false
                    },
                    "time_estimates": {
                      "enabled": false
                    },
                    "checklists": {
                      "enabled": true
                    },
                    "custom_fields": {
                      "enabled": true
                    },
                    "remap_dependencies": {
                      "enabled": false
                    },
                    "dependency_warning": {
                      "enabled": false
                    },
                    "portfolios": {
                      "enabled": false
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Space",
        "description": "",
        "operationId": "DeleteSpace",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 790
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Space",
        "description": "",
        "operationId": "GetSpace",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 790
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpaceresponse"
                },
                "example": {
                  "id": "790",
                  "name": "Updated Space Name",
                  "private": false,
                  "statuses": [
                    {
                      "status": "to do",
                      "type": "open",
                      "orderindex": 0,
                      "color": "#d3d3d3"
                    },
                    {
                      "status": "complete",
                      "type": "closed",
                      "orderindex": 1,
                      "color": "#6bc950"
                    }
                  ],
                  "multiple_assignees": false,
                  "features": {
                    "due_dates": {
                      "enabled": false,
                      "start_date": false,
                      "remap_due_dates": false,
                      "remap_closed_due_date": false
                    },
                    "time_tracking": {
                      "enabled": false
                    },
                    "tags": {
                      "enabled": false
                    },
                    "time_estimates": {
                      "enabled": false
                    },
                    "checklists": {
                      "enabled": true
                    },
                    "custom_fields": {
                      "enabled": true
                    },
                    "remap_dependencies": {
                      "enabled": false
                    },
                    "dependency_warning": {
                      "enabled": false
                    },
                    "portfolios": {
                      "enabled": false
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}/tag": {
      "get": {
        "summary": "Get Space Tags",
        "description": "",
        "operationId": "GetSpaceTags",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 512
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpaceTagsresponse"
                },
                "example": {
                  "tags": [
                    {
                      "name": "Tag name",
                      "tag_fg": "#000000",
                      "tag_bg": "#000000"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "summary": "Create Space Tag",
        "description": "",
        "operationId": "CreateSpaceTag",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 512
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpaceTagrequest"
              },
              "example": {
                "tag": {
                  "name": "Tag Name",
                  "tag_fg": "#000000",
                  "tag_bg": "#000000"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}/tag/{tag_name}": {
      "put": {
        "summary": "Edit Space Tag",
        "description": "",
        "operationId": "EditSpaceTag",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 512
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditSpaceTagresponse"
                },
                "example": {
                  "tag": {
                    "name": "Updated Tag",
                    "fg_color": "#ffffff",
                    "bg_color": "#ffffff"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Space Tag",
        "description": "",
        "operationId": "DeleteSpaceTag",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 512
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/tag/{tag_name}/": {
      "post": {
        "summary": "Add Tag To Task",
        "description": "",
        "operationId": "AddTagToTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "abc"
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove Tag From Task",
        "description": "",
        "operationId": "RemoveTagFromTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "abc"
            }
          },
          {
            "name": "tag_name",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "name"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/task": {
      "post": {
        "summary": "Create Task",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "CreateTask",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "`check_required_custom_fields` is an option to indicate whether or not your new task will include data for required Custom Fields (`true`) or not (`false`). The default is `false`. If you set this option to `true`, and do not include information for required Custom Fields, then you will receive an error that \"One or more required fields is missing\".\nThe `links_to` accepts a task ID to create a linked dependency on the new task.\nIf `notify_all` is true, creation notifications will be sent to everyone including the creator of the task.\nPassing an existing task ID in the `parent` property will make the new task a subtask of that parent. The `parent` you pass must not be a subtask itself, and must be part of the list that you pass in the URL params.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskrequest"
              },
              "example": {
                "name": "New Task Name",
                "description": "New Task Description",
                "assignees": [
                  183
                ],
                "tags": [
                  "tag name 1"
                ],
                "status": "Open",
                "priority": 3,
                "due_date": 1508369194377,
                "due_date_time": false,
                "time_estimate": 8640000,
                "start_date": 1567780450202,
                "start_date_time": false,
                "notify_all": true,
                "parent": null,
                "links_to": null,
                "check_required_custom_fields": true,
                "custom_fields": [
                  {
                    "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
                    "value": 23
                  },
                  {
                    "id": "03efda77-c7a0-42d3-8afd-fd546353c2f5",
                    "value": "Text field input"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Tasks",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch (starts at 0)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by field, defaults to created\n Options: id, created, updated, due_date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse order",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subtasks",
            "in": "query",
            "description": "Include subtasks, default false",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_closed",
            "in": "query",
            "description": "By default, the api does not include closed tasks. Set this to true and dont send a status filter to include closed tasks.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "assignees",
            "in": "query",
            "description": "Assignees to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "due_date_gt",
            "in": "query",
            "description": "Filter due date greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "due_date_lt",
            "in": "query",
            "description": "Filter due date less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_created_gt",
            "in": "query",
            "description": "Filter date created greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_created_lt",
            "in": "query",
            "description": "Filter date created less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_updated_gt",
            "in": "query",
            "description": "Filter date updated greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_updated_lt",
            "in": "query",
            "description": "Filter date updated less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_fields",
            "in": "query",
            "description": "Filter by Custom Fields. Must be a stringified JSON array of objects that must include fields `field_id`, `value`, `operator`.\n\n+ See the **Custom Fields** reference page on the lefthand side for additional information on valid input for fields `value` and `field_id` for different _types_ of Custom Fields\n\n+ Accepted Values for `operator`: `=`, `<`, `<=`, `>`, `>=`, `!=`, `IS NULL` ,`IS NOT NULL` ,`RANGE`, `ANY`, `ALL`, `NOT ANY`, `NOT ALL`\n\n+ Example: `?custom_fields=[{\"field_id\":\"de761538-8ae0-42e8-91d9-f1a0cdfbd8b5\",\"operator\":\">\",\"value\":2},{...}]`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/": {
      "put": {
        "summary": "Update Task",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "UpdateTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hx"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "You should only include the properties you want to update. It is not required to send every available task field.\nTo remove information (other than for `assignees`) simply include the field with a value of `null`. \nYou can move a subtask to another task by including `\"parent\"` with a valid `task id`. You cannot convert a subtask to a task by setting `\"parent\"` to `null`.\nTo clear the task description, include `Description` with `\" \"`.\nTo update Custom Fields on a task, you must use the Custom Fields endpoints.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskrequest"
              },
              "example": {
                "name": "Updated Task Name",
                "description": "Updated Task Content",
                "status": "in progress",
                "priority": 1,
                "parent": "abc1234",
                "time_estimate": 8640000,
                "assignees": {
                  "add": [
                    182
                  ],
                  "rem": [
                    183
                  ]
                },
                "archived": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskresponse"
                },
                "example": {
                  "id": "9hx",
                  "custom_id": null,
                  "name": "Updated Task Name",
                  "text_content": "Updated Task Content",
                  "description": "Updated Task Content",
                  "status": {
                    "status": "in progress",
                    "color": "#d3d3d3",
                    "orderindex": 1,
                    "type": "custom"
                  },
                  "archived": false,
                  "orderindex": "1.00000000000000000000000000000000",
                  "date_created": "1567780450202",
                  "date_updated": "1567780450202",
                  "date_closed": null,
                  "creator": {
                    "id": 183,
                    "username": "John Doe",
                    "color": "#827718",
                    "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                  },
                  "assignees": [],
                  "checklists": [],
                  "tags": [],
                  "parent": "abc1234",
                  "priority": null,
                  "due_date": null,
                  "start_date": null,
                  "time_estimate": null,
                  "time_spent": null,
                  "custom_fields": [
                    {
                      "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
                      "name": "My Number field",
                      "type": "checkbox",
                      "type_config": {},
                      "date_created": "1622176979540",
                      "hide_from_guests": false,
                      "value": "23",
                      "required": true
                    },
                    {
                      "id": "03efda77-c7a0-42d3-8afd-fd546353c2f5",
                      "name": "My Text field",
                      "type": "short_text",
                      "type_config": {},
                      "date_created": "1622176979540",
                      "hide_from_guests": false,
                      "value": "Text field input",
                      "required": false
                    },
                    {
                      "id": "f4d2a20d-6759-4420-b853-222dbe2589d5",
                      "name": "My People",
                      "type": "users",
                      "type_config": {
                        "single_user": true,
                        "include_groups": true,
                        "include_guests": true,
                        "include_team_members": true
                      },
                      "date_created": "1618440378816",
                      "hide_from_guests": false,
                      "required": false
                    }
                  ],
                  "list": {
                    "id": "123"
                  },
                  "folder": {
                    "id": "456"
                  },
                  "space": {
                    "id": "789"
                  },
                  "url": "https://app.clickup.com/t/9hx"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Task",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "DeleteTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9xh"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Task",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "GetTask",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "include_subtasks",
            "in": "query",
            "description": "Include subtasks, default false",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskresponse"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_Id}/task": {
      "get": {
        "summary": "Get Filtered Team Tasks",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "GetFilteredTeamTasks",
        "parameters": [
          {
            "name": "team_Id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to fetch",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by field, defaults to created\n Options: id, created, updated, due_date",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "in": "query",
            "description": "Reverse order",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "subtasks",
            "in": "query",
            "description": "Include subtasks, default false",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "space_ids",
            "in": "query",
            "description": "Spaces to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "project_ids",
            "in": "query",
            "description": "Folders to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "list_ids",
            "in": "query",
            "description": "Lists to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "Statuses to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include_closed",
            "in": "query",
            "description": "By default, this call does not include closed tasks. Set this to true and dont send a status filter to include closed tasks.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "assignees",
            "in": "query",
            "description": "Assignees to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Tag names to query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "due_date_gt",
            "in": "query",
            "description": "Filter due date greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "due_date_lt",
            "in": "query",
            "description": "Filter due date less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_created_gt",
            "in": "query",
            "description": "Filter date created greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_created_lt",
            "in": "query",
            "description": "Filter date created less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_updated_gt",
            "in": "query",
            "description": "Filter date updated greater than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date_updated_lt",
            "in": "query",
            "description": "Filter date updated less than Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "custom_fields",
            "in": "query",
            "description": "Filter by Custom Fields. Must be a stringified JSON array of objects that must include `field_id`, `operator`, and `value`.\n\n+ See the **Custom Fields** reference page for additional information on valid input for fields `value` and `field_id` for different types of Custom Fields. The example below includes a Number Custom Field and a Users Custom Field.\n\n+ Accepted Values for `operator`: `=`, `<`, `<=`, `>`, `>=`, `!=`, `IS NULL` ,`IS NOT NULL` ,`RANGE`, `ANY`, `ALL`, `NOT ANY`, `NOT ALL`\n\n+ Example: `?custom_fields=[{\"field_id\":\"de761538-8ae0-42e8-91d9-f1a0cdfbd8b5\",\"operator\":\">\",\"value\":2},{\"field_id\":\"bd12538-4cf0-51f3-13h1-a1c0bedae3f7\",\"operator\":\"ANY\",\"value\":[123456,765432]},{...}]`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFilteredTeamTasksresponse"
                },
                "example": {
                  "tasks": [
                    {
                      "id": "av1",
                      "custom_id": null,
                      "name": "My First Task",
                      "text_content": "Task description",
                      "description": "Task description",
                      "status": {
                        "status": "Open",
                        "type": "open",
                        "orderindex": 1,
                        "color": "#000000"
                      },
                      "orderindex": "1.0000",
                      "date_created": "1508369194377",
                      "date_updated": "1508369194377",
                      "date_closed": "1508369194377",
                      "creator": {
                        "id": 123,
                        "username": "John Doe",
                        "color": "#000000",
                        "email": "johndoe@website.com",
                        "profilePicture": "https://clickup.com/avatar.jpg"
                      },
                      "assignees": [
                        {
                          "id": 123,
                          "username": "John Doe",
                          "color": "#000000",
                          "email": "johndoe@website.com",
                          "profilePicture": "https://clickup.com/avatar.jpg"
                        }
                      ],
                      "watchers": [
                        {
                          "id": 123,
                          "username": "John Doe",
                          "color": "#000000",
                          "email": "johndoe@website.com",
                          "profilePicture": "https://clickup.com/avatar.jpg"
                        }
                      ],
                      "checklists": [
                        {
                          "id": "d41340bc-2f17-43cc-ae71-86628f45825f",
                          "task_id": "3cxv9f",
                          "name": "Checklist",
                          "date_created": "1618455803730",
                          "orderindex": 1,
                          "creator": 2770032,
                          "resolved": 0,
                          "unresolved": 1,
                          "items": [
                            {
                              "id": "9398cb3d-55a4-4c45-ab46-2a47a371e375",
                              "name": "checklist item 1",
                              "orderindex": 0,
                              "assignee": null,
                              "resolved": false,
                              "parent": null,
                              "date_created": "1618455810454",
                              "children": []
                            }
                          ]
                        }
                      ],
                      "tags": [
                        {
                          "name": "tagged",
                          "tag_fg": "#000000",
                          "tag_bg": "#000000"
                        }
                      ],
                      "parent": "av2",
                      "priority": 1,
                      "due_date": "1508369194377",
                      "start_date": "1508369194377",
                      "points": 1.3,
                      "time_estimate": 1.2,
                      "custom_fields": [
                        {
                          "id": "be43f58e-989e-4233-9f25-27584f094b74",
                          "name": "Location type Custom Field",
                          "type": "location",
                          "type_config": {},
                          "date_created": "1617765143523",
                          "hide_from_guests": false,
                          "required": false
                        }
                      ],
                      "dependencies": [],
                      "linked_tasks": [],
                      "team_id": "1234",
                      "url": "https://app.clickup.com/t/av1",
                      "permission_level": "create",
                      "list": {
                        "id": "1",
                        "name": "List",
                        "access": true
                      },
                      "project": {
                        "id": "1",
                        "name": "Folder",
                        "hidden": false,
                        "access": true
                      },
                      "folder": {
                        "id": "1",
                        "name": "Folder",
                        "hidden": false,
                        "access": true
                      },
                      "space": {
                        "id": "1"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/time_in_status/": {
      "get": {
        "summary": "Get Task's Time in Status",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "GetTask'sTimeinStatus",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksTimeinStatusresponse"
                },
                "example": {
                  "current_status": {
                    "status": "open",
                    "color": "#d3d3d3",
                    "total_time": {
                      "by_minute": 21708,
                      "since": "1604004423494"
                    }
                  },
                  "status_history": [
                    {
                      "status": "open",
                      "color": "#d3d3d3",
                      "type": "open",
                      "total_time": {
                        "by_minute": 21707,
                        "since": "1604004423494"
                      },
                      "orderindex": 0
                    },
                    {
                      "status": "active status",
                      "color": "#5CF1D4",
                      "type": "custom",
                      "total_time": {
                        "by_minute": 23274,
                        "since": "1602607941692"
                      },
                      "orderindex": 4
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/bulk_time_in_status/task_ids/": {
      "get": {
        "summary": "Get Bulk Tasks' Time in Status",
        "description": "####Setting Assignees\n\n`assignees` is an array of the assignees' user ids to be added to this task. You can view the available user ids using the `Get Teams` (Workspaces) call.\n\n####Setting Priority\n\n`priority` is a number that corresponds to the Priorities available in the ClickUp UI. As in the ClickUp UI, priorities cannot be customized.\n\n`1` is Urgent\n\n`2` is High\n\n`3` is Normal\n\n`4` is Low\n\n####Setting Time estimates\n\n`time_estimate` values use milliseconds.\n\n####Using Custom Fields\n\nYou can't set Custom Fields using the create or update Task endpoints. Refer to the `Custom Fields` section above to set and clear Custom Fields.\n\n####Formatting in a Task Description\n\nTo use double quotation marks in the `text_content`, `description`, and `markdown_description` fields you must escape the `\"` character with `\\`.\n\nFor example, including this:\n`\"description\": \"Here is some text. \\\"This is speech.\\\" Additional text.\"`\n\nWill look like this in the ClickUp UI: \n`Here is some text. \"This is speech.\" Additional text.`\n\n####Using Markdown in the Task Description\n\nInstead of `description` you can pass `markdown_description` with valid markdown syntax to add formatting to the task description.\n\nMarkdown features that are supported include headers, emphasis, unordered lists, ordered lists, images, links, blockquotes, and inline code.\n\nFor more information on markdown syntax, follow github's guide [here](https://guides.github.com/features/mastering-markdown/).",
        "operationId": "GetBulkTasks'TimeinStatus",
        "parameters": [
          {
            "name": "task_ids",
            "in": "query",
            "description": "Pass in multiple `task_ids` parameters with different task ids to query for multiple tasks' time in status\n\n+ Example: `task_ids=3cuh&task_ids=g4fs& ...`",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBulkTasksTimeinStatusresponse"
                },
                "example": {
                  "27075wz": {
                    "current_status": {
                      "status": "open",
                      "color": "#d3d3d3",
                      "total_time": {
                        "by_minute": 21830,
                        "since": "1604004423494"
                      }
                    },
                    "status_history": [
                      {
                        "status": "open",
                        "color": "#d3d3d3",
                        "type": "open",
                        "total_time": {
                          "by_minute": 21829,
                          "since": "1604004423494"
                        },
                        "orderindex": 0
                      },
                      {
                        "status": "active status #2",
                        "color": "#5CF1D4",
                        "type": "custom",
                        "total_time": {
                          "by_minute": 23274,
                          "since": "1602607941692"
                        },
                        "orderindex": 4
                      }
                    ]
                  },
                  "20bbn28": {
                    "current_status": {
                      "status": "open",
                      "color": "#d3d3d3",
                      "total_time": {
                        "by_minute": 21830,
                        "since": "1604004420925"
                      }
                    },
                    "status_history": [
                      {
                        "status": "open",
                        "color": "#d3d3d3",
                        "type": "open",
                        "total_time": {
                          "by_minute": 22276,
                          "since": "1604004420925"
                        },
                        "orderindex": 0
                      },
                      {
                        "status": "active status #2",
                        "color": "#5CF1D4",
                        "type": "custom",
                        "total_time": {
                          "by_minute": 40109,
                          "since": "1601597828835"
                        },
                        "orderindex": 4
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/taskTemplate": {
      "get": {
        "summary": "Get Task Templates",
        "description": "",
        "operationId": "GetTaskTemplates",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskTemplatesresponse"
                },
                "example": {
                  "templates": []
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/taskTemplate/{template_id}": {
      "post": {
        "summary": "Create Task From Template",
        "description": "",
        "operationId": "CreateTaskFromTemplate",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 512
            }
          },
          {
            "name": "template_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hz"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskFromTemplaterequest"
              },
              "example": {
                "name": "New task name"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/group": {
      "post": {
        "summary": "Create Team",
        "description": "These endpoints are used to manage [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace. In our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.\n\n***Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest. If you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available which incurs a prorated charge based on your billing cycle.*",
        "operationId": "CreateTeam",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTeamresponse"
                },
                "example": {
                  "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
                  "team_id": "301540",
                  "userid": 301828,
                  "name": "User group",
                  "handle": "usergroup",
                  "date_created": "1640122639829",
                  "initials": "U",
                  "members": [
                    {
                      "id": 185,
                      "username": "Sam",
                      "email": "sam@example.com",
                      "color": "#4169E1",
                      "initials": "S",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    {
                      "id": 186,
                      "username": "Alex",
                      "email": "alex@example.com",
                      "color": "#4169E1",
                      "initials": "A",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    }
                  ],
                  "avatar": {
                    "attachment_id": null,
                    "color": null,
                    "source": null,
                    "icon": null
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/group/{group_id}": {
      "put": {
        "summary": "Update Team",
        "description": "These endpoints are used to manage [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace. In our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.\n\n***Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest. If you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available which incurs a prorated charge based on your billing cycle.*",
        "operationId": "UpdateTeam",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "7C73-4002-A6A9-310014852858 (string) - Team ID (user group)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "C9C58BE9"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "You can update the team `handle` which is used to @mention a Team (user group) in your Workspace. Add or remove members to and from a Team (user group) using the `\"add\"` and/or `\"rem\"` parameters and including an array of user ids.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamrequest"
              },
              "example": {
                "name": "New User Group Name",
                "handle": "newusergroupname",
                "members": {
                  "add": [
                    123456,
                    987654
                  ],
                  "rem": [
                    159753
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTeamresponse"
                },
                "example": {
                  "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
                  "team_id": "123456",
                  "userid": 301828,
                  "name": "New User Group Name",
                  "handle": "newusergroupname",
                  "date_created": "1640122639829",
                  "initials": "NN",
                  "members": [
                    {
                      "id": 201,
                      "username": "Jim Halpert",
                      "email": "jim@example.com",
                      "color": "#40BC86",
                      "initials": "JH",
                      "profilePicture": null
                    },
                    {
                      "id": 202,
                      "username": "Dwight Shrute",
                      "email": "dwight@example.com",
                      "color": "#FF8600",
                      "initials": "DS",
                      "profilePicture": null
                    }
                  ],
                  "avatar": {
                    "attachment_id": null,
                    "color": null,
                    "source": null,
                    "icon": null
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Team",
        "description": "These endpoints are used to manage [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace. In our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.\n\n***Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest. If you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available which incurs a prorated charge based on your billing cycle.*",
        "operationId": "DeleteTeam",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "7C73-4002-A6A9-310014852858 (string) - Team ID (user group)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "C9C58BE9"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/group": {
      "get": {
        "summary": "Get Teams",
        "description": "These endpoints are used to manage [Teams: user groups](https://docs.clickup.com/en/articles/4010016-teams-how-to-create-user-groups) which are groups of users you can assign items to in your Workspace. In our API documentation, `team_id` refers to the id of a Workspace, and `group_id` refers to the id of a user group.\n\n***Note:** Adding a guest with view only permissions to a Team automatically converts them to a paid guest. If you don't have any paid guest seats available, a new member seat is automatically added to increase the number of paid guest seats available which incurs a prorated charge based on your billing cycle.*",
        "operationId": "GetTeams1",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Team ID (Workspace)",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "group_ids",
            "in": "query",
            "description": "Enter one or more Team ids (user groups) to retrieve information about specific Teams.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "C9C58BE9-7C73-4002-A6A9-310014852858"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamsresponse"
                },
                "example": {
                  "groups": [
                    {
                      "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
                      "team_id": "123456",
                      "userid": 301123,
                      "name": "product team",
                      "handle": "product",
                      "date_created": "1640122639829",
                      "initials": "PT",
                      "members": [
                        {
                          "id": 183,
                          "username": "Jerry",
                          "email": "jerry@example.com",
                          "color": "#40BC86",
                          "initials": "J",
                          "profilePicture": null
                        },
                        {
                          "id": 184,
                          "username": "Sam",
                          "email": "sam@example.com",
                          "color": "#FF8600",
                          "initials": "S",
                          "profilePicture": null
                        }
                      ],
                      "avatar": {
                        "attachment_id": null,
                        "color": null,
                        "source": null,
                        "icon": null
                      }
                    },
                    {
                      "id": "fd31be63-41f2-4320-9043-9786fdf643d6",
                      "team_id": "301540",
                      "userid": 301828,
                      "name": "HR department",
                      "handle": "hr-dept",
                      "date_created": "1627087990293",
                      "initials": "HD",
                      "members": [
                        {
                          "id": 183,
                          "username": "Jerry",
                          "email": "jerry@example.com",
                          "color": "#40BC86",
                          "initials": "J",
                          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                        }
                      ],
                      "avatar": {
                        "attachment_id": null,
                        "color": null,
                        "source": null,
                        "icon": null
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/time/": {
      "post": {
        "summary": "Track time",
        "description": "***Note:** This is our legacy API for time tracking. Please use the new Time Tracking API. You won't be able to update timer entries that uses our Time Tracking 2.0 features that uses labels, descriptions, and making time entries billable.*",
        "operationId": "Tracktime",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "Include the total time or the start time and end time. The time is in milliseconds and the `\"start\"` and `\"end\"` values are Unix time in milliseconds.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracktimerequest"
              },
              "example": {
                "start": 1567780450202,
                "end": 1508369194377,
                "time": 8640000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracktimeresponse"
                },
                "example": {
                  "id": "123"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get tracked time",
        "description": "***Note:** This is our legacy API for time tracking. Please use the new Time Tracking API. You won't be able to update timer entries that uses our Time Tracking 2.0 features that uses labels, descriptions, and making time entries billable.*",
        "operationId": "Gettrackedtime",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gettrackedtimeresponse"
                },
                "example": {
                  "data": [
                    {
                      "user": {
                        "id": 1,
                        "username": "John Doe",
                        "email": "johndoe@gmail.com",
                        "color": "#795548",
                        "initials": "JD",
                        "profilePicture": null
                      },
                      "time": 1000000,
                      "intervals": [
                        {
                          "id": "318",
                          "start": null,
                          "end": null,
                          "time": "1000000",
                          "source": "chrome",
                          "date_added": "1569983937761"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/task/{task_id}/time/{interval_id}/": {
      "put": {
        "summary": "Edit time tracked",
        "description": "***Note:** This is our legacy API for time tracking. Please use the new Time Tracking API. You won't be able to update timer entries that uses our Time Tracking 2.0 features that uses labels, descriptions, and making time entries billable.*",
        "operationId": "Edittimetracked",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "interval_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "Edit the start, end, or total time of a time tracked entry.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Edittimetrackedrequest"
              },
              "example": {
                "start": 1567780450202,
                "end": 1508369194377,
                "time": 8640000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete time tracked",
        "description": "***Note:** This is our legacy API for time tracking. Please use the new Time Tracking API. You won't be able to update timer entries that uses our Time Tracking 2.0 features that uses labels, descriptions, and making time entries billable.*",
        "operationId": "Deletetimetracked",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "9hv"
            }
          },
          {
            "name": "interval_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "123"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_Id}/time_entries": {
      "get": {
        "summary": "Get time entries within a date range",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Gettimeentrieswithinadaterange",
        "parameters": [
          {
            "name": "team_Id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Unix time in milliseconds",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "assignee",
            "in": "query",
            "description": "User ids to filter by separated by commas.\n\n+ ***Note:** Only Workspace Owners/Admins have access to do this.*",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "include_task_tags",
            "in": "query",
            "description": "Include task tags in the response for time entries associated with tasks.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_location_names",
            "in": "query",
            "description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "space_id",
            "in": "query",
            "description": "Only include time entries associated with tasks in a specific Space",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "folder_id",
            "in": "query",
            "description": "Only include time entries associated with tasks in a specific Folder",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "list_id",
            "in": "query",
            "description": "Only include time entries associated with tasks in a specific List",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "task_id",
            "in": "query",
            "description": "Only include time entries associated with a specific task",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gettimeentrieswithinadaterangeresponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "1963465985517105840",
                      "task": {
                        "id": "1vwwavv",
                        "custom_id": "JOSH-917",
                        "name": "woof",
                        "status": {
                          "status": "open yes",
                          "color": "#d3d3d3",
                          "type": "open",
                          "orderindex": 0
                        },
                        "custom_type": null
                      },
                      "wid": "300702",
                      "user": {
                        "id": 1,
                        "username": "first_name last_name",
                        "email": "test@gmail.com",
                        "color": "#08c7e0",
                        "initials": "JK",
                        "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                      },
                      "billable": false,
                      "start": "1592841559129",
                      "end": "1592845899021",
                      "duration": "4339892",
                      "description": "",
                      "tags": [],
                      "source": "clickup",
                      "at": "1592845899021",
                      "task_location": {
                        "list_id": 1560300071,
                        "folder_id": 468300080,
                        "space_id": 22800253,
                        "list_name": "List",
                        "folder_name": "Folder",
                        "space_name": "Space"
                      },
                      "task_tags": [
                        {
                          "name": "content-request",
                          "tag_fg": "#800000",
                          "tag_bg": "#2ecd6f",
                          "creator": 301828
                        },
                        {
                          "name": "marketing-okr",
                          "tag_fg": "#800000",
                          "tag_bg": "#7C4DFF",
                          "creator": 301828
                        }
                      ],
                      "task_url": "https://staging.clickup.com/t/1vwwavv"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/{timer_id}/": {
      "get": {
        "summary": "Get singular time entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Getsingulartimeentry",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "timer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1963465985517105840"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "include_task_tags",
            "in": "query",
            "description": "Include task tags in the response for time entries associated with tasks.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "include_location_names",
            "in": "query",
            "description": "Include the names of the List, Folder, and Space along with `list_id`,`folder_id`, and `space_id`.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getsingulartimeentryresponse"
                },
                "example": {
                  "data": [
                    {
                      "id": "timer_id",
                      "wid": "workspace_id",
                      "user": {
                        "id": 1,
                        "username": "first_name last_name",
                        "email": "test@gmail.com",
                        "color": "#08c7e0",
                        "initials": "JK",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                      },
                      "billable": false,
                      "start": "1592841559129",
                      "end": "1592845899021",
                      "duration": "4339892",
                      "description": "",
                      "tags": [],
                      "source": "clickup",
                      "at": "1592845899021",
                      "task_location": {
                        "list_id": 1560300071,
                        "folder_id": 468300080,
                        "space_id": 22800253,
                        "list_name": "List",
                        "folder_name": "Folder",
                        "space_name": "Space"
                      },
                      "task_tags": [
                        {
                          "name": "content-request",
                          "tag_fg": "#800000",
                          "tag_bg": "#2ecd6f",
                          "creator": 301828
                        },
                        {
                          "name": "marketing-okr",
                          "tag_fg": "#800000",
                          "tag_bg": "#7C4DFF",
                          "creator": 301828
                        }
                      ],
                      "task_url": "https://staging.clickup.com/t/rnmuwz7"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/{timer_id}/history": {
      "get": {
        "summary": "Get time entry history",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Gettimeentryhistory",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "timer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "1963465985517105840"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/current": {
      "get": {
        "summary": "Get running time entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Getrunningtimeentry",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          },
          {
            "name": "assignee",
            "in": "query",
            "description": "user id",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getrunningtimeentryresponse"
                },
                "example": {
                  "data": {
                    "id": "timer_id",
                    "task": {
                      "id": "task_id",
                      "name": "task_name",
                      "status": {
                        "status": "to do",
                        "color": "#d3d3d3",
                        "type": "open",
                        "orderindex": 0
                      }
                    },
                    "wid": "workspace_id",
                    "user": {
                      "id": 300528,
                      "username": "first_name last_name",
                      "email": "test@gmail.com",
                      "color": "#08c7e0",
                      "initials": "JK",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                    },
                    "billable": false,
                    "start": "1595293042560",
                    "duration": -25655,
                    "description": "",
                    "tags": [],
                    "at": "1595293042560"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_Id}/time_entries/": {
      "post": {
        "summary": "Create a time entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Createatimeentry",
        "parameters": [
          {
            "name": "team_Id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Createatimeentryrequest"
              },
              "example": {
                "description": "from api",
                "tags": [
                  {
                    "name": "name of tag",
                    "tag_bg": "#BF55EC",
                    "tag_fg": "#FFFFFF"
                  }
                ],
                "start": 1595282645000,
                "billable": true,
                "duration": 50000,
                "assignee": 1,
                "tid": "task_id"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Createatimeentryresponse"
                },
                "example": {
                  "description": "from api",
                  "tags": [
                    {
                      "name": "name of tag",
                      "tag_bg": "#BF55EC",
                      "tag_fg": "#BF55EC"
                    }
                  ],
                  "start": 1595282645000,
                  "billable": true,
                  "duration": 50000,
                  "assignee": 1,
                  "tid": "task_id"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/tags": {
      "delete": {
        "summary": "Remove tags from time entries",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Removetagsfromtimeentries",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get all tags from time entries",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Getalltagsfromtimeentries",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Getalltagsfromtimeentriesresponse"
                },
                "example": {
                  "data": [
                    {
                      "name": "name of tag",
                      "creator": 1,
                      "tag_bg": "#BF55EC",
                      "tag_fg": "#FFFFFF"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "summary": "Add tags from time entries",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Addtagsfromtimeentries",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Addtagsfromtimeentriesrequest"
              },
              "example": {
                "time_entry_ids": [
                  "timer_id"
                ],
                "tags": [
                  {
                    "name": "name of tag",
                    "tag_bg": "#BF55EC",
                    "tag_fg": "#FFFFFF"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "summary": "Change tag names from time entries",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "Changetagnamesfromtimeentries",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Changetagnamesfromtimeentriesrequest"
              },
              "example": {
                "name": "old tag name",
                "new_name": "new tag name",
                "tag_bg": "#000000",
                "tag_fg": "#000000"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_Id}/time_entries/start/{timer_id}/": {
      "post": {
        "summary": "Start a time Entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "StartatimeEntry",
        "parameters": [
          {
            "name": "team_Id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "timer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 2004673344540003570
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "For Workspaces on the Unlimited Plan or the Free Forever Plan, either the `timer_id` parameter or the `\"tid\"` field in the body of the request are required fields.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartatimeEntryrequest"
              },
              "example": {
                "description": "from api",
                "tags": [
                  {
                    "name": "tag1"
                  }
                ],
                "tid": "task_id",
                "billable": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartatimeEntryresponse"
                },
                "example": {
                  "data": {
                    "id": "timer_id",
                    "task": {
                      "id": "task_id",
                      "name": "test task",
                      "status": {
                        "status": "to do",
                        "color": "#d3d3d3",
                        "type": "open",
                        "orderindex": 0
                      },
                      "custom_type": null
                    },
                    "wid": "workspace_id",
                    "user": {
                      "id": 1,
                      "username": "first_name last_name",
                      "email": "test@gmail.com",
                      "color": "#08c7e0",
                      "initials": "JK",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                    },
                    "billable": false,
                    "start": "1595289395842",
                    "duration": -53,
                    "description": "",
                    "tags": [],
                    "at": 1595289452790
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/stop": {
      "post": {
        "summary": "Stop a time Entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "StopatimeEntry",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopatimeEntryresponse"
                },
                "example": {
                  "data": {
                    "id": "timer_id",
                    "task": {
                      "id": "task_id",
                      "name": "test task",
                      "status": {
                        "status": "to do",
                        "color": "#d3d3d3",
                        "type": "open",
                        "orderindex": 0
                      },
                      "custom_type": null
                    },
                    "wid": "workspace_id",
                    "user": {
                      "id": 1,
                      "username": "first_name last_name",
                      "email": "test@gmail.com",
                      "color": "#08c7e0",
                      "initials": "JK",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                    },
                    "billable": false,
                    "start": "1595289395842",
                    "end": 1595289452790,
                    "duration": 56948,
                    "description": "",
                    "tags": [],
                    "source": "clickup",
                    "at": 1595289452790
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/time_entries/{timer_id}": {
      "delete": {
        "summary": "Delete a time Entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "DeleteatimeEntry",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "timer_id",
            "in": "path",
            "description": "List of timer ids to delete separated by commas",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "application/json"
              ],
              "type": "string",
              "example": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteatimeEntryresponse"
                },
                "example": {
                  "data": {
                    "id": "timer_id",
                    "task": {
                      "id": "task_id",
                      "name": "test task",
                      "status": {
                        "status": "to do",
                        "color": "#d3d3d3",
                        "type": "open",
                        "orderindex": 0
                      },
                      "custom_type": null
                    },
                    "wid": "workspace_id",
                    "user": {
                      "id": 1,
                      "username": "first_name last_name",
                      "email": "test@gmail.com",
                      "color": "#08c7e0",
                      "initials": "JK",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
                    },
                    "billable": false,
                    "start": "1595289395842",
                    "end": 1595289452790,
                    "duration": 56948,
                    "description": "",
                    "tags": [],
                    "source": "clickup",
                    "at": 1595289452790
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_Id}/time_entries/{timer_id}/": {
      "put": {
        "summary": "Update a time Entry",
        "description": "***Note:** A time entry that has a negative duration means that timer is currently ongoing for that user.*",
        "operationId": "UpdateatimeEntry",
        "parameters": [
          {
            "name": "team_Id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "timer_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 2004673344540003570
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          },
          {
            "name": "custom_task_ids",
            "in": "query",
            "description": "If you want to reference a task by it's custom task id, this value must be `true`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Only used when the parameter is set to `custom_task_ids=true`\n\n+ Example: `custom_task_ids=true&team_id=123`",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "requestBody": {
          "description": "Accessible tag actions are `[\"replace\", \"add\", \"remove\"]`",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateatimeEntryrequest"
              },
              "example": {
                "description": "",
                "tags": [
                  {
                    "name": "name of tag",
                    "tag_bg": "#BF55EC",
                    "tag_fg": "#FFFFFF"
                  }
                ],
                "tag_action": "add",
                "start": 1595289395842,
                "end": 1595289495842,
                "tid": "task_id",
                "billable": true,
                "duration": 100000
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/user": {
      "post": {
        "summary": "Invite User To Workspace",
        "description": "***Note:** The following user routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "InviteUserToWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserToWorkspacerequest"
              },
              "example": {
                "email": "user@example.com",
                "admin": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteUserToWorkspaceresponse"
                },
                "example": {
                  "team": {
                    "id": "333",
                    "name": "Team Name",
                    "color": "#8D00D4",
                    "avatar": null,
                    "members": [
                      {
                        "user": {
                          "id": 184,
                          "username": null,
                          "email": "user@example.com",
                          "color": null,
                          "profilePicture": null,
                          "initials": "G",
                          "role": 2,
                          "last_active": null,
                          "date_joined": null,
                          "date_invited": "1583358383412"
                        },
                        "invited_by": {
                          "id": 183,
                          "color": "#827718",
                          "username": "Jerry",
                          "email": "jerry@example.com",
                          "initials": "J",
                          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/user/{user_id}": {
      "put": {
        "summary": "Edit User On Workspace",
        "description": "***Note:** The following user routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "EditUserOnWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUserOnWorkspacerequest"
              },
              "example": {
                "username": "User Name",
                "admin": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditUserOnWorkspaceresponse"
                },
                "example": {
                  "member": {
                    "user": {
                      "id": 184,
                      "username": "User Name",
                      "email": "user@example.com",
                      "color": null,
                      "profilePicture": null,
                      "initials": "G",
                      "role": 3,
                      "last_active": null,
                      "date_joined": null,
                      "date_invited": "1583358383412"
                    },
                    "invited_by": {
                      "id": 183,
                      "color": "#827718",
                      "username": "Jerry",
                      "email": "jerry@example.com",
                      "initials": "J",
                      "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                    },
                    "shared": {
                      "tasks": [],
                      "lists": [],
                      "folders": []
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Remove User From Workspace",
        "description": "***Note:** The following user routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "RemoveUserFromWorkspace",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveUserFromWorkspaceresponse"
                },
                "example": {
                  "team": {
                    "id": "333",
                    "name": "Team Name",
                    "color": "#8D00D4",
                    "avatar": null,
                    "members": []
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get User",
        "description": "***Note:** The following user routes are only available to Workspaces on our **[Enterprise Plan](https://clickup.com/pricing).***",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 403
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/view": {
      "post": {
        "summary": "Create Team View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "CreateTeamView",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamViewrequest"
              },
              "example": {
                "name": "New Team View Name",
                "type": "list",
                "grouping": {
                  "field": "status",
                  "dir": 1,
                  "collapsed": [],
                  "ignore": false
                },
                "divide": {
                  "field": null,
                  "dir": null,
                  "collapsed": []
                },
                "sorting": {
                  "fields": []
                },
                "filters": {
                  "op": "AND",
                  "fields": [],
                  "search": "",
                  "show_closed": false
                },
                "columns": {
                  "fields": []
                },
                "team_sidebar": {
                  "assignees": [],
                  "assigned_comments": false,
                  "unassigned_tasks": false
                },
                "settings": {
                  "show_task_locations": false,
                  "show_subtasks": 3,
                  "show_subtask_parent_names": false,
                  "show_closed_subtasks": false,
                  "show_assignees": true,
                  "show_images": true,
                  "collapse_empty_columns": null,
                  "me_comments": true,
                  "me_subtasks": true,
                  "me_checklists": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTeamViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-105",
                    "name": "New Team View Name",
                    "type": "list",
                    "parent": {
                      "id": "512",
                      "type": 7
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Team Views",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetTeamViews",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTeamViewsresponse"
                },
                "example": {
                  "views": [
                    {
                      "id": "3c-105",
                      "name": "New View Name",
                      "type": "list",
                      "parent": {
                        "id": "512",
                        "type": 7
                      },
                      "grouping": {
                        "field": "status",
                        "dir": 1,
                        "collapsed": [],
                        "ignore": false
                      },
                      "divide": {
                        "field": null,
                        "dir": null,
                        "collapsed": []
                      },
                      "sorting": {
                        "fields": []
                      },
                      "filters": {
                        "op": "AND",
                        "fields": [],
                        "search": "",
                        "show_closed": false
                      },
                      "columns": {
                        "fields": []
                      },
                      "team_sidebar": {
                        "assignees": [],
                        "assigned_comments": false,
                        "unassigned_tasks": false
                      },
                      "settings": {
                        "show_task_locations": false,
                        "show_subtasks": 3,
                        "show_subtask_parent_names": false,
                        "show_closed_subtasks": false,
                        "show_assignees": true,
                        "show_images": true,
                        "collapse_empty_columns": null,
                        "me_comments": true,
                        "me_subtasks": true,
                        "me_checklists": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/space/{space_id}/view": {
      "post": {
        "summary": "Create Space View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "CreateSpaceView",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 790
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSpaceViewrequest"
              },
              "example": {
                "name": "New Space View Name",
                "type": "list",
                "grouping": {
                  "field": "status",
                  "dir": 1,
                  "collapsed": [],
                  "ignore": false
                },
                "divide": {
                  "field": null,
                  "dir": null,
                  "collapsed": []
                },
                "sorting": {
                  "fields": []
                },
                "filters": {
                  "op": "AND",
                  "fields": [],
                  "search": "",
                  "show_closed": false
                },
                "columns": {
                  "fields": []
                },
                "team_sidebar": {
                  "assignees": [],
                  "assigned_comments": false,
                  "unassigned_tasks": false
                },
                "settings": {
                  "show_task_locations": false,
                  "show_subtasks": 3,
                  "show_subtask_parent_names": false,
                  "show_closed_subtasks": false,
                  "show_assignees": true,
                  "show_images": true,
                  "collapse_empty_columns": null,
                  "me_comments": true,
                  "me_subtasks": true,
                  "me_checklists": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSpaceViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-106",
                    "name": "New Space View Name",
                    "type": "list",
                    "parent": {
                      "id": "790",
                      "type": 4
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Space Views",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetSpaceViews",
        "parameters": [
          {
            "name": "space_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 790
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpaceViewsresponse"
                },
                "example": {
                  "views": [
                    {
                      "id": "3c-106",
                      "name": "New Space View Name",
                      "type": "list",
                      "parent": {
                        "id": "790",
                        "type": 4
                      },
                      "grouping": {
                        "field": "status",
                        "dir": 1,
                        "collapsed": [],
                        "ignore": false
                      },
                      "divide": {
                        "field": null,
                        "dir": null,
                        "collapsed": []
                      },
                      "sorting": {
                        "fields": []
                      },
                      "filters": {
                        "op": "AND",
                        "fields": [],
                        "search": "",
                        "show_closed": false
                      },
                      "columns": {
                        "fields": []
                      },
                      "team_sidebar": {
                        "assignees": [],
                        "assigned_comments": false,
                        "unassigned_tasks": false
                      },
                      "settings": {
                        "show_task_locations": false,
                        "show_subtasks": 3,
                        "show_subtask_parent_names": false,
                        "show_closed_subtasks": false,
                        "show_assignees": true,
                        "show_images": true,
                        "collapse_empty_columns": null,
                        "me_comments": true,
                        "me_subtasks": true,
                        "me_checklists": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/folder/{folder_id}/view": {
      "post": {
        "summary": "Create Folder View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "CreateFolderView",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 457
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderViewrequest"
              },
              "example": {
                "name": "New Folder View Name",
                "type": "list",
                "grouping": {
                  "field": "status",
                  "dir": 1,
                  "collapsed": [],
                  "ignore": false
                },
                "divide": {
                  "field": null,
                  "dir": null,
                  "collapsed": []
                },
                "sorting": {
                  "fields": []
                },
                "filters": {
                  "op": "AND",
                  "fields": [],
                  "search": "",
                  "show_closed": false
                },
                "columns": {
                  "fields": []
                },
                "team_sidebar": {
                  "assignees": [],
                  "assigned_comments": false,
                  "unassigned_tasks": false
                },
                "settings": {
                  "show_task_locations": false,
                  "show_subtasks": 3,
                  "show_subtask_parent_names": false,
                  "show_closed_subtasks": false,
                  "show_assignees": true,
                  "show_images": true,
                  "collapse_empty_columns": null,
                  "me_comments": true,
                  "me_subtasks": true,
                  "me_checklists": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFolderViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-107",
                    "name": "New Folder View Name",
                    "type": "list",
                    "parent": {
                      "id": "457",
                      "type": 5
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Folder Views",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetFolderViews",
        "parameters": [
          {
            "name": "folder_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 457
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFolderViewsresponse"
                },
                "example": {
                  "views": [
                    {
                      "id": "3c-107",
                      "name": "New Folder View Name",
                      "type": "list",
                      "parent": {
                        "id": "457",
                        "type": 5
                      },
                      "grouping": {
                        "field": "status",
                        "dir": 1,
                        "collapsed": [],
                        "ignore": false
                      },
                      "divide": {
                        "field": null,
                        "dir": null,
                        "collapsed": []
                      },
                      "sorting": {
                        "fields": []
                      },
                      "filters": {
                        "op": "AND",
                        "fields": [],
                        "search": "",
                        "show_closed": false
                      },
                      "columns": {
                        "fields": []
                      },
                      "team_sidebar": {
                        "assignees": [],
                        "assigned_comments": false,
                        "unassigned_tasks": false
                      },
                      "settings": {
                        "show_task_locations": false,
                        "show_subtasks": 3,
                        "show_subtask_parent_names": false,
                        "show_closed_subtasks": false,
                        "show_assignees": true,
                        "show_images": true,
                        "collapse_empty_columns": null,
                        "me_comments": true,
                        "me_subtasks": true,
                        "me_checklists": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/list/{list_id}/view": {
      "post": {
        "summary": "Create List View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "CreateListView",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListViewrequest"
              },
              "example": {
                "name": "New List View Name",
                "type": "list",
                "grouping": {
                  "field": "status",
                  "dir": 1,
                  "collapsed": [],
                  "ignore": false
                },
                "divide": {
                  "field": null,
                  "dir": null,
                  "collapsed": []
                },
                "sorting": {
                  "fields": []
                },
                "filters": {
                  "op": "AND",
                  "fields": [],
                  "search": "",
                  "show_closed": false
                },
                "columns": {
                  "fields": []
                },
                "team_sidebar": {
                  "assignees": [],
                  "assigned_comments": false,
                  "unassigned_tasks": false
                },
                "settings": {
                  "show_task_locations": false,
                  "show_subtasks": 3,
                  "show_subtask_parent_names": false,
                  "show_closed_subtasks": false,
                  "show_assignees": true,
                  "show_images": true,
                  "collapse_empty_columns": null,
                  "me_comments": true,
                  "me_subtasks": true,
                  "me_checklists": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateListViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-108",
                    "name": "New List View Name",
                    "type": "list",
                    "parent": {
                      "id": "124",
                      "type": 6
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get List Views",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetListViews",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 124
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListViewsresponse"
                },
                "example": {
                  "views": [
                    {
                      "id": "3c-107",
                      "name": "New List View Name",
                      "type": "list",
                      "parent": {
                        "id": "124",
                        "type": 6
                      },
                      "grouping": {
                        "field": "status",
                        "dir": 1,
                        "collapsed": [],
                        "ignore": false
                      },
                      "divide": {
                        "field": null,
                        "dir": null,
                        "collapsed": []
                      },
                      "sorting": {
                        "fields": []
                      },
                      "filters": {
                        "op": "AND",
                        "fields": [],
                        "search": "",
                        "show_closed": false
                      },
                      "columns": {
                        "fields": []
                      },
                      "team_sidebar": {
                        "assignees": [],
                        "assigned_comments": false,
                        "unassigned_tasks": false
                      },
                      "settings": {
                        "show_task_locations": false,
                        "show_subtasks": 3,
                        "show_subtask_parent_names": false,
                        "show_closed_subtasks": false,
                        "show_assignees": true,
                        "show_images": true,
                        "collapse_empty_columns": null,
                        "me_comments": true,
                        "me_subtasks": true,
                        "me_checklists": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/view/{view_id}": {
      "get": {
        "summary": "Get View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetView",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-105",
                    "name": "New View Name",
                    "type": "list",
                    "parent": {
                      "id": "512",
                      "type": 7
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "summary": "Update View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "UpdateView",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateViewrequest"
              },
              "example": {
                "name": "New View Name",
                "type": "list",
                "parent": {
                  "id": "512",
                  "type": 7
                },
                "grouping": {
                  "field": "status",
                  "dir": 1,
                  "collapsed": [],
                  "ignore": false
                },
                "divide": {
                  "field": null,
                  "dir": null,
                  "collapsed": []
                },
                "sorting": {
                  "fields": []
                },
                "filters": {
                  "op": "AND",
                  "fields": [],
                  "search": "",
                  "show_closed": false
                },
                "columns": {
                  "fields": []
                },
                "team_sidebar": {
                  "assignees": [],
                  "assigned_comments": false,
                  "unassigned_tasks": false
                },
                "settings": {
                  "show_task_locations": false,
                  "show_subtasks": 3,
                  "show_subtask_parent_names": false,
                  "show_closed_subtasks": false,
                  "show_assignees": true,
                  "show_images": true,
                  "collapse_empty_columns": null,
                  "me_comments": true,
                  "me_subtasks": true,
                  "me_checklists": true
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateViewresponse"
                },
                "example": {
                  "view": {
                    "id": "3c-105",
                    "name": "New View Name",
                    "type": "list",
                    "parent": {
                      "id": "512",
                      "type": 7
                    },
                    "grouping": {
                      "field": "status",
                      "dir": 1,
                      "collapsed": [],
                      "ignore": false
                    },
                    "divide": {
                      "field": null,
                      "dir": null,
                      "collapsed": []
                    },
                    "sorting": {
                      "fields": []
                    },
                    "filters": {
                      "op": "AND",
                      "fields": [],
                      "search": "",
                      "show_closed": false
                    },
                    "columns": {
                      "fields": []
                    },
                    "team_sidebar": {
                      "assignees": [],
                      "assigned_comments": false,
                      "unassigned_tasks": false
                    },
                    "settings": {
                      "show_task_locations": false,
                      "show_subtasks": 3,
                      "show_subtask_parent_names": false,
                      "show_closed_subtasks": false,
                      "show_assignees": true,
                      "show_images": true,
                      "collapse_empty_columns": null,
                      "me_comments": true,
                      "me_subtasks": true,
                      "me_checklists": true
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete View",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "DeleteView",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/view/{view_id}/task": {
      "get": {
        "summary": "Get View Tasks",
        "description": "While you can use the ClickUp API to manage the views that you have access to through the UI, they are great for filtering and sorting tasks. Below is an example view object and an explanation of each part.\n\n#### The View Object\n\n```\n{\n    \"name\": \"View Name,\n    \"type\": \"list\",\n\n    \"parent\": {\n        \"id\": 333,\n        \"type\": 7\n    },\n\n    \"grouping\": {\n        \"field\": \"status\",\n        \"dir\": 1\n    },\n\n    \"filters\": {\n        \"op\": \"AND\",\n        \"fields\": [\n            {\n                \"field\": \"assignee\",\n                \"op\": \"EQ\",\n                \"values\": []\n            }\n        ],\n        \"search\": \"\",\n        \"show_closed\": false\n    },\n\n    \"sorting\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\",\n                \"dir\": -1\n            }\n        ]\n    },\n\n    \"columns\": {\n        \"fields\": [\n            {\n                \"field\": \"dateCreated\"\n            }\n        ]\n    }\n}\n```\n\n##### View Types\n\nThe view `type` describes what kind of view the object is. This value can be either `list`, `board`, `calendar`, or `gantt`. You cannot currently work with page views through the public API.\n\n##### Parent Types\n\nThe `parent` object of the view describes what level of hierarchy the view lives on. Since a view can live on the `team` (`Workspace`), `Space`, `Folder`, or `List` level, you must specify this parent type along with its ID. Below are the available types:\n\n- Team: `7`\n\n- List: `6`\n\n- Folder: `5`,\n\n- Space: `4`\n\nBelow is an example of the parent object, on a list with the ID `234`.\n\n```\nconst parent = {\n    \"type\": 6,\n    \"id\": 234\n}\n```\n\n***Note:** Team level views are the views that live on the `Everything` level in the ClickUp UI.*\n\n#### Grouping\n\nThe grouping is basically the first sort field that you want to organize your tasks by. In the ClickUp UI it determines the display that the tasks should be shown in. For example, if you group by `priority`, all tasks in urgent priority will be grouped together and displayed under the red urgent priority flag. You should manipulate this field for views only if those views are intended to be viewed and manipulated through the UI. If you are using views purely for filtering and sorting through the public API, it is recommended that you set your grouping to `none`.\n\n__*Field:*__\nTo set the group type, you can set `grouping.field` to any of the following values:\n\n- `none` (recommended)\n\n- `status`\n\n- `priority`\n\n- `assignee`\n\n- `tag`\n\n- `dueDate`\n\n__*Dir:*__ Set the group dir to `1` or `-1` to change the direction of the group sort.\n\n#### Filters\n\nFilters are what make views powerful. It gives you the ability to form a complex combination of queries to find exactly the task that you are looking for.\n\n##### Filter Operator\n\nThe `op` property of the filters object stands for operator and determines in what way you want multiple filters to behave together. The available values for this property are `AND` and `OR`.\n\n##### Filter Search\n\nThe `search` property of the filters object is a filter for task name (it does not search the task description or any other property of the task object). Unlike all of the filters in `filters.fields`, this specific filter does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters.\n\n##### Filter Show Closed\n\nThe `show_closed` property is a shorthand filter to toggle the behavior of closed tasks. By default, this property is `false`. You can use the `status` filter (explained below) to achieve a similar outcome, however the main difference with this filter is it does not respect the value of `filters.op` and will always use `AND` in conjunction with other filters (similar to `search`).\n\n##### Filter Fields\n\nThe `filters.fields` array is where you will place a majority of your filters. Each object in this array will always follow this format:\n\n```\n{\n    \"field\": \"field name\",\n    \"op\": \"op name\",\n    \"values\": [] // array of values\n}\n```\n\n###### Archived\n\nTo filter for archived tasks, use the `archived` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter\n\n```\n{\n    \"field\": \"archived\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n*Values* - An array of `userid`'s\n\n###### Assignee\n\nTo filter by assignees, use the `assignee` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of `userid`'s\n\n*Example:*\n\n```\n{\n    \"field\": \"assignee\",\n    \"op\": \"ANY\",\n    \"values\": [182, 183]\n}\n```\n\n###### Priority\n\nTo filter by priority, use the `priority` field.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - An array of priority values\n\n*Example:*\n\n```\n{\n    \"field\": \"priority\",\n    \"op\": \"EQ\",\n    \"values\": [\"4\", \"-1\"]\n}\n```\n\n***Note:** `-1` is no priority*\n\n###### Date Filters\n\nTo filter by due date, use the `dueDate` field. You can also use the same operators and values for the following date fields, `startDate`, `dateClosed`, `dateCreated`, and `dateUpdated`. To use a Date Custom Field, use the Custom Field name which uses the format `cf_{{field_id}}`. For example, if the id of your Date Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nDue date values are dynamic values, which allow you to specify values such as `today` or `overdue` and query due dates without actually setting a specific timestamp. Each value is an object with a descriptive `op` property and sometimes one or more reference values.\n\n- `{ \"op\": \"today\" }`\n\n- `{ \"op\": \"yesterday\" }`\n\n- `{ \"op\": \"tomorrow\" }`\n\n- `{ \"op\": \"next7\" }` (next seven days)\n\n- `{ \"op\": \"last7\" }` (last seven days)\n\n- `{ \"op\": \"overdue\" }`\n\n- `{ \"op\": \"earlier\" }` (today and earlier)\n\n- `{ \"op\": \"thisweek\" }`\n\n- `{ \"op\": \"thismonth\" }`\n\n- `{ \"op\": \"lastmonth\" }`\n\n- `{ \"op\": \"eq\", \"dueDate\": 1579240800000 }` (exact date)\n\n- `{ \"op\": \"ls\", \"dueDate\": 1579240800000 }` (before date)\n\n- `{ \"op\": \"gt\", \"dueDate\": 1579240800000 }` (after date)\n\n- `{ \"op\": \"ra\", \"dueDate\": 1579240800000, \"startDate\": 1579068000000 }` (date range)\n\n- `{ \"op\": \"notNull\" }` (any date)\n\n- `{ \"op\": \"null\" }` (no date)\n\n*Example:*\n\n```\n{\n    \"field\": \"dueDate\",\n    \"op\": \"EQ\",\n    \"values\": [{ \"op\": \"notNull\" }]\n}\n```\n\n###### Status\n\nTo filter by Statuses, use the `status` field.\n\n_Operators:_\n\n- `EQ`\n\n- `NOT`\n\n*Values:*\nUse the `{ \"type\": \"x\" }` format to target status types, such as `active`, `done`, or `closed`. Otherwise, pass an array of status names as strings.\n\n- `{ \"type\": \"active\" }`\n\n- `{ \"type\": \"done\" }`\n\n- `{ \"type\": \"closed\" }`\n\n- `\"in progress\"`\n\n*Example:*\n\n```\n{\n    \"field\": \"status\",\n    \"op\": \"EQ\",\n    \"values\": [\"in progress\", { \"type\": \"done\" }]\n}\n```\n\n###### Tag\n\nTo filter by tags, use the `tag` field.\n\n*Operators:*\n\n- `ANY`\n\n- `ALL`\n\n- `NOT ANY`\n\n- `NOT ALL`\n\n*Values* - An array of tags names\n\n*Example:*\n\n```\n{\n    \"field\": \"tag\",\n    \"op\": \"ANY\",\n    \"values\": [\"tag 1\", \"tag 2\"]\n}\n```\n\n###### Recurring\n\nTo filter by whether or not tasks are recurring, use the `recurring` field. `EQ` will only include tasks that are recurring, `NOT` only includes tasks that are not recurring.\n\n*Operators:*\n\n- `EQ`\n\n- `NOT`\n\n*Values* - The values array is ignored for this filter but must be included\n\n```\n{\n    \"field\": \"recurring\",\n    \"op\": \"EQ\",\n    \"values\": []\n}\n```\n\n###### Custom Fields\n\nTo filter by a Custom Field, you must create the field name using the format `cf_{{field_id}}`. For example, if the id of your Custom Field is `ec49d70b-72e1-40c2-b04c-b0f728499f28`, then the field name would be `cf_ec49d70b-72e1-40c2-b04c-b0f728499f28`. You can find the id of the Custom Fields that are available for a given List using the `GET Accessible Custom Fields` call, or for tasks throughout your Workspace using the `Get Filtered team tasks` call.\n\n**Operators:** All Custom Field types can use the filter operators `EQ` and `NOT`. Additionally, you can use the operators `GT`, `GTE`, `LT`, and `LTE` for `number` and `currency` fields. For Date Custom Fields, you can use the Date operators as specified above.\n\n**Values:** The type of values you can add to the `values` array depend on the type of Custom Field that you are filtering by. For instance, for a number field you would pass `[12]`, but to indicate a drop down option, you would pass the ID, like `[\"435562d0-0b35-4cfe-9726-1c4baf8d1c44\"]`. For any Custom Field, you can filter by `is set` and `not set` by passing `{ \"op\": \"NOT\", \"values\": [null] }` (does not equal null) and `{ \"op\": \"NOT\", \"values\": [null] }` (equals null) respectively.\n\n```\n{\n    \"field\": \"cf_ec49d70b-72e1-40c2-b04c-b0f728499f28\",\n    \"op\": \"EQ\",\n    \"values\": [null]\n}\n```\n\n#### Sorting\n\nAdd sorting options by passing sort objects to the `view.sorting.fields` array. You can include a `dir` value of `1` or `-1` to specify a sort direction. You can use any `field` value that you can use in filters, as specified above.\n\n#### Columns\n\nSpecify the columns that are visible to you in the UI by adding column objects to the `view.columns.fields` array. You can use any `field` value that you can use in filters, as specified above.\n\n#### Get View Tasks\n\nFinally, you can use the `GET /api/v2/view/{{view_id}}/tasks` route to get the resulting tasks from your view query. You must create a view first with the view CRUD operations to get the `view_id`.",
        "operationId": "GetViewTasks",
        "parameters": [
          {
            "name": "view_id",
            "in": "path",
            "description": "105 (string)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "3c"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "example": 0
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetViewTasksresponse"
                },
                "example": {
                  "tasks": [
                    {
                      "id": "9hx",
                      "name": "New Task Name",
                      "status": {
                        "status": "Open",
                        "color": "#d3d3d3",
                        "orderindex": 0,
                        "type": "open"
                      },
                      "orderindex": "1.00000000000000000000000000000000",
                      "date_created": "1567780450202",
                      "date_updated": "1567780450202",
                      "date_closed": null,
                      "creator": {
                        "id": 183,
                        "username": "John Doe",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "assignees": [],
                      "checklists": [],
                      "tags": [],
                      "parent": null,
                      "priority": null,
                      "due_date": null,
                      "start_date": null,
                      "time_estimate": null,
                      "time_spent": null,
                      "list": {
                        "id": "123"
                      },
                      "folder": {
                        "id": "456"
                      },
                      "space": {
                        "id": "789"
                      },
                      "url": "https://app.clickup.com/t/9hx"
                    },
                    {
                      "id": "9hz",
                      "name": "Second task",
                      "status": {
                        "status": "Open",
                        "color": "#d3d3d3",
                        "orderindex": 0,
                        "type": "open"
                      },
                      "orderindex": "2.00000000000000000000000000000000",
                      "date_created": "1567780450202",
                      "date_updated": "1567780450202",
                      "date_closed": null,
                      "creator": {
                        "id": 183,
                        "username": "John Doe",
                        "color": "#827718",
                        "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
                      },
                      "assignees": [],
                      "checklists": [],
                      "tags": [],
                      "parent": null,
                      "priority": null,
                      "due_date": null,
                      "start_date": null,
                      "time_estimate": null,
                      "time_spent": null,
                      "list": {
                        "id": "123"
                      },
                      "folder": {
                        "id": "456"
                      },
                      "space": {
                        "id": "789"
                      },
                      "url": "https://app.clickup.com/t/9hz"
                    }
                  ],
                  "last_page": true
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/team/{team_id}/webhook": {
      "post": {
        "summary": "Create Webhook",
        "description": "The ClickUp API 2.0 now supports webhooks to notify you when changes are made to your resources. If you have not used webhooks before, our friends from Zapier have put together a great [post](https://zapier.com/blog/what-are-webhooks/) that describes them in detail.\n\n### Events\n\nBelow are a list of events that you can subscribe to in order to listen to specific changes to your resources. You can also pass the wildcard `*` to listen to all events that are available.\n\n- taskCreated\n\n- taskUpdated\n\n- taskDeleted\n\n- taskPriorityUpdated\n\n- taskStatusUpdated\n\n- taskAssigneeUpdated\n\n- taskDueDateUpdated\n\n- taskTagUpdated\n\n- taskMoved\n\n- taskCommentPosted\n\n- taskCommentUpdated\n\n- taskTimeEstimateUpdated\n\n- taskTimeTrackedUpdated\n\n- listCreated\n\n- listUpdated\n\n- listDeleted\n\n- folderCreated\n\n- folderUpdated\n\n- folderDeleted\n\n- spaceCreated\n\n- spaceUpdated\n\n- spaceDeleted\n\n- goalCreated\n\n- goalUpdated\n\n- goalDeleted\n\n- keyResultCreated\n\n- keyResultUpdated\n\n- keyResultDeleted\n\n### Webhook payloads\n\nThese example payloads are sent when webhook events are triggered by activity in your Workspace.\n\n#### taskCreated payload\n\nThis webhook is triggered when a new task is created. We also send the `taskStatusUpdated` payload when a new task is created.\n\n```\n{\n  \"event\": \"taskCreated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    },\n    {\n      \"id\": \"2800763136700363640\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"task_creation\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": null\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskStatusUpdated` payload that was sent when a new task was created:\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskUpdated payload\n\nThis webhook is triggered when a task is updated. This example payload was sent when a task description was added to the task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800768061568222238\",\n      \"type\": 1,\n      \"date\": \"1642734925064\",\n      \"field\": \"content\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"{\\\"ops\\\":[{\\\"insert\\\":\\\"This is a task description update to trigger the \\\"},{\\\"insert\\\":\\\"\\\\n\\\",\\\"attributes\\\":{\\\"block-id\\\":\\\"block-24d0457c-908f-412c-8267-da08f8dc93e4\\\"}}]}\"\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is a `taskUpdated` payload that was sent when a Custom Field was set on a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800771175285296851\",\n      \"type\": 1,\n      \"date\": \"1642735110657\",\n      \"field\": \"custom_field\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n      \"custom_field\": {\n        \"id\": \"862a38bb-eaba-4b9b-a4b5-c09d2a8c082f\",\n        \"name\": \"Selection Dropdown\",\n        \"type\": \"drop_down\",\n        \"type_config\": {\n          \"default\": 0,\n          \"placeholder\": null,\n          \"new_drop_down\": true,\n          \"options\": [\n            {\n              \"id\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n              \"name\": \"Monthly\",\n              \"value\": \"Monthly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 0\n            },\n            {\n              \"id\": \"5c69d237-f440-4498-ae46-3b3948db931b\",\n              \"name\": \"Quarterly\",\n              \"value\": \"Quarterly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 1\n            },\n            {\n              \"id\": \"fc4b63d1-d4d5-45fc-bee5-3adef2b15dff\",\n              \"name\": \"Yearly\",\n              \"value\": \"Yearly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 2\n            },\n            {\n              \"id\": \"8c7a4048-53fd-455a-82ba-ecf2a8a4c74d\",\n              \"name\": \"here's a really long long long drop down option with a long line of text\",\n              \"value\": \"here's a really long long long drop down option with a long line of text\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 3\n            }\n          ]\n        },\n        \"values_set\": null,\n        \"userid\": \"2770032\",\n        \"date_created\": \"1611729648993\",\n        \"hide_from_guests\": false,\n        \"team_id\": \"6931406\",\n        \"deleted\": false,\n        \"deleted_by\": null,\n        \"pinned\": true,\n        \"required\": false,\n        \"required_on_subtasks\": false,\n        \"linked_subcategory\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDeleted payload\n\nThis webhook is triggered when a task is deleted.\n\n```\n{\n  \"event\": \"taskDeleted\",\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskPriorityUpdated\n\nThis webhook is triggered when a task's Priority is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskPriorityUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Priority was set.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskStatusUpdated\n\nThis webhook is triggered when a task's Status is updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Status was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskAssigneeUpdated payload\n\nThis webhook is triggered when a task's assignee is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskAssigneeUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Assignee was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDueDateUpdated payload\n\nThis webhook is triggered when a task's due date is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskDueDateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's due date was updated.\n\n```\n{\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTagUpdated payload\n\nThis webhook is triggered when task Tags are added or removed. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTagUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload sent when a task's Tags was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskMoved payload\n\nThis webhook is triggered when a task is moved to a new List. We also send the `taskUpdated` and `spaceUpdated` payloads.\n\n```\n{\n  \"event\": \"taskMoved\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentPosted\n\nThis webhook is triggered when a new comment is posted on a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentPosted\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n             \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere's an example `taskUpdated` payload that was sent when a task comment was created:\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 2770032,\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentUpdated payload\n\nThis webhook is triggered when a task comment is edited. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task comment was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeEstimateUpdated payload\n\nThis webhook is triggered when a time estimate is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Time Estimate was set.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeTrackedUpdated\n\nThis webhook is triggered when a time entry is added to a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeTrackedUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a time entry was added to a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listCreated payload\n\nThis webhook is triggered when a new List is created in your Workspace. We also send the `spaceUpdated` for the Space where the new List is created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641234\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new List was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listUpdated payload\n\nThis webhook is triggered when a List is updated. The below example was sent when a List was renamed.\n\n```\n{\n  \"event\": \"listUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"8a2f82db-7718-4fdb-9493-4849e67f009d\",\n      \"type\": 6,\n      \"date\": \"1642740510345\",\n      \"field\": \"name\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": \"webhook payloads 2\",\n      \"after\": \"Webhook payloads round 2\"\n    }\n  ],\n  \"list_id\": \"162641285\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listDeleted payload\n\nThis webhook is triggered when a List is deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641062\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderCreated payload\n\nThis webhook is triggered when a new Folder is created. We also send the `spaceUpdated` payload.\n\n```\n{\n  \"event\": \"folderCreated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new Folder was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderUpdated payload\n\nThis webhook is triggered when a Folder is updated. This example was sent when a Folder was renamed.\n\n```\n{\n  \"event\": \"folderUpdated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderDeleted payload\n\nThis webhook is triggered when a Folder is deleted. We also send the `spaceUpdated` and `listDeleted` payloads.\n\n```\n{\n  \"event\": \"folderDeleted\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listDeleted` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641543\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceCreated payload\n\nThis webhook is triggered when a new Space is created. We also send the `listCreated` and `spaceUpdated` payloads as a List is automatically created in the new Space.\n\n```\n{\n  \"event\": \"spaceCreated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listCreated` payload that was sent when a new Space was created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when in a new Space was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceUpdated payload\n\nThis webhook is triggered when a Space is updated. This example was sent when a Space was renamed.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceDeleted payload\n\nThis webhook is triggered when a Space is deleted. We also send `listDeleted` payloads for any Lists deleted with the Space.\n\n```\n{\n  \"event\": \"spaceDeleted\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `listDeleted` payload that was sent when a Space was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### goalCreated payload\n\nThis webhook is triggered when a Goal is created.\n\n```\n{\n  \"event\": \"goalCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalUpdated payload\n\nThis webhook is triggered when a Goal is updated.\n\n```\n{\n  \"event\": \"goalUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalDeleted payload\n\nThis webhook is triggered when a Goal is deleted.\n\n```\n{\n  \"event\": \"goalDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultCreated payload\n\nThis webhook is triggered when a Target of a Goal is created.\n\n```\n{\n  \"event\": \"keyResultCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultUpdated payload\n\nThis webhook is triggered when a Target of a Goal is updated.\n\n```\n{\n  \"event\": \"keyResultUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultDeleted payload\n\nThis webhook is triggered when a Target of a Goal is deleted.\n\n```\n{\n  \"event\": \"keyResultDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n### Endpoint\n\nWhen an event occurs that your webhoook is subscribed to, we will send details about that change to the endpoint that you provided when you create the webhook. If no protocol is provided on the endpoint, the default will be https. In the future, non-ssl may not be supported so it is highly recommended to use the secure protocol when possible.\n\nRequests to your endpoints will always adhere to the following criteria:\n\n- Always sent with the method `POST`\n\n- The `Content-Type` will always be `application/json`\n\n- The `webhook_id`, `event`, and resource ID will be passed in the body.\n\n- If a history item exists describing the event, it will be passed in a `history_items` array.\n\nAn example request:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskUpdated\",\n    \"task_id\":\"c0j\",\n    \"history_items\": [\n        {\n            \"id\":\"33169\",\n            \"type\":1,\n            \"date\":\"1575650190085\",\n            \"field\":\"status\",\n            \"parent_id\":\"1753\",\n            \"data\":{\n                \"status_type\":\"closed\"\n            },\n            \"source\":null,\n            \"user\":{\n                \"id\":183,\n                \"username\":\"John Doe\",\n                \"email\":\"example@email.com\",\n                \"color\":\"#827718\",\n                \"initials\":\"JK\",\n                \"profilePicture\":\"https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg\"\n            },\n            \"before\":{\n                \"status\":\"open\",\n                \"color\":\"#d3d3d3\",\n                \"orderindex\":0,\n                \"type\":\"open\"\n            },\n            \"after\":{\n                \"status\":\"complete\",\n                \"color\":\"#6bc950\",\n                \"orderindex\":1,\n                \"type\":\"closed\"\n            }\n        }\n    ]\n}\n```\n\n### Webhook Health Status\n\nTo ensure the efficient use of our resources here at ClickUp, the health of the webhooks that you create will be monitored. As long as the endpoints that you provide us send a successful HTTP status code in a timely manner, your webhook will stay active and healthy. If an endpoint becomes degraded, we will set your webhook to the appropriate health status described below.\n\n#### `active`\n\nIf your webhook is sending us healthy http status codes, we will keep sending your subscribed changes to the endpoint.\n\n#### `failing`\n\nIf an unsuccessful http status code is received or if a request takes longer that 15 seconds to complete, we will consider the webhook as failing. We understand though that flukes can happen, so we will retry your webhook five times for each event. If on the fifth retry the endpoint is still failing, we will increment a `fail_count` which you can see in the webhook `health` object. This count will be incremented for each event that we fail to send you.\n\nIf at any time while your webhook is marked as `failing` the issues with your endpoint are resolved and success status codes are received, we will automatically mark your webhook back to the `active` status and clear the `fail_count`.\n\n#### `suspended`\n\nIf your webhook is set as `failing` and the fail count reaches 100, we will mark the webhook as suspended. We will no longer attempt to send events to this webhook. The only way reactivate this webhook is to fix the endpoint and set the status back to `active` using the `PUT /api/v2/webhook/{webhook_id}` request.\n\n### `401 Gone`\n\nSometimes the webhooks that you create are no longer necessary to keep active. As a convenience to you, we will immediately mark webhooks as suspended if a `401` http status code is received.\n\n### Signature\n\nAll requests sent to your webhook endpoints will be signed so that you can verify that traffic coming to your servers is coming from ClickUp. To sign our requests, we use a hash-based message authentication code, or [HMAC](https://en.wikipedia.org/wiki/HMAC).\n\nEach webhook that is created will be provided with a `secret` which can be found on any of the CRUD webhook endpoints. When a request is sent to your webhook endpoint a signature will be created by hashing the body of the request that is being sent with the shared secret. This signature is sent in the `X-Signature` http header so that the client can verify it was made with the same secret that it has access to.\n\nAn example event request sent to a webhook endpoint:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\nX-Signature: f7bc83f430538424b13298e6aa6\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskCreated\",\n    \"task_id\":\"c0j\"\n}\n```\n\nThe `X-Signature` value for this request was created by creating a `SHA-256` hash of the above request body using the provided `secret` as a key. In order for the client to verify the signature, it can create a hash signature using the same algorithm and see if the value matches. Below is an example using Node.js. You can find examples using other languages [here](https://github.com/danharper/hmac-examples).\n\n```\nconst crypto = require('crypto');\n\nconst key = 'secret'; // from the webhook object\nconst body = '{\"webhook_id\":\"7689a169-a000-4985-8676-6902b96d6627\",\"event\":\"taskCreated\",\"task_id\":\"c0j\"}';\n\nconst hash = crypto.createHmac('sha256', key).update(body);\n\nconst signature = hash.digest('hex');\n```\n\n***Note:** The body in this example already exists as a string. If you are using an http client that automatically parses request bodies, you must stringify the object with no white spaces inserted*\n\n***Note:** Signatures will always be digested using hexadecimal*\n\n***Note:** Only webhooks that were created by the authenticated user will be returned on the fetch webhook endpoints.*",
        "operationId": "CreateWebhook",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "You may filter the location of resources that get sent to a webhook by passing an optional `space_id`, `folder_id`, `list_id`, or `task_id` in the body of the request.\nWithout specifying any events, all event types will be sent to the webhook. However, you can filter for specific actions by sending an `events` array.\nTo subscribe to specific events, pass an array of `events` that you want to subscribe to, otherwise pass `\"*\"` to subscribe to everything.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookrequest"
              },
              "example": {
                "endpoint": "https://yourdomain.com/webhook",
                "events": [
                  "taskCreated",
                  "taskUpdated",
                  "taskDeleted",
                  "taskPriorityUpdated",
                  "taskStatusUpdated",
                  "taskAssigneeUpdated",
                  "taskDueDateUpdated",
                  "taskTagUpdated",
                  "taskMoved",
                  "taskCommentPosted",
                  "taskCommentUpdated",
                  "taskTimeEstimateUpdated",
                  "taskTimeTrackedUpdated",
                  "listCreated",
                  "listUpdated",
                  "listDeleted",
                  "folderCreated",
                  "folderUpdated",
                  "folderDeleted",
                  "spaceCreated",
                  "spaceUpdated",
                  "spaceDeleted",
                  "goalCreated",
                  "goalUpdated",
                  "goalDeleted",
                  "keyResultCreated",
                  "keyResultUpdated",
                  "keyResultDeleted"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWebhookresponse"
                },
                "example": {
                  "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
                  "webhook": {
                    "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
                    "userid": 183,
                    "team_id": 108,
                    "endpoint": "https://yourdomain.com/webhook",
                    "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
                    "events": [
                      "taskCreated",
                      "taskUpdated",
                      "taskDeleted",
                      "taskPriorityUpdated",
                      "taskStatusUpdated",
                      "taskAssigneeUpdated",
                      "taskDueDateUpdated",
                      "taskTagUpdated",
                      "taskMoved",
                      "taskCommentPosted",
                      "taskCommentUpdated",
                      "taskTimeEstimateUpdated",
                      "taskTimeTrackedUpdated",
                      "listCreated",
                      "listUpdated",
                      "listDeleted",
                      "folderCreated",
                      "folderUpdated",
                      "folderDeleted",
                      "spaceCreated",
                      "spaceUpdated",
                      "spaceDeleted",
                      "goalCreated",
                      "goalUpdated",
                      "goalDeleted",
                      "keyResultCreated",
                      "keyResultUpdated",
                      "keyResultDeleted"
                    ],
                    "task_id": null,
                    "list_id": null,
                    "folder_id": null,
                    "space_id": null,
                    "health": {
                      "status": "active",
                      "fail_count": 0
                    },
                    "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "summary": "Get Webhooks",
        "description": "The ClickUp API 2.0 now supports webhooks to notify you when changes are made to your resources. If you have not used webhooks before, our friends from Zapier have put together a great [post](https://zapier.com/blog/what-are-webhooks/) that describes them in detail.\n\n### Events\n\nBelow are a list of events that you can subscribe to in order to listen to specific changes to your resources. You can also pass the wildcard `*` to listen to all events that are available.\n\n- taskCreated\n\n- taskUpdated\n\n- taskDeleted\n\n- taskPriorityUpdated\n\n- taskStatusUpdated\n\n- taskAssigneeUpdated\n\n- taskDueDateUpdated\n\n- taskTagUpdated\n\n- taskMoved\n\n- taskCommentPosted\n\n- taskCommentUpdated\n\n- taskTimeEstimateUpdated\n\n- taskTimeTrackedUpdated\n\n- listCreated\n\n- listUpdated\n\n- listDeleted\n\n- folderCreated\n\n- folderUpdated\n\n- folderDeleted\n\n- spaceCreated\n\n- spaceUpdated\n\n- spaceDeleted\n\n- goalCreated\n\n- goalUpdated\n\n- goalDeleted\n\n- keyResultCreated\n\n- keyResultUpdated\n\n- keyResultDeleted\n\n### Webhook payloads\n\nThese example payloads are sent when webhook events are triggered by activity in your Workspace.\n\n#### taskCreated payload\n\nThis webhook is triggered when a new task is created. We also send the `taskStatusUpdated` payload when a new task is created.\n\n```\n{\n  \"event\": \"taskCreated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    },\n    {\n      \"id\": \"2800763136700363640\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"task_creation\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": null\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskStatusUpdated` payload that was sent when a new task was created:\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskUpdated payload\n\nThis webhook is triggered when a task is updated. This example payload was sent when a task description was added to the task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800768061568222238\",\n      \"type\": 1,\n      \"date\": \"1642734925064\",\n      \"field\": \"content\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"{\\\"ops\\\":[{\\\"insert\\\":\\\"This is a task description update to trigger the \\\"},{\\\"insert\\\":\\\"\\\\n\\\",\\\"attributes\\\":{\\\"block-id\\\":\\\"block-24d0457c-908f-412c-8267-da08f8dc93e4\\\"}}]}\"\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is a `taskUpdated` payload that was sent when a Custom Field was set on a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800771175285296851\",\n      \"type\": 1,\n      \"date\": \"1642735110657\",\n      \"field\": \"custom_field\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n      \"custom_field\": {\n        \"id\": \"862a38bb-eaba-4b9b-a4b5-c09d2a8c082f\",\n        \"name\": \"Selection Dropdown\",\n        \"type\": \"drop_down\",\n        \"type_config\": {\n          \"default\": 0,\n          \"placeholder\": null,\n          \"new_drop_down\": true,\n          \"options\": [\n            {\n              \"id\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n              \"name\": \"Monthly\",\n              \"value\": \"Monthly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 0\n            },\n            {\n              \"id\": \"5c69d237-f440-4498-ae46-3b3948db931b\",\n              \"name\": \"Quarterly\",\n              \"value\": \"Quarterly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 1\n            },\n            {\n              \"id\": \"fc4b63d1-d4d5-45fc-bee5-3adef2b15dff\",\n              \"name\": \"Yearly\",\n              \"value\": \"Yearly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 2\n            },\n            {\n              \"id\": \"8c7a4048-53fd-455a-82ba-ecf2a8a4c74d\",\n              \"name\": \"here's a really long long long drop down option with a long line of text\",\n              \"value\": \"here's a really long long long drop down option with a long line of text\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 3\n            }\n          ]\n        },\n        \"values_set\": null,\n        \"userid\": \"2770032\",\n        \"date_created\": \"1611729648993\",\n        \"hide_from_guests\": false,\n        \"team_id\": \"6931406\",\n        \"deleted\": false,\n        \"deleted_by\": null,\n        \"pinned\": true,\n        \"required\": false,\n        \"required_on_subtasks\": false,\n        \"linked_subcategory\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDeleted payload\n\nThis webhook is triggered when a task is deleted.\n\n```\n{\n  \"event\": \"taskDeleted\",\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskPriorityUpdated\n\nThis webhook is triggered when a task's Priority is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskPriorityUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Priority was set.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskStatusUpdated\n\nThis webhook is triggered when a task's Status is updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Status was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskAssigneeUpdated payload\n\nThis webhook is triggered when a task's assignee is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskAssigneeUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Assignee was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDueDateUpdated payload\n\nThis webhook is triggered when a task's due date is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskDueDateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's due date was updated.\n\n```\n{\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTagUpdated payload\n\nThis webhook is triggered when task Tags are added or removed. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTagUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload sent when a task's Tags was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskMoved payload\n\nThis webhook is triggered when a task is moved to a new List. We also send the `taskUpdated` and `spaceUpdated` payloads.\n\n```\n{\n  \"event\": \"taskMoved\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentPosted\n\nThis webhook is triggered when a new comment is posted on a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentPosted\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n             \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere's an example `taskUpdated` payload that was sent when a task comment was created:\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 2770032,\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentUpdated payload\n\nThis webhook is triggered when a task comment is edited. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task comment was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeEstimateUpdated payload\n\nThis webhook is triggered when a time estimate is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Time Estimate was set.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeTrackedUpdated\n\nThis webhook is triggered when a time entry is added to a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeTrackedUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a time entry was added to a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listCreated payload\n\nThis webhook is triggered when a new List is created in your Workspace. We also send the `spaceUpdated` for the Space where the new List is created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641234\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new List was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listUpdated payload\n\nThis webhook is triggered when a List is updated. The below example was sent when a List was renamed.\n\n```\n{\n  \"event\": \"listUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"8a2f82db-7718-4fdb-9493-4849e67f009d\",\n      \"type\": 6,\n      \"date\": \"1642740510345\",\n      \"field\": \"name\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": \"webhook payloads 2\",\n      \"after\": \"Webhook payloads round 2\"\n    }\n  ],\n  \"list_id\": \"162641285\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listDeleted payload\n\nThis webhook is triggered when a List is deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641062\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderCreated payload\n\nThis webhook is triggered when a new Folder is created. We also send the `spaceUpdated` payload.\n\n```\n{\n  \"event\": \"folderCreated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new Folder was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderUpdated payload\n\nThis webhook is triggered when a Folder is updated. This example was sent when a Folder was renamed.\n\n```\n{\n  \"event\": \"folderUpdated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderDeleted payload\n\nThis webhook is triggered when a Folder is deleted. We also send the `spaceUpdated` and `listDeleted` payloads.\n\n```\n{\n  \"event\": \"folderDeleted\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listDeleted` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641543\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceCreated payload\n\nThis webhook is triggered when a new Space is created. We also send the `listCreated` and `spaceUpdated` payloads as a List is automatically created in the new Space.\n\n```\n{\n  \"event\": \"spaceCreated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listCreated` payload that was sent when a new Space was created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when in a new Space was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceUpdated payload\n\nThis webhook is triggered when a Space is updated. This example was sent when a Space was renamed.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceDeleted payload\n\nThis webhook is triggered when a Space is deleted. We also send `listDeleted` payloads for any Lists deleted with the Space.\n\n```\n{\n  \"event\": \"spaceDeleted\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `listDeleted` payload that was sent when a Space was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### goalCreated payload\n\nThis webhook is triggered when a Goal is created.\n\n```\n{\n  \"event\": \"goalCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalUpdated payload\n\nThis webhook is triggered when a Goal is updated.\n\n```\n{\n  \"event\": \"goalUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalDeleted payload\n\nThis webhook is triggered when a Goal is deleted.\n\n```\n{\n  \"event\": \"goalDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultCreated payload\n\nThis webhook is triggered when a Target of a Goal is created.\n\n```\n{\n  \"event\": \"keyResultCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultUpdated payload\n\nThis webhook is triggered when a Target of a Goal is updated.\n\n```\n{\n  \"event\": \"keyResultUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultDeleted payload\n\nThis webhook is triggered when a Target of a Goal is deleted.\n\n```\n{\n  \"event\": \"keyResultDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n### Endpoint\n\nWhen an event occurs that your webhoook is subscribed to, we will send details about that change to the endpoint that you provided when you create the webhook. If no protocol is provided on the endpoint, the default will be https. In the future, non-ssl may not be supported so it is highly recommended to use the secure protocol when possible.\n\nRequests to your endpoints will always adhere to the following criteria:\n\n- Always sent with the method `POST`\n\n- The `Content-Type` will always be `application/json`\n\n- The `webhook_id`, `event`, and resource ID will be passed in the body.\n\n- If a history item exists describing the event, it will be passed in a `history_items` array.\n\nAn example request:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskUpdated\",\n    \"task_id\":\"c0j\",\n    \"history_items\": [\n        {\n            \"id\":\"33169\",\n            \"type\":1,\n            \"date\":\"1575650190085\",\n            \"field\":\"status\",\n            \"parent_id\":\"1753\",\n            \"data\":{\n                \"status_type\":\"closed\"\n            },\n            \"source\":null,\n            \"user\":{\n                \"id\":183,\n                \"username\":\"John Doe\",\n                \"email\":\"example@email.com\",\n                \"color\":\"#827718\",\n                \"initials\":\"JK\",\n                \"profilePicture\":\"https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg\"\n            },\n            \"before\":{\n                \"status\":\"open\",\n                \"color\":\"#d3d3d3\",\n                \"orderindex\":0,\n                \"type\":\"open\"\n            },\n            \"after\":{\n                \"status\":\"complete\",\n                \"color\":\"#6bc950\",\n                \"orderindex\":1,\n                \"type\":\"closed\"\n            }\n        }\n    ]\n}\n```\n\n### Webhook Health Status\n\nTo ensure the efficient use of our resources here at ClickUp, the health of the webhooks that you create will be monitored. As long as the endpoints that you provide us send a successful HTTP status code in a timely manner, your webhook will stay active and healthy. If an endpoint becomes degraded, we will set your webhook to the appropriate health status described below.\n\n#### `active`\n\nIf your webhook is sending us healthy http status codes, we will keep sending your subscribed changes to the endpoint.\n\n#### `failing`\n\nIf an unsuccessful http status code is received or if a request takes longer that 15 seconds to complete, we will consider the webhook as failing. We understand though that flukes can happen, so we will retry your webhook five times for each event. If on the fifth retry the endpoint is still failing, we will increment a `fail_count` which you can see in the webhook `health` object. This count will be incremented for each event that we fail to send you.\n\nIf at any time while your webhook is marked as `failing` the issues with your endpoint are resolved and success status codes are received, we will automatically mark your webhook back to the `active` status and clear the `fail_count`.\n\n#### `suspended`\n\nIf your webhook is set as `failing` and the fail count reaches 100, we will mark the webhook as suspended. We will no longer attempt to send events to this webhook. The only way reactivate this webhook is to fix the endpoint and set the status back to `active` using the `PUT /api/v2/webhook/{webhook_id}` request.\n\n### `401 Gone`\n\nSometimes the webhooks that you create are no longer necessary to keep active. As a convenience to you, we will immediately mark webhooks as suspended if a `401` http status code is received.\n\n### Signature\n\nAll requests sent to your webhook endpoints will be signed so that you can verify that traffic coming to your servers is coming from ClickUp. To sign our requests, we use a hash-based message authentication code, or [HMAC](https://en.wikipedia.org/wiki/HMAC).\n\nEach webhook that is created will be provided with a `secret` which can be found on any of the CRUD webhook endpoints. When a request is sent to your webhook endpoint a signature will be created by hashing the body of the request that is being sent with the shared secret. This signature is sent in the `X-Signature` http header so that the client can verify it was made with the same secret that it has access to.\n\nAn example event request sent to a webhook endpoint:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\nX-Signature: f7bc83f430538424b13298e6aa6\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskCreated\",\n    \"task_id\":\"c0j\"\n}\n```\n\nThe `X-Signature` value for this request was created by creating a `SHA-256` hash of the above request body using the provided `secret` as a key. In order for the client to verify the signature, it can create a hash signature using the same algorithm and see if the value matches. Below is an example using Node.js. You can find examples using other languages [here](https://github.com/danharper/hmac-examples).\n\n```\nconst crypto = require('crypto');\n\nconst key = 'secret'; // from the webhook object\nconst body = '{\"webhook_id\":\"7689a169-a000-4985-8676-6902b96d6627\",\"event\":\"taskCreated\",\"task_id\":\"c0j\"}';\n\nconst hash = crypto.createHmac('sha256', key).update(body);\n\nconst signature = hash.digest('hex');\n```\n\n***Note:** The body in this example already exists as a string. If you are using an http client that automatically parses request bodies, you must stringify the object with no white spaces inserted*\n\n***Note:** Signatures will always be digested using hexadecimal*\n\n***Note:** Only webhooks that were created by the authenticated user will be returned on the fetch webhook endpoints.*",
        "operationId": "GetWebhooks",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "description": "Team ID (Workspace)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "number",
              "format": "double",
              "example": 123
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWebhooksresponse"
                },
                "example": {
                  "webhooks": [
                    {
                      "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
                      "userid": 183,
                      "team_id": 108,
                      "endpoint": "https://yourdomain.com/webhook",
                      "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
                      "events": [
                        "taskCreated",
                        "taskUpdated",
                        "taskDeleted",
                        "taskPriorityUpdated",
                        "taskStatusUpdated",
                        "taskAssigneeUpdated",
                        "taskDueDateUpdated",
                        "taskTagUpdated",
                        "taskMoved",
                        "taskCommentPosted",
                        "taskCommentUpdated",
                        "taskTimeEstimateUpdated",
                        "taskTimeTrackedUpdated",
                        "listCreated",
                        "listUpdated",
                        "listDeleted",
                        "folderCreated",
                        "folderUpdated",
                        "folderDeleted",
                        "spaceCreated",
                        "spaceUpdated",
                        "spaceDeleted",
                        "goalCreated",
                        "goalUpdated",
                        "goalDeleted",
                        "keyResultCreated",
                        "keyResultUpdated",
                        "keyResultDeleted"
                      ],
                      "task_id": null,
                      "list_id": null,
                      "folder_id": null,
                      "space_id": null,
                      "health": {
                        "status": "failing",
                        "fail_count": 5
                      },
                      "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/webhook/{webhook_id}": {
      "put": {
        "summary": "Update Webhook",
        "description": "The ClickUp API 2.0 now supports webhooks to notify you when changes are made to your resources. If you have not used webhooks before, our friends from Zapier have put together a great [post](https://zapier.com/blog/what-are-webhooks/) that describes them in detail.\n\n### Events\n\nBelow are a list of events that you can subscribe to in order to listen to specific changes to your resources. You can also pass the wildcard `*` to listen to all events that are available.\n\n- taskCreated\n\n- taskUpdated\n\n- taskDeleted\n\n- taskPriorityUpdated\n\n- taskStatusUpdated\n\n- taskAssigneeUpdated\n\n- taskDueDateUpdated\n\n- taskTagUpdated\n\n- taskMoved\n\n- taskCommentPosted\n\n- taskCommentUpdated\n\n- taskTimeEstimateUpdated\n\n- taskTimeTrackedUpdated\n\n- listCreated\n\n- listUpdated\n\n- listDeleted\n\n- folderCreated\n\n- folderUpdated\n\n- folderDeleted\n\n- spaceCreated\n\n- spaceUpdated\n\n- spaceDeleted\n\n- goalCreated\n\n- goalUpdated\n\n- goalDeleted\n\n- keyResultCreated\n\n- keyResultUpdated\n\n- keyResultDeleted\n\n### Webhook payloads\n\nThese example payloads are sent when webhook events are triggered by activity in your Workspace.\n\n#### taskCreated payload\n\nThis webhook is triggered when a new task is created. We also send the `taskStatusUpdated` payload when a new task is created.\n\n```\n{\n  \"event\": \"taskCreated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    },\n    {\n      \"id\": \"2800763136700363640\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"task_creation\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": null\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskStatusUpdated` payload that was sent when a new task was created:\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskUpdated payload\n\nThis webhook is triggered when a task is updated. This example payload was sent when a task description was added to the task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800768061568222238\",\n      \"type\": 1,\n      \"date\": \"1642734925064\",\n      \"field\": \"content\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"{\\\"ops\\\":[{\\\"insert\\\":\\\"This is a task description update to trigger the \\\"},{\\\"insert\\\":\\\"\\\\n\\\",\\\"attributes\\\":{\\\"block-id\\\":\\\"block-24d0457c-908f-412c-8267-da08f8dc93e4\\\"}}]}\"\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is a `taskUpdated` payload that was sent when a Custom Field was set on a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800771175285296851\",\n      \"type\": 1,\n      \"date\": \"1642735110657\",\n      \"field\": \"custom_field\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n      \"custom_field\": {\n        \"id\": \"862a38bb-eaba-4b9b-a4b5-c09d2a8c082f\",\n        \"name\": \"Selection Dropdown\",\n        \"type\": \"drop_down\",\n        \"type_config\": {\n          \"default\": 0,\n          \"placeholder\": null,\n          \"new_drop_down\": true,\n          \"options\": [\n            {\n              \"id\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n              \"name\": \"Monthly\",\n              \"value\": \"Monthly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 0\n            },\n            {\n              \"id\": \"5c69d237-f440-4498-ae46-3b3948db931b\",\n              \"name\": \"Quarterly\",\n              \"value\": \"Quarterly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 1\n            },\n            {\n              \"id\": \"fc4b63d1-d4d5-45fc-bee5-3adef2b15dff\",\n              \"name\": \"Yearly\",\n              \"value\": \"Yearly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 2\n            },\n            {\n              \"id\": \"8c7a4048-53fd-455a-82ba-ecf2a8a4c74d\",\n              \"name\": \"here's a really long long long drop down option with a long line of text\",\n              \"value\": \"here's a really long long long drop down option with a long line of text\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 3\n            }\n          ]\n        },\n        \"values_set\": null,\n        \"userid\": \"2770032\",\n        \"date_created\": \"1611729648993\",\n        \"hide_from_guests\": false,\n        \"team_id\": \"6931406\",\n        \"deleted\": false,\n        \"deleted_by\": null,\n        \"pinned\": true,\n        \"required\": false,\n        \"required_on_subtasks\": false,\n        \"linked_subcategory\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDeleted payload\n\nThis webhook is triggered when a task is deleted.\n\n```\n{\n  \"event\": \"taskDeleted\",\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskPriorityUpdated\n\nThis webhook is triggered when a task's Priority is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskPriorityUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Priority was set.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskStatusUpdated\n\nThis webhook is triggered when a task's Status is updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Status was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskAssigneeUpdated payload\n\nThis webhook is triggered when a task's assignee is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskAssigneeUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Assignee was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDueDateUpdated payload\n\nThis webhook is triggered when a task's due date is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskDueDateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's due date was updated.\n\n```\n{\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTagUpdated payload\n\nThis webhook is triggered when task Tags are added or removed. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTagUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload sent when a task's Tags was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskMoved payload\n\nThis webhook is triggered when a task is moved to a new List. We also send the `taskUpdated` and `spaceUpdated` payloads.\n\n```\n{\n  \"event\": \"taskMoved\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentPosted\n\nThis webhook is triggered when a new comment is posted on a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentPosted\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n             \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere's an example `taskUpdated` payload that was sent when a task comment was created:\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 2770032,\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentUpdated payload\n\nThis webhook is triggered when a task comment is edited. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task comment was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeEstimateUpdated payload\n\nThis webhook is triggered when a time estimate is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Time Estimate was set.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeTrackedUpdated\n\nThis webhook is triggered when a time entry is added to a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeTrackedUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a time entry was added to a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listCreated payload\n\nThis webhook is triggered when a new List is created in your Workspace. We also send the `spaceUpdated` for the Space where the new List is created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641234\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new List was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listUpdated payload\n\nThis webhook is triggered when a List is updated. The below example was sent when a List was renamed.\n\n```\n{\n  \"event\": \"listUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"8a2f82db-7718-4fdb-9493-4849e67f009d\",\n      \"type\": 6,\n      \"date\": \"1642740510345\",\n      \"field\": \"name\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": \"webhook payloads 2\",\n      \"after\": \"Webhook payloads round 2\"\n    }\n  ],\n  \"list_id\": \"162641285\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listDeleted payload\n\nThis webhook is triggered when a List is deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641062\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderCreated payload\n\nThis webhook is triggered when a new Folder is created. We also send the `spaceUpdated` payload.\n\n```\n{\n  \"event\": \"folderCreated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new Folder was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderUpdated payload\n\nThis webhook is triggered when a Folder is updated. This example was sent when a Folder was renamed.\n\n```\n{\n  \"event\": \"folderUpdated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderDeleted payload\n\nThis webhook is triggered when a Folder is deleted. We also send the `spaceUpdated` and `listDeleted` payloads.\n\n```\n{\n  \"event\": \"folderDeleted\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listDeleted` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641543\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceCreated payload\n\nThis webhook is triggered when a new Space is created. We also send the `listCreated` and `spaceUpdated` payloads as a List is automatically created in the new Space.\n\n```\n{\n  \"event\": \"spaceCreated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listCreated` payload that was sent when a new Space was created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when in a new Space was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceUpdated payload\n\nThis webhook is triggered when a Space is updated. This example was sent when a Space was renamed.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceDeleted payload\n\nThis webhook is triggered when a Space is deleted. We also send `listDeleted` payloads for any Lists deleted with the Space.\n\n```\n{\n  \"event\": \"spaceDeleted\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `listDeleted` payload that was sent when a Space was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### goalCreated payload\n\nThis webhook is triggered when a Goal is created.\n\n```\n{\n  \"event\": \"goalCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalUpdated payload\n\nThis webhook is triggered when a Goal is updated.\n\n```\n{\n  \"event\": \"goalUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalDeleted payload\n\nThis webhook is triggered when a Goal is deleted.\n\n```\n{\n  \"event\": \"goalDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultCreated payload\n\nThis webhook is triggered when a Target of a Goal is created.\n\n```\n{\n  \"event\": \"keyResultCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultUpdated payload\n\nThis webhook is triggered when a Target of a Goal is updated.\n\n```\n{\n  \"event\": \"keyResultUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultDeleted payload\n\nThis webhook is triggered when a Target of a Goal is deleted.\n\n```\n{\n  \"event\": \"keyResultDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n### Endpoint\n\nWhen an event occurs that your webhoook is subscribed to, we will send details about that change to the endpoint that you provided when you create the webhook. If no protocol is provided on the endpoint, the default will be https. In the future, non-ssl may not be supported so it is highly recommended to use the secure protocol when possible.\n\nRequests to your endpoints will always adhere to the following criteria:\n\n- Always sent with the method `POST`\n\n- The `Content-Type` will always be `application/json`\n\n- The `webhook_id`, `event`, and resource ID will be passed in the body.\n\n- If a history item exists describing the event, it will be passed in a `history_items` array.\n\nAn example request:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskUpdated\",\n    \"task_id\":\"c0j\",\n    \"history_items\": [\n        {\n            \"id\":\"33169\",\n            \"type\":1,\n            \"date\":\"1575650190085\",\n            \"field\":\"status\",\n            \"parent_id\":\"1753\",\n            \"data\":{\n                \"status_type\":\"closed\"\n            },\n            \"source\":null,\n            \"user\":{\n                \"id\":183,\n                \"username\":\"John Doe\",\n                \"email\":\"example@email.com\",\n                \"color\":\"#827718\",\n                \"initials\":\"JK\",\n                \"profilePicture\":\"https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg\"\n            },\n            \"before\":{\n                \"status\":\"open\",\n                \"color\":\"#d3d3d3\",\n                \"orderindex\":0,\n                \"type\":\"open\"\n            },\n            \"after\":{\n                \"status\":\"complete\",\n                \"color\":\"#6bc950\",\n                \"orderindex\":1,\n                \"type\":\"closed\"\n            }\n        }\n    ]\n}\n```\n\n### Webhook Health Status\n\nTo ensure the efficient use of our resources here at ClickUp, the health of the webhooks that you create will be monitored. As long as the endpoints that you provide us send a successful HTTP status code in a timely manner, your webhook will stay active and healthy. If an endpoint becomes degraded, we will set your webhook to the appropriate health status described below.\n\n#### `active`\n\nIf your webhook is sending us healthy http status codes, we will keep sending your subscribed changes to the endpoint.\n\n#### `failing`\n\nIf an unsuccessful http status code is received or if a request takes longer that 15 seconds to complete, we will consider the webhook as failing. We understand though that flukes can happen, so we will retry your webhook five times for each event. If on the fifth retry the endpoint is still failing, we will increment a `fail_count` which you can see in the webhook `health` object. This count will be incremented for each event that we fail to send you.\n\nIf at any time while your webhook is marked as `failing` the issues with your endpoint are resolved and success status codes are received, we will automatically mark your webhook back to the `active` status and clear the `fail_count`.\n\n#### `suspended`\n\nIf your webhook is set as `failing` and the fail count reaches 100, we will mark the webhook as suspended. We will no longer attempt to send events to this webhook. The only way reactivate this webhook is to fix the endpoint and set the status back to `active` using the `PUT /api/v2/webhook/{webhook_id}` request.\n\n### `401 Gone`\n\nSometimes the webhooks that you create are no longer necessary to keep active. As a convenience to you, we will immediately mark webhooks as suspended if a `401` http status code is received.\n\n### Signature\n\nAll requests sent to your webhook endpoints will be signed so that you can verify that traffic coming to your servers is coming from ClickUp. To sign our requests, we use a hash-based message authentication code, or [HMAC](https://en.wikipedia.org/wiki/HMAC).\n\nEach webhook that is created will be provided with a `secret` which can be found on any of the CRUD webhook endpoints. When a request is sent to your webhook endpoint a signature will be created by hashing the body of the request that is being sent with the shared secret. This signature is sent in the `X-Signature` http header so that the client can verify it was made with the same secret that it has access to.\n\nAn example event request sent to a webhook endpoint:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\nX-Signature: f7bc83f430538424b13298e6aa6\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskCreated\",\n    \"task_id\":\"c0j\"\n}\n```\n\nThe `X-Signature` value for this request was created by creating a `SHA-256` hash of the above request body using the provided `secret` as a key. In order for the client to verify the signature, it can create a hash signature using the same algorithm and see if the value matches. Below is an example using Node.js. You can find examples using other languages [here](https://github.com/danharper/hmac-examples).\n\n```\nconst crypto = require('crypto');\n\nconst key = 'secret'; // from the webhook object\nconst body = '{\"webhook_id\":\"7689a169-a000-4985-8676-6902b96d6627\",\"event\":\"taskCreated\",\"task_id\":\"c0j\"}';\n\nconst hash = crypto.createHmac('sha256', key).update(body);\n\nconst signature = hash.digest('hex');\n```\n\n***Note:** The body in this example already exists as a string. If you are using an http client that automatically parses request bodies, you must stringify the object with no white spaces inserted*\n\n***Note:** Signatures will always be digested using hexadecimal*\n\n***Note:** Only webhooks that were created by the authenticated user will be returned on the fetch webhook endpoints.*",
        "operationId": "UpdateWebhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "e506-4a29-9d42-26e504e3435e (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "4b67ac88"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "requestBody": {
          "description": "To subscribe to specific events, pass an array of `events` that you want to subscribe to, otherwise pass `\"*\"` to subscribe to everything.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebhookrequest"
              },
              "example": {
                "endpoint": "https://yourdomain.com/webhook",
                "events": "*",
                "status": "active"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWebhookresponse"
                },
                "example": {
                  "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
                  "webhook": {
                    "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
                    "userid": 183,
                    "team_id": 108,
                    "endpoint": "https://yourdomain.com/webhook",
                    "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
                    "events": [
                      "taskCreated",
                      "taskUpdated",
                      "taskDeleted",
                      "taskPriorityUpdated",
                      "taskStatusUpdated",
                      "taskAssigneeUpdated",
                      "taskDueDateUpdated",
                      "taskTagUpdated",
                      "taskMoved",
                      "taskCommentPosted",
                      "taskCommentUpdated",
                      "taskTimeEstimateUpdated",
                      "taskTimeTrackedUpdated",
                      "listCreated",
                      "listUpdated",
                      "listDeleted",
                      "folderCreated",
                      "folderUpdated",
                      "folderDeleted",
                      "spaceCreated",
                      "spaceUpdated",
                      "spaceDeleted",
                      "goalCreated",
                      "goalUpdated",
                      "goalDeleted",
                      "keyResultCreated",
                      "keyResultUpdated",
                      "keyResultDeleted"
                    ],
                    "task_id": null,
                    "list_id": null,
                    "folder_id": null,
                    "space_id": null,
                    "health": {
                      "status": "active",
                      "fail_count": 0
                    },
                    "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "summary": "Delete Webhook",
        "description": "The ClickUp API 2.0 now supports webhooks to notify you when changes are made to your resources. If you have not used webhooks before, our friends from Zapier have put together a great [post](https://zapier.com/blog/what-are-webhooks/) that describes them in detail.\n\n### Events\n\nBelow are a list of events that you can subscribe to in order to listen to specific changes to your resources. You can also pass the wildcard `*` to listen to all events that are available.\n\n- taskCreated\n\n- taskUpdated\n\n- taskDeleted\n\n- taskPriorityUpdated\n\n- taskStatusUpdated\n\n- taskAssigneeUpdated\n\n- taskDueDateUpdated\n\n- taskTagUpdated\n\n- taskMoved\n\n- taskCommentPosted\n\n- taskCommentUpdated\n\n- taskTimeEstimateUpdated\n\n- taskTimeTrackedUpdated\n\n- listCreated\n\n- listUpdated\n\n- listDeleted\n\n- folderCreated\n\n- folderUpdated\n\n- folderDeleted\n\n- spaceCreated\n\n- spaceUpdated\n\n- spaceDeleted\n\n- goalCreated\n\n- goalUpdated\n\n- goalDeleted\n\n- keyResultCreated\n\n- keyResultUpdated\n\n- keyResultDeleted\n\n### Webhook payloads\n\nThese example payloads are sent when webhook events are triggered by activity in your Workspace.\n\n#### taskCreated payload\n\nThis webhook is triggered when a new task is created. We also send the `taskStatusUpdated` payload when a new task is created.\n\n```\n{\n  \"event\": \"taskCreated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    },\n    {\n      \"id\": \"2800763136700363640\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"task_creation\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": null\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskStatusUpdated` payload that was sent when a new task was created:\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800763136717140857\",\n      \"type\": 1,\n      \"date\": \"1642734631523\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"open\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": null,\n        \"color\": \"#000000\",\n        \"type\": \"removed\",\n        \"orderindex\": -1\n      },\n      \"after\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskUpdated payload\n\nThis webhook is triggered when a task is updated. This example payload was sent when a task description was added to the task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800768061568222238\",\n      \"type\": 1,\n      \"date\": \"1642734925064\",\n      \"field\": \"content\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"{\\\"ops\\\":[{\\\"insert\\\":\\\"This is a task description update to trigger the \\\"},{\\\"insert\\\":\\\"\\\\n\\\",\\\"attributes\\\":{\\\"block-id\\\":\\\"block-24d0457c-908f-412c-8267-da08f8dc93e4\\\"}}]}\"\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is a `taskUpdated` payload that was sent when a Custom Field was set on a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800771175285296851\",\n      \"type\": 1,\n      \"date\": \"1642735110657\",\n      \"field\": \"custom_field\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n      \"custom_field\": {\n        \"id\": \"862a38bb-eaba-4b9b-a4b5-c09d2a8c082f\",\n        \"name\": \"Selection Dropdown\",\n        \"type\": \"drop_down\",\n        \"type_config\": {\n          \"default\": 0,\n          \"placeholder\": null,\n          \"new_drop_down\": true,\n          \"options\": [\n            {\n              \"id\": \"5048f827-f16a-47b0-afec-5fd0e51b5f50\",\n              \"name\": \"Monthly\",\n              \"value\": \"Monthly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 0\n            },\n            {\n              \"id\": \"5c69d237-f440-4498-ae46-3b3948db931b\",\n              \"name\": \"Quarterly\",\n              \"value\": \"Quarterly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 1\n            },\n            {\n              \"id\": \"fc4b63d1-d4d5-45fc-bee5-3adef2b15dff\",\n              \"name\": \"Yearly\",\n              \"value\": \"Yearly\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 2\n            },\n            {\n              \"id\": \"8c7a4048-53fd-455a-82ba-ecf2a8a4c74d\",\n              \"name\": \"here's a really long long long drop down option with a long line of text\",\n              \"value\": \"here's a really long long long drop down option with a long line of text\",\n              \"type\": \"text\",\n              \"color\": null,\n              \"orderindex\": 3\n            }\n          ]\n        },\n        \"values_set\": null,\n        \"userid\": \"2770032\",\n        \"date_created\": \"1611729648993\",\n        \"hide_from_guests\": false,\n        \"team_id\": \"6931406\",\n        \"deleted\": false,\n        \"deleted_by\": null,\n        \"pinned\": true,\n        \"required\": false,\n        \"required_on_subtasks\": false,\n        \"linked_subcategory\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDeleted payload\n\nThis webhook is triggered when a task is deleted.\n\n```\n{\n  \"event\": \"taskDeleted\",\n  \"task_id\": \"1vj37mc\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskPriorityUpdated\n\nThis webhook is triggered when a task's Priority is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskPriorityUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Priority was set.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800773800802162647\",\n      \"type\": 1,\n      \"date\": \"1642735267148\",\n      \"field\": \"priority\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2\",\n        \"priority\": \"high\",\n        \"color\": \"#ffcc00\",\n        \"orderindex\": \"2\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskStatusUpdated\n\nThis webhook is triggered when a task's Status is updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskStatusUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Status was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800787326392370170\",\n      \"type\": 1,\n      \"date\": \"1642736073330\",\n      \"field\": \"status\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"status_type\": \"custom\"\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"status\": \"to do\",\n        \"color\": \"#f9d900\",\n        \"orderindex\": 0,\n        \"type\": \"open\"\n      },\n      \"after\": {\n        \"status\": \"in progress\",\n        \"color\": \"#7C4DFF\",\n        \"orderindex\": 1,\n        \"type\": \"custom\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskAssigneeUpdated payload\n\nThis webhook is triggered when a task's assignee is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskAssigneeUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Assignee was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800789353868594308\",\n      \"type\": 1,\n      \"date\": \"1642736194135\",\n      \"field\": \"assignee_add\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"after\": {\n        \"id\": 184,\n        \"username\": \"Sam\",\n        \"email\": \"sam@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"S\",\n        \"profilePicture\": null\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskDueDateUpdated payload\n\nThis webhook is triggered when a task's due date is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskDueDateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's due date was updated.\n\n```\n{\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800792714143635886\",\n      \"type\": 1,\n      \"date\": \"1642736394447\",\n      \"field\": \"due_date\",\n      \"parent_id\": \"162641062\",\n      \"data\": {\n        \"due_date_time\": true,\n        \"old_due_date_time\": false\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": \"1642701600000\",\n      \"after\": \"1643608800000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTagUpdated payload\n\nThis webhook is triggered when task Tags are added or removed. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTagUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload sent when a task's Tags was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800797048554170804\",\n      \"type\": 1,\n      \"date\": \"1642736652800\",\n      \"field\": \"tag\",\n      \"parent_id\": \"162641062\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": [\n        {\n          \"name\": \"def\",\n          \"tag_fg\": \"#FF4081\",\n          \"tag_bg\": \"#FF4081\",\n          \"creator\": 2770032\n        }\n      ]\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskMoved payload\n\nThis webhook is triggered when a task is moved to a new List. We also send the `taskUpdated` and `spaceUpdated` payloads.\n\n```\n{\n  \"event\": \"taskMoved\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800800851630274181\",\n      \"type\": 1,\n      \"date\": \"1642736879339\",\n      \"field\": \"section_moved\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"mute_notifications\": true\n      },\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": {\n        \"id\": \"162641062\",\n        \"name\": \"Webhook payloads\",\n        \"category\": {\n          \"id\": \"96771950\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      },\n      \"after\": {\n        \"id\": \"162641285\",\n        \"name\": \"webhook payloads 2\",\n        \"category\": {\n          \"id\": \"96772049\",\n          \"name\": \"hidden\",\n          \"hidden\": true\n        },\n        \"project\": {\n          \"id\": \"7002367\",\n          \"name\": \"This is my API Space\"\n        }\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a task was moved to a new List.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentPosted\n\nThis webhook is triggered when a new comment is posted on a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentPosted\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 183,\n        \"username\": \"John\",\n        \"email\": \"john@company.com\",\n        \"color\": \"#7b68ee\",\n        \"initials\": \"J\",\n        \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n             \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere's an example `taskUpdated` payload that was sent when a task comment was created:\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n        \"id\": 2770032,\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskCommentUpdated payload\n\nThis webhook is triggered when a task comment is edited. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskCommentUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task comment was updated.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800803631413624919\",\n      \"type\": 1,\n      \"date\": \"1642737045116\",\n      \"field\": \"comment\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"648893191\",\n      \"comment\": {\n        \"id\": \"648893191\",\n        \"date\": \"1642737045116\",\n        \"parent\": \"1vj38vv\",\n        \"type\": 1,\n        \"comment\": [\n          {\n            \"text\": \"comment abc1234 56789\",\n            \"attributes\": {}\n          },\n          {\n            \"text\": \"\\n\",\n            \"attributes\": {\n              \"block-id\": \"block-4c8fe54f-7bff-4b7b-92a2-9142068983ea\"\n            }\n          }\n        ],\n        \"text_content\": \"comment abc1234 56789\\n\",\n        \"x\": null,\n        \"y\": null,\n        \"image_y\": null,\n        \"image_x\": null,\n        \"page\": null,\n        \"comment_number\": null,\n        \"page_id\": null,\n        \"page_name\": null,\n        \"view_id\": null,\n        \"view_name\": null,\n        \"team\": null,\n        \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n        },\n        \"new_thread_count\": 0,\n        \"new_mentioned_thread_count\": 0,\n        \"email_attachments\": [],\n        \"threaded_users\": [],\n        \"threaded_replies\": 0,\n        \"threaded_assignees\": 0,\n        \"threaded_assignees_members\": [],\n        \"threaded_unresolved_count\": 0,\n        \"thread_followers\": [\n          {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n          }\n        ],\n        \"group_thread_followers\": [],\n        \"reactions\": [],\n        \"emails\": []\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeEstimateUpdated payload\n\nThis webhook is triggered when a time estimate is set or updated. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a task's Time Estimate was set.\n\n```\n{\n  \"event\": \"taskTimeEstimateUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800808904123520175\",\n      \"type\": 1,\n      \"date\": \"1642737359443\",\n      \"field\": \"time_estimate\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"time_estimate_string\": \"1 hour 30 minutes\",\n        \"old_time_estimate_string\": null,\n        \"rolled_up_time_estimate\": 5400000,\n        \"time_estimate\": 5400000,\n        \"time_estimates_by_user\": [\n          {\n            \"userid\": 2770032,\n            \"user_time_estimate\": \"5400000\",\n            \"user_rollup_time_estimate\": \"5400000\"\n          }\n        ]\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": \"5400000\"\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### taskTimeTrackedUpdated\n\nThis webhook is triggered when a time entry is added to a task. We also send the `taskUpdated` payload.\n\n```\n{\n  \"event\": \"taskTimeTrackedUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `taskUpdated` payload that was sent when a time entry was added to a task.\n\n```\n{\n  \"event\": \"taskUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"2800809188061123931\",\n      \"type\": 1,\n      \"date\": \"1642737376354\",\n      \"field\": \"time_spent\",\n      \"parent_id\": \"162641285\",\n      \"data\": {\n        \"total_time\": \"900000\",\n        \"rollup_time\": \"900000\"\n      },\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": null,\n      \"after\": {\n        \"id\": \"2800809188061119507\",\n        \"start\": \"1642736476215\",\n        \"end\": \"1642737376215\",\n        \"time\": \"900000\",\n        \"source\": \"clickup\",\n        \"date_added\": \"1642737376354\"\n      }\n    }\n  ],\n  \"task_id\": \"1vj38vv\",\n  \"data\": {\n    \"description\": \"Time Tracking Created\",\n    \"interval_id\": \"2800809188061119507\"\n  },\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listCreated payload\n\nThis webhook is triggered when a new List is created in your Workspace. We also send the `spaceUpdated` for the Space where the new List is created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641234\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new List was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listUpdated payload\n\nThis webhook is triggered when a List is updated. The below example was sent when a List was renamed.\n\n```\n{\n  \"event\": \"listUpdated\",\n  \"history_items\": [\n    {\n      \"id\": \"8a2f82db-7718-4fdb-9493-4849e67f009d\",\n      \"type\": 6,\n      \"date\": \"1642740510345\",\n      \"field\": \"name\",\n      \"parent_id\": \"162641285\",\n      \"data\": {},\n      \"source\": null,\n      \"user\": {\n            \"id\": 183,\n            \"username\": \"John\",\n            \"email\": \"john@company.com\",\n            \"color\": \"#7b68ee\",\n            \"initials\": \"J\",\n            \"profilePicture\": null\n      },\n      \"before\": \"webhook payloads 2\",\n      \"after\": \"Webhook payloads round 2\"\n    }\n  ],\n  \"list_id\": \"162641285\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### listDeleted payload\n\nThis webhook is triggered when a List is deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641062\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderCreated payload\n\nThis webhook is triggered when a new Folder is created. We also send the `spaceUpdated` payload.\n\n```\n{\n  \"event\": \"folderCreated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `spaceUpdated` payload that was sent when a new Folder was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderUpdated payload\n\nThis webhook is triggered when a Folder is updated. This example was sent when a Folder was renamed.\n\n```\n{\n  \"event\": \"folderUpdated\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### folderDeleted payload\n\nThis webhook is triggered when a Folder is deleted. We also send the `spaceUpdated` and `listDeleted` payloads.\n\n```\n{\n  \"event\": \"folderDeleted\",\n  \"folder_id\": \"96772212\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"7002367\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listDeleted` payload that was sent when a Folder was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641543\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceCreated payload\n\nThis webhook is triggered when a new Space is created. We also send the `listCreated` and `spaceUpdated` payloads as a List is automatically created in the new Space.\n\n```\n{\n  \"event\": \"spaceCreated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `listCreated` payload that was sent when a new Space was created.\n\n```\n{\n  \"event\": \"listCreated\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nThis is an example `spaceUpdated` payload that was sent when in a new Space was created.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceUpdated payload\n\nThis webhook is triggered when a Space is updated. This example was sent when a Space was renamed.\n\n```\n{\n  \"event\": \"spaceUpdated\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### spaceDeleted payload\n\nThis webhook is triggered when a Space is deleted. We also send `listDeleted` payloads for any Lists deleted with the Space.\n\n```\n{\n  \"event\": \"spaceDeleted\",\n  \"space_id\": \"54650507\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\nHere is an example `listDeleted` payload that was sent when a Space was deleted.\n\n```\n{\n  \"event\": \"listDeleted\",\n  \"list_id\": \"162641554\",\n  \"webhook_id\": \"7fa3ec74-69a8-4530-a251-8a13730bd204\"\n}\n```\n\n#### goalCreated payload\n\nThis webhook is triggered when a Goal is created.\n\n```\n{\n  \"event\": \"goalCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalUpdated payload\n\nThis webhook is triggered when a Goal is updated.\n\n```\n{\n  \"event\": \"goalUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### goalDeleted payload\n\nThis webhook is triggered when a Goal is deleted.\n\n```\n{\n  \"event\": \"goalDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultCreated payload\n\nThis webhook is triggered when a Target of a Goal is created.\n\n```\n{\n  \"event\": \"keyResultCreated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultUpdated payload\n\nThis webhook is triggered when a Target of a Goal is updated.\n\n```\n{\n  \"event\": \"keyResultUpdated\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n#### keyResultDeleted payload\n\nThis webhook is triggered when a Target of a Goal is deleted.\n\n```\n{\n  \"event\": \"keyResultDeleted\",\n  \"goal_id\": \"a23e5a3d-74b5-44c2-ab53-917ebe85045a\",\n  \"key_result_id\": \"47608e42-ad0e-4934-a39e-950539c77e79\",\n  \"webhook_id\": \"d5eddb2d-db2b-49e9-87d4-bc6cfbe2313b\"\n}\n```\n\n### Endpoint\n\nWhen an event occurs that your webhoook is subscribed to, we will send details about that change to the endpoint that you provided when you create the webhook. If no protocol is provided on the endpoint, the default will be https. In the future, non-ssl may not be supported so it is highly recommended to use the secure protocol when possible.\n\nRequests to your endpoints will always adhere to the following criteria:\n\n- Always sent with the method `POST`\n\n- The `Content-Type` will always be `application/json`\n\n- The `webhook_id`, `event`, and resource ID will be passed in the body.\n\n- If a history item exists describing the event, it will be passed in a `history_items` array.\n\nAn example request:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskUpdated\",\n    \"task_id\":\"c0j\",\n    \"history_items\": [\n        {\n            \"id\":\"33169\",\n            \"type\":1,\n            \"date\":\"1575650190085\",\n            \"field\":\"status\",\n            \"parent_id\":\"1753\",\n            \"data\":{\n                \"status_type\":\"closed\"\n            },\n            \"source\":null,\n            \"user\":{\n                \"id\":183,\n                \"username\":\"John Doe\",\n                \"email\":\"example@email.com\",\n                \"color\":\"#827718\",\n                \"initials\":\"JK\",\n                \"profilePicture\":\"https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg\"\n            },\n            \"before\":{\n                \"status\":\"open\",\n                \"color\":\"#d3d3d3\",\n                \"orderindex\":0,\n                \"type\":\"open\"\n            },\n            \"after\":{\n                \"status\":\"complete\",\n                \"color\":\"#6bc950\",\n                \"orderindex\":1,\n                \"type\":\"closed\"\n            }\n        }\n    ]\n}\n```\n\n### Webhook Health Status\n\nTo ensure the efficient use of our resources here at ClickUp, the health of the webhooks that you create will be monitored. As long as the endpoints that you provide us send a successful HTTP status code in a timely manner, your webhook will stay active and healthy. If an endpoint becomes degraded, we will set your webhook to the appropriate health status described below.\n\n#### `active`\n\nIf your webhook is sending us healthy http status codes, we will keep sending your subscribed changes to the endpoint.\n\n#### `failing`\n\nIf an unsuccessful http status code is received or if a request takes longer that 15 seconds to complete, we will consider the webhook as failing. We understand though that flukes can happen, so we will retry your webhook five times for each event. If on the fifth retry the endpoint is still failing, we will increment a `fail_count` which you can see in the webhook `health` object. This count will be incremented for each event that we fail to send you.\n\nIf at any time while your webhook is marked as `failing` the issues with your endpoint are resolved and success status codes are received, we will automatically mark your webhook back to the `active` status and clear the `fail_count`.\n\n#### `suspended`\n\nIf your webhook is set as `failing` and the fail count reaches 100, we will mark the webhook as suspended. We will no longer attempt to send events to this webhook. The only way reactivate this webhook is to fix the endpoint and set the status back to `active` using the `PUT /api/v2/webhook/{webhook_id}` request.\n\n### `401 Gone`\n\nSometimes the webhooks that you create are no longer necessary to keep active. As a convenience to you, we will immediately mark webhooks as suspended if a `401` http status code is received.\n\n### Signature\n\nAll requests sent to your webhook endpoints will be signed so that you can verify that traffic coming to your servers is coming from ClickUp. To sign our requests, we use a hash-based message authentication code, or [HMAC](https://en.wikipedia.org/wiki/HMAC).\n\nEach webhook that is created will be provided with a `secret` which can be found on any of the CRUD webhook endpoints. When a request is sent to your webhook endpoint a signature will be created by hashing the body of the request that is being sent with the shared secret. This signature is sent in the `X-Signature` http header so that the client can verify it was made with the same secret that it has access to.\n\nAn example event request sent to a webhook endpoint:\n\n```\nPOST https://yourdomain.com/webhook\nContent-Type: application/json\nX-Signature: f7bc83f430538424b13298e6aa6\n\n{\n    \"webhook_id\": \"7689a169-a000-4985-8676-6902b96d6627\",\n    \"event\": \"taskCreated\",\n    \"task_id\":\"c0j\"\n}\n```\n\nThe `X-Signature` value for this request was created by creating a `SHA-256` hash of the above request body using the provided `secret` as a key. In order for the client to verify the signature, it can create a hash signature using the same algorithm and see if the value matches. Below is an example using Node.js. You can find examples using other languages [here](https://github.com/danharper/hmac-examples).\n\n```\nconst crypto = require('crypto');\n\nconst key = 'secret'; // from the webhook object\nconst body = '{\"webhook_id\":\"7689a169-a000-4985-8676-6902b96d6627\",\"event\":\"taskCreated\",\"task_id\":\"c0j\"}';\n\nconst hash = crypto.createHmac('sha256', key).update(body);\n\nconst signature = hash.digest('hex');\n```\n\n***Note:** The body in this example already exists as a string. If you are using an http client that automatically parses request bodies, you must stringify the object with no white spaces inserted*\n\n***Note:** Signatures will always be digested using hexadecimal*\n\n***Note:** Only webhooks that were created by the authenticated user will be returned on the fetch webhook endpoints.*",
        "operationId": "DeleteWebhook",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "e506-4a29-9d42-26e504e3435e (uuid)",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "example": "4b67ac88"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "enum": [
                "\"access_token\""
              ],
              "type": "string",
              "example": "\"access_token\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {}
                },
                "example": {}
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "CreateTaskAttachmentresponse": {
        "title": "CreateTaskAttachmentresponse",
        "required": [
          "id",
          "version",
          "date",
          "title",
          "extension",
          "thumbnail_small",
          "thumbnail_large",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "thumbnail_small": {
            "type": "string"
          },
          "thumbnail_large": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "ac434d4e-8b1c-4571-951b-866b6d9f2ee6.png",
          "version": "0",
          "date": 1569988578766,
          "title": "image.png",
          "extension": "png",
          "thumbnail_small": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png",
          "thumbnail_large": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png",
          "url": "https://attachments-public.clickup.com/ac434d4e-8b1c-4571-951b-866b6d9f2ee6/logo_small.png"
        }
      },
      "GetAccessTokenresponse": {
        "title": "GetAccessTokenresponse",
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        },
        "example": {
          "access_token": "access token"
        }
      },
      "GetAuthorizedUserresponse": {
        "title": "GetAuthorizedUserresponse",
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "example": {
          "user": {
            "id": 123,
            "username": "John Doe",
            "color": "#000000",
            "profilePicture": "https://clickup.com/avatar.jpg"
          }
        }
      },
      "User": {
        "title": "User",
        "required": [
          "id",
          "username",
          "color",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 123,
          "username": "John Doe",
          "color": "#000000",
          "profilePicture": "https://clickup.com/avatar.jpg"
        }
      },
      "GetAuthorizedTeamsresponse": {
        "title": "GetAuthorizedTeamsresponse",
        "required": [
          "teams"
        ],
        "type": "object",
        "properties": {
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Team"
            },
            "description": ""
          }
        },
        "example": {
          "teams": [
            {
              "id": "1234",
              "name": "My ClickUp Workspace",
              "color": "#000000",
              "avatar": "https://clickup.com/avatar.jpg",
              "members": [
                {
                  "user": {
                    "id": 123,
                    "username": "John Doe",
                    "color": "#000000",
                    "profilePicture": "https://clickup.com/avatar.jpg"
                  }
                }
              ]
            }
          ]
        }
      },
      "Team": {
        "title": "Team",
        "required": [
          "id",
          "name",
          "color",
          "avatar",
          "members"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member"
            },
            "description": ""
          }
        },
        "example": {
          "id": "1234",
          "name": "My ClickUp Workspace",
          "color": "#000000",
          "avatar": "https://clickup.com/avatar.jpg",
          "members": [
            {
              "user": {
                "id": 123,
                "username": "John Doe",
                "color": "#000000",
                "profilePicture": "https://clickup.com/avatar.jpg"
              }
            }
          ]
        }
      },
      "Member": {
        "title": "Member",
        "required": [
          "user"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "example": {
          "user": {
            "id": 123,
            "username": "John Doe",
            "color": "#000000",
            "profilePicture": "https://clickup.com/avatar.jpg"
          }
        }
      },
      "CreateChecklistrequest": {
        "title": "CreateChecklistrequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "Checklist"
        }
      },
      "CreateChecklistresponse": {
        "title": "CreateChecklistresponse",
        "required": [
          "checklist"
        ],
        "type": "object",
        "properties": {
          "checklist": {
            "$ref": "#/components/schemas/Checklist"
          }
        },
        "example": {
          "checklist": {
            "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
            "task_id": "9hz",
            "name": "Checklist",
            "orderindex": 0,
            "resolved": 0,
            "unresolved": 0,
            "items": []
          }
        }
      },
      "Checklist": {
        "title": "Checklist",
        "required": [
          "id",
          "task_id",
          "name",
          "orderindex",
          "resolved",
          "unresolved",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "integer",
            "format": "int32"
          },
          "unresolved": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
          "task_id": "9hz",
          "name": "Checklist",
          "orderindex": 0,
          "resolved": 0,
          "unresolved": 0,
          "items": []
        }
      },
      "EditChecklistrequest": {
        "title": "EditChecklistrequest",
        "required": [
          "name",
          "position"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "position": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "Updated Checklist",
          "position": 1
        }
      },
      "CreateChecklistItemrequest": {
        "title": "CreateChecklistItemrequest",
        "required": [
          "name",
          "assignee"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "Checklist Item",
          "assignee": 183
        }
      },
      "CreateChecklistItemresponse": {
        "title": "CreateChecklistItemresponse",
        "required": [
          "checklist"
        ],
        "type": "object",
        "properties": {
          "checklist": {
            "$ref": "#/components/schemas/Checklist1"
          }
        },
        "example": {
          "checklist": {
            "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
            "task_id": "9hv",
            "name": "Checklist",
            "date_created": "1567711563204",
            "orderindex": 0,
            "resolved": 0,
            "unresolved": 1,
            "items": [
              {
                "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
                "name": "Checklist Item",
                "orderindex": 0,
                "assignee": {
                  "id": 183,
                  "username": "John Doe",
                  "email": "example@email.com",
                  "color": "#827718",
                  "initials": "JD",
                  "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg"
                },
                "resolved": false,
                "parent": null,
                "date_created": "1567711566859",
                "children": []
              }
            ]
          }
        }
      },
      "Checklist1": {
        "title": "Checklist1",
        "required": [
          "id",
          "task_id",
          "name",
          "date_created",
          "orderindex",
          "resolved",
          "unresolved",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "integer",
            "format": "int32"
          },
          "unresolved": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": ""
          }
        },
        "example": {
          "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
          "task_id": "9hv",
          "name": "Checklist",
          "date_created": "1567711563204",
          "orderindex": 0,
          "resolved": 0,
          "unresolved": 1,
          "items": [
            {
              "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
              "name": "Checklist Item",
              "orderindex": 0,
              "assignee": {
                "id": 183,
                "username": "John Doe",
                "email": "example@email.com",
                "color": "#827718",
                "initials": "JD",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg"
              },
              "resolved": false,
              "parent": null,
              "date_created": "1567711566859",
              "children": []
            }
          ]
        }
      },
      "Item": {
        "title": "Item",
        "required": [
          "id",
          "name",
          "orderindex",
          "assignee",
          "resolved",
          "parent",
          "date_created",
          "children"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "$ref": "#/components/schemas/Assignee"
          },
          "resolved": {
            "type": "boolean"
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
          "name": "Checklist Item",
          "orderindex": 0,
          "assignee": {
            "id": 183,
            "username": "John Doe",
            "email": "example@email.com",
            "color": "#827718",
            "initials": "JD",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg"
          },
          "resolved": false,
          "parent": null,
          "date_created": "1567711566859",
          "children": []
        }
      },
      "Assignee": {
        "title": "Assignee",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "email": "example@email.com",
          "color": "#827718",
          "initials": "JD",
          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg"
        }
      },
      "EditChecklistItemrequest": {
        "title": "EditChecklistItemrequest",
        "required": [
          "name",
          "assignee",
          "resolved",
          "parent"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "resolved": {
            "type": "boolean"
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "name": "Updated Checklist Item",
          "assignee": null,
          "resolved": true,
          "parent": null
        }
      },
      "EditChecklistItemresponse": {
        "title": "EditChecklistItemresponse",
        "required": [
          "checklist"
        ],
        "type": "object",
        "properties": {
          "checklist": {
            "$ref": "#/components/schemas/Checklist2"
          }
        },
        "example": {
          "checklist": {
            "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
            "task_id": "9hv",
            "name": "Checklist",
            "date_created": "1567711563204",
            "orderindex": 0,
            "resolved": 1,
            "unresolved": 0,
            "items": [
              {
                "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
                "name": "Updated Checklist Item",
                "orderindex": 0,
                "assignee": null,
                "resolved": true,
                "parent": null,
                "date_created": "1567711566859",
                "children": []
              }
            ]
          }
        }
      },
      "Checklist2": {
        "title": "Checklist2",
        "required": [
          "id",
          "task_id",
          "name",
          "date_created",
          "orderindex",
          "resolved",
          "unresolved",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "integer",
            "format": "int32"
          },
          "unresolved": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item1"
            },
            "description": ""
          }
        },
        "example": {
          "id": "b955c4dc-b8a8-48d8-a0c6-b4200788a683",
          "task_id": "9hv",
          "name": "Checklist",
          "date_created": "1567711563204",
          "orderindex": 0,
          "resolved": 1,
          "unresolved": 0,
          "items": [
            {
              "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
              "name": "Updated Checklist Item",
              "orderindex": 0,
              "assignee": null,
              "resolved": true,
              "parent": null,
              "date_created": "1567711566859",
              "children": []
            }
          ]
        }
      },
      "Item1": {
        "title": "Item1",
        "required": [
          "id",
          "name",
          "orderindex",
          "assignee",
          "resolved",
          "parent",
          "date_created",
          "children"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "resolved": {
            "type": "boolean"
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "date_created": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "21e08dc8-e491-47f5-9fd8-d1dc4cedcc6f",
          "name": "Updated Checklist Item",
          "orderindex": 0,
          "assignee": null,
          "resolved": true,
          "parent": null,
          "date_created": "1567711566859",
          "children": []
        }
      },
      "CreateTaskCommentrequest": {
        "title": "CreateTaskCommentrequest",
        "required": [
          "comment_text",
          "assignee",
          "notify_all"
        ],
        "type": "object",
        "properties": {
          "comment_text": {
            "type": "string"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "notify_all": {
            "type": "boolean"
          }
        },
        "example": {
          "comment_text": "Task comment content",
          "assignee": 183,
          "notify_all": true
        }
      },
      "CreateTaskCommentresponse": {
        "title": "CreateTaskCommentresponse",
        "required": [
          "id",
          "hist_id",
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "hist_id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "id": "458",
          "hist_id": "26508",
          "date": 1568036964079
        }
      },
      "CreateChatViewCommentrequest": {
        "title": "CreateChatViewCommentrequest",
        "required": [
          "comment_text",
          "notify_all"
        ],
        "type": "object",
        "properties": {
          "comment_text": {
            "type": "string"
          },
          "notify_all": {
            "type": "boolean"
          }
        },
        "example": {
          "comment_text": "View comment content",
          "notify_all": true
        }
      },
      "CreateChatViewCommentresponse": {
        "title": "CreateChatViewCommentresponse",
        "required": [
          "id",
          "hist_id",
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "hist_id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "id": "459",
          "hist_id": "0a45e16e-4e2f-4a9e-99ec-3cf520b87eae",
          "date": 1568037065216
        }
      },
      "CreateListCommentrequest": {
        "title": "CreateListCommentrequest",
        "required": [
          "comment_text",
          "assignee",
          "notify_all"
        ],
        "type": "object",
        "properties": {
          "comment_text": {
            "type": "string"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "notify_all": {
            "type": "boolean"
          }
        },
        "example": {
          "comment_text": "List comment content",
          "assignee": 183,
          "notify_all": true
        }
      },
      "CreateListCommentresponse": {
        "title": "CreateListCommentresponse",
        "required": [
          "id",
          "hist_id",
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "hist_id": {
            "type": "string"
          },
          "date": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "id": "462",
          "hist_id": "5bbea9ad-7cc3-4038-a8bb-a89ac1337c08",
          "date": 1568037341249
        }
      },
      "GetTaskCommentsresponse": {
        "title": "GetTaskCommentsresponse",
        "required": [
          "comments"
        ],
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "description": ""
          }
        },
        "example": {
          "comments": [
            {
              "id": "458",
              "comment": [
                {
                  "text": "Task comment content"
                }
              ],
              "comment_text": "Task comment content",
              "user": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "resolved": false,
              "assignee": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "assigned_by": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "reactions": [],
              "date": "1568036964079"
            }
          ]
        }
      },
      "Comment": {
        "title": "Comment",
        "required": [
          "id",
          "comment",
          "comment_text",
          "user",
          "resolved",
          "assignee",
          "assigned_by",
          "reactions",
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "comment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment1"
            },
            "description": ""
          },
          "comment_text": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "resolved": {
            "type": "boolean"
          },
          "assignee": {
            "$ref": "#/components/schemas/Assignee"
          },
          "assigned_by": {
            "$ref": "#/components/schemas/AssignedBy"
          },
          "reactions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "date": {
            "type": "string"
          }
        },
        "example": {
          "id": "458",
          "comment": [
            {
              "text": "Task comment content"
            }
          ],
          "comment_text": "Task comment content",
          "user": {
            "id": 183,
            "username": "John Doe",
            "initials": "JD",
            "email": "johndoe@gmail.com",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "resolved": false,
          "assignee": {
            "id": 183,
            "username": "John Doe",
            "initials": "JD",
            "email": "johndoe@gmail.com",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "assigned_by": {
            "id": 183,
            "username": "John Doe",
            "initials": "JD",
            "email": "johndoe@gmail.com",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "reactions": [],
          "date": "1568036964079"
        }
      },
      "Comment1": {
        "title": "Comment1",
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "example": {
          "text": "Task comment content"
        }
      },
      "User2": {
        "title": "User2",
        "required": [
          "id",
          "username",
          "initials",
          "email",
          "color",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "initials": "JD",
          "email": "johndoe@gmail.com",
          "color": "#827718",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
        }
      },
      "AssignedBy": {
        "title": "AssignedBy",
        "required": [
          "id",
          "username",
          "initials",
          "email",
          "color",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "initials": "JD",
          "email": "johndoe@gmail.com",
          "color": "#827718",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
        }
      },
      "GetChatViewCommentsresponse": {
        "title": "GetChatViewCommentsresponse",
        "required": [
          "comments"
        ],
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment2"
            },
            "description": ""
          }
        },
        "example": {
          "comments": [
            {
              "id": "459",
              "comment": [
                {
                  "text": "View comment content"
                }
              ],
              "comment_text": "View comment content",
              "user": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "resolved": false,
              "assignee": null,
              "assigned_by": null,
              "reactions": [],
              "date": "1568036964079"
            }
          ]
        }
      },
      "Comment2": {
        "title": "Comment2",
        "required": [
          "id",
          "comment",
          "comment_text",
          "user",
          "resolved",
          "assignee",
          "assigned_by",
          "reactions",
          "date"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "comment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment1"
            },
            "description": ""
          },
          "comment_text": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "resolved": {
            "type": "boolean"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "assigned_by": {
            "type": "string",
            "nullable": true
          },
          "reactions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "date": {
            "type": "string"
          }
        },
        "example": {
          "id": "459",
          "comment": [
            {
              "text": "View comment content"
            }
          ],
          "comment_text": "View comment content",
          "user": {
            "id": 183,
            "username": "John Doe",
            "initials": "JD",
            "email": "johndoe@gmail.com",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "resolved": false,
          "assignee": null,
          "assigned_by": null,
          "reactions": [],
          "date": "1568036964079"
        }
      },
      "GetListCommentsresponse": {
        "title": "GetListCommentsresponse",
        "required": [
          "comments"
        ],
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "description": ""
          }
        },
        "example": {
          "comments": [
            {
              "id": "462",
              "comment": [
                {
                  "text": "List comment content"
                }
              ],
              "comment_text": "List comment content",
              "user": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "resolved": false,
              "assignee": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "assigned_by": {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "reactions": [],
              "date": "1568036964079"
            }
          ]
        }
      },
      "GetAccessibleCustomFieldsresponse": {
        "title": "GetAccessibleCustomFieldsresponse",
        "required": [
          "fields"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            },
            "description": ""
          }
        }
      },
      "Field": {
        "title": "Field",
        "required": [
          "id",
          "name",
          "type",
          "type_config",
          "date_created",
          "hide_from_guests"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "type_config": {
            "$ref": "#/components/schemas/TypeConfig"
          },
          "date_created": {
            "type": "string"
          },
          "hide_from_guests": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "03efda77-c7a0-42d3-8afd-fd546353c2f5",
          "name": "Text Field",
          "type": "text",
          "type_config": {},
          "date_created": "1566400407303",
          "hide_from_guests": false
        }
      },
      "TypeConfig": {
        "title": "TypeConfig",
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Option"
            },
            "description": ""
          },
          "default": {
            "oneOf": [
              {
                "type": "string",
                "nullable": true
              },
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "nullable": true
              }
            ]
          },
          "precision": {
            "type": "integer",
            "format": "int32"
          },
          "currency_type": {
            "type": "string"
          },
          "placeholder": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "integer",
            "format": "int32"
          },
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "code_point": {
            "type": "string"
          },
          "tracking": {
            "$ref": "#/components/schemas/Tracking"
          },
          "complete_on": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {}
      },
      "Option": {
        "title": "Option",
        "required": [
          "id",
          "color"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "fb332c98-d7bc-4ee8-a3bd-b5ffaff98c3c",
          "label": "one",
          "color": null
        }
      },
      "Tracking": {
        "title": "Tracking",
        "required": [
          "subtasks",
          "checklists",
          "assigned_comments"
        ],
        "type": "object",
        "properties": {
          "subtasks": {
            "type": "boolean"
          },
          "checklists": {
            "type": "boolean"
          },
          "assigned_comments": {
            "type": "boolean"
          }
        },
        "example": {
          "subtasks": true,
          "checklists": true,
          "assigned_comments": true
        }
      },
      "SetCustomFieldValuerequest": {
        "title": "SetCustomFieldValuerequest",
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "value": 80
        }
      },
      "AddDependencyrequest": {
        "title": "AddDependencyrequest",
        "required": [
          "depends_on"
        ],
        "type": "object",
        "properties": {
          "depends_on": {
            "type": "string"
          }
        },
        "example": {
          "depends_on": "9hw"
        }
      },
      "AddTaskLinkresponse": {
        "title": "AddTaskLinkresponse",
        "required": [
          "task"
        ],
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task"
          }
        },
        "example": {
          "task": {
            "id": "9hv",
            "name": "Task Name",
            "status": {
              "status": "in progress",
              "color": "#d3d3d3",
              "orderindex": 1,
              "type": "custom"
            },
            "orderindex": "1.00000000000000000000000000000000",
            "date_created": "1567780450202",
            "date_updated": "1567780450202",
            "date_closed": null,
            "creator": {
              "id": 183,
              "username": "John Doe",
              "color": "#827718",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
            },
            "assignees": [],
            "checklists": [],
            "tags": [],
            "parent": null,
            "priority": null,
            "due_date": null,
            "start_date": null,
            "time_estimate": null,
            "time_spent": null,
            "list": {
              "id": "123"
            },
            "folder": {
              "id": "456"
            },
            "space": {
              "id": "789"
            },
            "linked_tasks": [
              {
                "task_id": "9hv",
                "link_id": "9hz",
                "date_created": "1587571108988",
                "userid": "183"
              }
            ],
            "url": "https://app.clickup.com/t/9hx"
          }
        }
      },
      "Task": {
        "title": "Task",
        "required": [
          "id",
          "name",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "time_estimate",
          "time_spent",
          "list",
          "folder",
          "space",
          "linked_tasks",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "time_spent": {
            "type": "string",
            "nullable": true
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "linked_tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedTask"
            },
            "description": ""
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "9hv",
          "name": "Task Name",
          "status": {
            "status": "in progress",
            "color": "#d3d3d3",
            "orderindex": 1,
            "type": "custom"
          },
          "orderindex": "1.00000000000000000000000000000000",
          "date_created": "1567780450202",
          "date_updated": "1567780450202",
          "date_closed": null,
          "creator": {
            "id": 183,
            "username": "John Doe",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "assignees": [],
          "checklists": [],
          "tags": [],
          "parent": null,
          "priority": null,
          "due_date": null,
          "start_date": null,
          "time_estimate": null,
          "time_spent": null,
          "list": {
            "id": "123"
          },
          "folder": {
            "id": "456"
          },
          "space": {
            "id": "789"
          },
          "linked_tasks": [
            {
              "task_id": "9hv",
              "link_id": "9hz",
              "date_created": "1587571108988",
              "userid": "183"
            }
          ],
          "url": "https://app.clickup.com/t/9hx"
        }
      },
      "Status": {
        "title": "Status",
        "required": [
          "status",
          "color",
          "orderindex",
          "type"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "status": "in progress",
          "color": "#d3d3d3",
          "orderindex": 1,
          "type": "custom"
        }
      },
      "Creator": {
        "title": "Creator",
        "required": [
          "id",
          "username",
          "color",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "color": "#827718",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
        }
      },
      "List": {
        "title": "List",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "123"
        }
      },
      "Folder": {
        "title": "Folder",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "456"
        }
      },
      "Space": {
        "title": "Space",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "789"
        }
      },
      "LinkedTask": {
        "title": "LinkedTask",
        "required": [
          "task_id",
          "link_id",
          "date_created",
          "userid"
        ],
        "type": "object",
        "properties": {
          "task_id": {
            "type": "string"
          },
          "link_id": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          }
        },
        "example": {
          "task_id": "9hv",
          "link_id": "9hz",
          "date_created": "1587571108988",
          "userid": "183"
        }
      },
      "DeleteTaskLinkresponse": {
        "title": "DeleteTaskLinkresponse",
        "required": [
          "task"
        ],
        "type": "object",
        "properties": {
          "task": {
            "$ref": "#/components/schemas/Task1"
          }
        },
        "example": {
          "task": {
            "id": "9hv",
            "name": "Task Name",
            "status": {
              "status": "in progress",
              "color": "#d3d3d3",
              "orderindex": 1,
              "type": "custom"
            },
            "orderindex": "1.00000000000000000000000000000000",
            "date_created": "1567780450202",
            "date_updated": "1567780450202",
            "date_closed": null,
            "creator": {
              "id": 183,
              "username": "John Doe",
              "color": "#827718",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
            },
            "assignees": [],
            "checklists": [],
            "tags": [],
            "parent": null,
            "priority": null,
            "due_date": null,
            "start_date": null,
            "time_estimate": null,
            "time_spent": null,
            "list": {
              "id": "123"
            },
            "folder": {
              "id": "456"
            },
            "space": {
              "id": "789"
            },
            "linked_tasks": [],
            "url": "https://app.clickup.com/t/9hx"
          }
        }
      },
      "Task1": {
        "title": "Task1",
        "required": [
          "id",
          "name",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "time_estimate",
          "time_spent",
          "list",
          "folder",
          "space",
          "linked_tasks",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "time_spent": {
            "type": "string",
            "nullable": true
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "linked_tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "9hv",
          "name": "Task Name",
          "status": {
            "status": "in progress",
            "color": "#d3d3d3",
            "orderindex": 1,
            "type": "custom"
          },
          "orderindex": "1.00000000000000000000000000000000",
          "date_created": "1567780450202",
          "date_updated": "1567780450202",
          "date_closed": null,
          "creator": {
            "id": 183,
            "username": "John Doe",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "assignees": [],
          "checklists": [],
          "tags": [],
          "parent": null,
          "priority": null,
          "due_date": null,
          "start_date": null,
          "time_estimate": null,
          "time_spent": null,
          "list": {
            "id": "123"
          },
          "folder": {
            "id": "456"
          },
          "space": {
            "id": "789"
          },
          "linked_tasks": [],
          "url": "https://app.clickup.com/t/9hx"
        }
      },
      "CreateFolderrequest": {
        "title": "CreateFolderrequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New Folder Name"
        }
      },
      "CreateFolderresponse": {
        "title": "CreateFolderresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "override_statuses",
          "hidden",
          "space",
          "task_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "task_count": {
            "type": "string"
          }
        },
        "example": {
          "id": "457",
          "name": "New Folder Name",
          "orderindex": 0,
          "override_statuses": false,
          "hidden": false,
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "task_count": "0"
        }
      },
      "Space2": {
        "title": "Space2",
        "required": [
          "id",
          "name",
          "access"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "access": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "789",
          "name": "Space Name",
          "access": true
        }
      },
      "UpdateFolderrequest": {
        "title": "UpdateFolderrequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "Updated Folder Name"
        }
      },
      "UpdateFolderresponse": {
        "title": "UpdateFolderresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "override_statuses",
          "hidden",
          "space",
          "task_count"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "task_count": {
            "type": "string"
          }
        },
        "example": {
          "id": "457",
          "name": "Updated Folder Name",
          "orderindex": 0,
          "override_statuses": false,
          "hidden": false,
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "task_count": "0"
        }
      },
      "GetFoldersresponse": {
        "title": "GetFoldersresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "override_statuses",
          "hidden",
          "space",
          "task_count",
          "lists"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "task_count": {
            "type": "string"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "457",
          "name": "Updated Folder Name",
          "orderindex": 0,
          "override_statuses": false,
          "hidden": false,
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "task_count": "0",
          "lists": []
        }
      },
      "GetFolderresponse": {
        "title": "GetFolderresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "override_statuses",
          "hidden",
          "space",
          "task_count",
          "lists"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "task_count": {
            "type": "string"
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "457",
          "name": "Updated Folder Name",
          "orderindex": 0,
          "override_statuses": false,
          "hidden": false,
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "task_count": "0",
          "lists": []
        }
      },
      "CreateGoalrequest": {
        "title": "CreateGoalrequest",
        "required": [
          "name",
          "due_date",
          "description",
          "multiple_owners",
          "owners",
          "color"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "due_date": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "multiple_owners": {
            "type": "boolean"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "color": {
            "type": "string"
          }
        },
        "example": {
          "name": "Goal Name",
          "due_date": 1568036964079,
          "description": "Goal Description",
          "multiple_owners": true,
          "owners": [
            183
          ],
          "color": "#32a852"
        }
      },
      "CreateGoalresponse": {
        "title": "CreateGoalresponse",
        "required": [
          "goal"
        ],
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/Goal"
          }
        },
        "example": {
          "goal": {
            "id": "e53a033c-900e-462d-a849-4a216b06d930",
            "name": "Goal Name",
            "team_id": "512",
            "date_created": "1568044355026",
            "start_date": null,
            "due_date": "1568036964079",
            "description": "Goal Description",
            "private": false,
            "archived": false,
            "creator": 183,
            "color": "#32a852",
            "pretty_id": "6",
            "multiple_owners": true,
            "folder_id": null,
            "members": [],
            "owners": [
              {
                "id": 183,
                "username": "John Doe",
                "initials": "JD",
                "email": "johndoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              }
            ],
            "key_results": [],
            "percent_completed": 0,
            "history": [],
            "pretty_url": "https://app.clickup.com/512/goals/6"
          }
        }
      },
      "Goal": {
        "title": "Goal",
        "required": [
          "id",
          "name",
          "team_id",
          "date_created",
          "start_date",
          "due_date",
          "description",
          "private",
          "archived",
          "creator",
          "color",
          "pretty_id",
          "multiple_owners",
          "folder_id",
          "members",
          "owners",
          "key_results",
          "percent_completed",
          "history",
          "pretty_url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "pretty_id": {
            "type": "string"
          },
          "multiple_owners": {
            "type": "boolean"
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            },
            "description": ""
          },
          "key_results": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "percent_completed": {
            "type": "integer",
            "format": "int32"
          },
          "history": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "pretty_url": {
            "type": "string"
          }
        },
        "example": {
          "id": "e53a033c-900e-462d-a849-4a216b06d930",
          "name": "Goal Name",
          "team_id": "512",
          "date_created": "1568044355026",
          "start_date": null,
          "due_date": "1568036964079",
          "description": "Goal Description",
          "private": false,
          "archived": false,
          "creator": 183,
          "color": "#32a852",
          "pretty_id": "6",
          "multiple_owners": true,
          "folder_id": null,
          "members": [],
          "owners": [
            {
              "id": 183,
              "username": "John Doe",
              "initials": "JD",
              "email": "johndoe@gmail.com",
              "color": "#827718",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
            }
          ],
          "key_results": [],
          "percent_completed": 0,
          "history": [],
          "pretty_url": "https://app.clickup.com/512/goals/6"
        }
      },
      "Owner": {
        "title": "Owner",
        "required": [
          "id",
          "username",
          "initials",
          "email",
          "color",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "initials": "JD",
          "email": "johndoe@gmail.com",
          "color": "#827718",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
        }
      },
      "UpdateGoalresponse": {
        "title": "UpdateGoalresponse",
        "required": [
          "goal"
        ],
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/Goal"
          }
        },
        "example": {
          "goal": {
            "id": "e53a033c-900e-462d-a849-4a216b06d930",
            "name": "Updated Goal Name",
            "team_id": "512",
            "date_created": "1568044355026",
            "start_date": null,
            "due_date": "1568036964079",
            "description": "Updated Goal Description",
            "private": false,
            "archived": false,
            "creator": 183,
            "color": "#32a852",
            "pretty_id": "6",
            "multiple_owners": true,
            "folder_id": null,
            "members": [],
            "owners": [
              {
                "id": 182,
                "username": "Jane Doe",
                "initials": "JD",
                "email": "janedoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/182_abc.jpg"
              }
            ],
            "key_results": [],
            "percent_completed": 0,
            "history": [],
            "pretty_url": "https://app.clickup.com/512/goals/6"
          }
        }
      },
      "GetGoalsresponse": {
        "title": "GetGoalsresponse",
        "required": [
          "goals",
          "folders"
        ],
        "type": "object",
        "properties": {
          "goals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Goal2"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder2"
            },
            "description": ""
          }
        },
        "example": {
          "goals": [
            {
              "id": "e53a033c-900e-462d-a849-4a216b06d930",
              "pretty_id": "6",
              "name": "Goal ABC",
              "team_id": "512",
              "creator": 182,
              "owner": null,
              "color": "#32a852",
              "date_created": "1568044355026",
              "start_date": null,
              "due_date": "1568036964079",
              "description": "Updated Goal Description",
              "private": false,
              "archived": false,
              "multiple_owners": true,
              "editor_token": "goal:792c3027-83a2-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485ed15e675",
              "date_updated": "1626130440221",
              "last_update": "1626132992152",
              "folder_id": null,
              "pinned": false,
              "owners": [],
              "key_result_count": 1,
              "members": [
                {
                  "id": 182,
                  "username": "Jane Doe",
                  "email": "janedoe@gmail.com",
                  "color": "#827718",
                  "permission_level": "edit",
                  "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
                  "initials": "JD",
                  "isCreator": true
                }
              ],
              "group_members": [],
              "percent_completed": 0
            }
          ],
          "folders": [
            {
              "id": "05921253-7737-44af-a1aa-36fd11244e6f",
              "name": "Quarterly Goals",
              "team_id": "512",
              "private": true,
              "date_created": "1548802674671",
              "creator": 182,
              "goal_count": 1,
              "members": [
                {
                  "id": 182,
                  "email": "janedoe@gmail.com",
                  "username": "Jane Doe",
                  "color": "#827718",
                  "permission_level": "read",
                  "date_added": 1631599941928,
                  "added_by": 183,
                  "initials": "JD",
                  "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg"
                }
              ],
              "goals": [
                {
                  "id": "e53a033c-900e-462d-a849-4a216b06d930",
                  "pretty_id": "8",
                  "name": "Q1 Goals",
                  "team_id": "512",
                  "creator": 182,
                  "owner": null,
                  "color": "#32a852",
                  "date_created": "1568044355026",
                  "start_date": null,
                  "due_date": "1568036964079",
                  "description": "Goal for Q1",
                  "private": false,
                  "archived": false,
                  "multiple_owners": true,
                  "editor_token": "goal:792c3027-83b5-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485fc22d477",
                  "date_updated": "1626130440221",
                  "last_update": "1626132992152",
                  "folder_id": "05921253-7737-44af-a1aa-36fd11244e6f",
                  "folder_access": true,
                  "pinned": false,
                  "owners": [],
                  "key_result_count": 1,
                  "members": [
                    {
                      "id": 182,
                      "username": "Jane Doe",
                      "email": "janedoe@gmail.com",
                      "color": "#827718",
                      "permission_level": "edit",
                      "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
                      "initials": "JD",
                      "isCreator": true
                    }
                  ],
                  "group_members": [],
                  "percent_completed": 1
                }
              ]
            }
          ]
        }
      },
      "Goal2": {
        "title": "Goal2",
        "required": [
          "id",
          "pretty_id",
          "name",
          "team_id",
          "creator",
          "owner",
          "color",
          "date_created",
          "start_date",
          "due_date",
          "description",
          "private",
          "archived",
          "multiple_owners",
          "editor_token",
          "date_updated",
          "last_update",
          "folder_id",
          "pinned",
          "owners",
          "key_result_count",
          "members",
          "group_members",
          "percent_completed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pretty_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "multiple_owners": {
            "type": "boolean"
          },
          "editor_token": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "last_update": {
            "type": "string"
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "pinned": {
            "type": "boolean"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "key_result_count": {
            "type": "integer",
            "format": "int32"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member1"
            },
            "description": ""
          },
          "group_members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "percent_completed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "e53a033c-900e-462d-a849-4a216b06d930",
          "pretty_id": "6",
          "name": "Goal ABC",
          "team_id": "512",
          "creator": 182,
          "owner": null,
          "color": "#32a852",
          "date_created": "1568044355026",
          "start_date": null,
          "due_date": "1568036964079",
          "description": "Updated Goal Description",
          "private": false,
          "archived": false,
          "multiple_owners": true,
          "editor_token": "goal:792c3027-83a2-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485ed15e675",
          "date_updated": "1626130440221",
          "last_update": "1626132992152",
          "folder_id": null,
          "pinned": false,
          "owners": [],
          "key_result_count": 1,
          "members": [
            {
              "id": 182,
              "username": "Jane Doe",
              "email": "janedoe@gmail.com",
              "color": "#827718",
              "permission_level": "edit",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
              "initials": "JD",
              "isCreator": true
            }
          ],
          "group_members": [],
          "percent_completed": 0
        }
      },
      "Member1": {
        "title": "Member1",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "permission_level",
          "profilePicture",
          "initials",
          "isCreator"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "permission_level": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "isCreator": {
            "type": "boolean"
          }
        },
        "example": {
          "id": 182,
          "username": "Jane Doe",
          "email": "janedoe@gmail.com",
          "color": "#827718",
          "permission_level": "edit",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
          "initials": "JD",
          "isCreator": true
        }
      },
      "Folder2": {
        "title": "Folder2",
        "required": [
          "id",
          "name",
          "team_id",
          "private",
          "date_created",
          "creator",
          "goal_count",
          "members",
          "goals"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "date_created": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "goal_count": {
            "type": "integer",
            "format": "int32"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member2"
            },
            "description": ""
          },
          "goals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Goal3"
            },
            "description": ""
          }
        },
        "example": {
          "id": "05921253-7737-44af-a1aa-36fd11244e6f",
          "name": "Quarterly Goals",
          "team_id": "512",
          "private": true,
          "date_created": "1548802674671",
          "creator": 182,
          "goal_count": 1,
          "members": [
            {
              "id": 182,
              "email": "janedoe@gmail.com",
              "username": "Jane Doe",
              "color": "#827718",
              "permission_level": "read",
              "date_added": 1631599941928,
              "added_by": 183,
              "initials": "JD",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg"
            }
          ],
          "goals": [
            {
              "id": "e53a033c-900e-462d-a849-4a216b06d930",
              "pretty_id": "8",
              "name": "Q1 Goals",
              "team_id": "512",
              "creator": 182,
              "owner": null,
              "color": "#32a852",
              "date_created": "1568044355026",
              "start_date": null,
              "due_date": "1568036964079",
              "description": "Goal for Q1",
              "private": false,
              "archived": false,
              "multiple_owners": true,
              "editor_token": "goal:792c3027-83b5-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485fc22d477",
              "date_updated": "1626130440221",
              "last_update": "1626132992152",
              "folder_id": "05921253-7737-44af-a1aa-36fd11244e6f",
              "folder_access": true,
              "pinned": false,
              "owners": [],
              "key_result_count": 1,
              "members": [
                {
                  "id": 182,
                  "username": "Jane Doe",
                  "email": "janedoe@gmail.com",
                  "color": "#827718",
                  "permission_level": "edit",
                  "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
                  "initials": "JD",
                  "isCreator": true
                }
              ],
              "group_members": [],
              "percent_completed": 1
            }
          ]
        }
      },
      "Member2": {
        "title": "Member2",
        "required": [
          "id",
          "email",
          "username",
          "color",
          "permission_level",
          "date_added",
          "added_by",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "permission_level": {
            "type": "string"
          },
          "date_added": {
            "type": "integer",
            "format": "int64"
          },
          "added_by": {
            "type": "integer",
            "format": "int32"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 182,
          "email": "janedoe@gmail.com",
          "username": "Jane Doe",
          "color": "#827718",
          "permission_level": "read",
          "date_added": 1631599941928,
          "added_by": 183,
          "initials": "JD",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg"
        }
      },
      "Goal3": {
        "title": "Goal3",
        "required": [
          "id",
          "pretty_id",
          "name",
          "team_id",
          "creator",
          "owner",
          "color",
          "date_created",
          "start_date",
          "due_date",
          "description",
          "private",
          "archived",
          "multiple_owners",
          "editor_token",
          "date_updated",
          "last_update",
          "folder_id",
          "folder_access",
          "pinned",
          "owners",
          "key_result_count",
          "members",
          "group_members",
          "percent_completed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pretty_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "owner": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "multiple_owners": {
            "type": "boolean"
          },
          "editor_token": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "last_update": {
            "type": "string"
          },
          "folder_id": {
            "type": "string"
          },
          "folder_access": {
            "type": "boolean"
          },
          "pinned": {
            "type": "boolean"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "key_result_count": {
            "type": "integer",
            "format": "int32"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member1"
            },
            "description": ""
          },
          "group_members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "percent_completed": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "e53a033c-900e-462d-a849-4a216b06d930",
          "pretty_id": "8",
          "name": "Q1 Goals",
          "team_id": "512",
          "creator": 182,
          "owner": null,
          "color": "#32a852",
          "date_created": "1568044355026",
          "start_date": null,
          "due_date": "1568036964079",
          "description": "Goal for Q1",
          "private": false,
          "archived": false,
          "multiple_owners": true,
          "editor_token": "goal:792c3027-83b5-45de-be96-2f623b5f9078:1626303240249:38fd99e8-f989-4125-9a05-19ead0ed83a6:57bdc749-4ca6-4082-a78e-3485fc22d477",
          "date_updated": "1626130440221",
          "last_update": "1626132992152",
          "folder_id": "05921253-7737-44af-a1aa-36fd11244e6f",
          "folder_access": true,
          "pinned": false,
          "owners": [],
          "key_result_count": 1,
          "members": [
            {
              "id": 182,
              "username": "Jane Doe",
              "email": "janedoe@gmail.com",
              "color": "#827718",
              "permission_level": "edit",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/profile.jpg",
              "initials": "JD",
              "isCreator": true
            }
          ],
          "group_members": [],
          "percent_completed": 1
        }
      },
      "GetGoalresponse": {
        "title": "GetGoalresponse",
        "required": [
          "goal"
        ],
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/Goal"
          }
        },
        "example": {
          "goal": {
            "id": "e53a033c-900e-462d-a849-4a216b06d930",
            "name": "Updated Goal Name",
            "team_id": "512",
            "date_created": "1568044355026",
            "start_date": null,
            "due_date": "1568036964079",
            "description": "Updated Goal Description",
            "private": false,
            "archived": false,
            "creator": 183,
            "color": "#32a852",
            "pretty_id": "6",
            "multiple_owners": true,
            "folder_id": null,
            "members": [],
            "owners": [
              {
                "id": 182,
                "username": "Jane Doe",
                "initials": "JD",
                "email": "janedoe@gmail.com",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/182_abc.jpg"
              }
            ],
            "key_results": [],
            "percent_completed": 0,
            "history": [],
            "pretty_url": "https://app.clickup.com/512/goals/6"
          }
        }
      },
      "CreateKeyResultrequest": {
        "title": "CreateKeyResultrequest",
        "required": [
          "name",
          "owners",
          "type",
          "steps_start",
          "steps_end",
          "unit",
          "task_ids",
          "list_ids"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "owners": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "type": {
            "type": "string"
          },
          "steps_start": {
            "type": "integer",
            "format": "int32"
          },
          "steps_end": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "list_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "name": "New Key Result Name",
          "owners": [
            183
          ],
          "type": "number",
          "steps_start": 0,
          "steps_end": 10,
          "unit": "km",
          "task_ids": [],
          "list_ids": []
        }
      },
      "CreateKeyResultresponse": {
        "title": "CreateKeyResultresponse",
        "required": [
          "key_result"
        ],
        "type": "object",
        "properties": {
          "key_result": {
            "$ref": "#/components/schemas/KeyResult"
          }
        },
        "example": {
          "key_result": {
            "id": "947d46ed-8480-49bc-8c57-e569747efe93",
            "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
            "name": "New Key Result Name",
            "type": "number",
            "unit": "km",
            "creator": 183,
            "date_created": "1568062902048",
            "goal_pretty_id": "6",
            "percent_completed": null,
            "completed": false,
            "task_ids": [],
            "subcategory_ids": [],
            "owners": [
              {
                "id": 183,
                "username": "John Doe",
                "email": "example@email.com",
                "color": "#827718",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
                "initials": "JK"
              }
            ],
            "last_action": {
              "id": "d3183d0f-5cbd-4158-b015-71465f1df269",
              "key_result_id": "947d46ed-8480-49bc-8c57-e569747efe93",
              "userid": 183,
              "date_modified": "1568062902048",
              "steps_taken": null,
              "note": "Created Key Result",
              "steps_before": null,
              "steps_current": null
            }
          }
        }
      },
      "KeyResult": {
        "title": "KeyResult",
        "required": [
          "id",
          "goal_id",
          "name",
          "type",
          "unit",
          "creator",
          "date_created",
          "goal_pretty_id",
          "percent_completed",
          "completed",
          "task_ids",
          "subcategory_ids",
          "owners",
          "last_action"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goal_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "date_created": {
            "type": "string"
          },
          "goal_pretty_id": {
            "type": "string"
          },
          "percent_completed": {
            "type": "string",
            "nullable": true
          },
          "completed": {
            "type": "boolean"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "subcategory_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            },
            "description": ""
          },
          "last_action": {
            "$ref": "#/components/schemas/LastAction"
          }
        },
        "example": {
          "id": "947d46ed-8480-49bc-8c57-e569747efe93",
          "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
          "name": "New Key Result Name",
          "type": "number",
          "unit": "km",
          "creator": 183,
          "date_created": "1568062902048",
          "goal_pretty_id": "6",
          "percent_completed": null,
          "completed": false,
          "task_ids": [],
          "subcategory_ids": [],
          "owners": [
            {
              "id": 183,
              "username": "John Doe",
              "email": "example@email.com",
              "color": "#827718",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
              "initials": "JK"
            }
          ],
          "last_action": {
            "id": "d3183d0f-5cbd-4158-b015-71465f1df269",
            "key_result_id": "947d46ed-8480-49bc-8c57-e569747efe93",
            "userid": 183,
            "date_modified": "1568062902048",
            "steps_taken": null,
            "note": "Created Key Result",
            "steps_before": null,
            "steps_current": null
          }
        }
      },
      "LastAction": {
        "title": "LastAction",
        "required": [
          "id",
          "key_result_id",
          "userid",
          "date_modified",
          "steps_taken",
          "note",
          "steps_before",
          "steps_current"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key_result_id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "date_modified": {
            "type": "string"
          },
          "steps_taken": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string"
          },
          "steps_before": {
            "type": "string",
            "nullable": true
          },
          "steps_current": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "d3183d0f-5cbd-4158-b015-71465f1df269",
          "key_result_id": "947d46ed-8480-49bc-8c57-e569747efe93",
          "userid": 183,
          "date_modified": "1568062902048",
          "steps_taken": null,
          "note": "Created Key Result",
          "steps_before": null,
          "steps_current": null
        }
      },
      "EditKeyResultrequest": {
        "title": "EditKeyResultrequest",
        "required": [
          "steps_current",
          "note"
        ],
        "type": "object",
        "properties": {
          "steps_current": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string"
          }
        },
        "example": {
          "steps_current": 5,
          "note": "Target achieved"
        }
      },
      "EditKeyResultresponse": {
        "title": "EditKeyResultresponse",
        "required": [
          "key_result"
        ],
        "type": "object",
        "properties": {
          "key_result": {
            "$ref": "#/components/schemas/KeyResult1"
          }
        },
        "example": {
          "key_result": {
            "id": "947d46ed-8480-49bc-8c57-e569747efe93",
            "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
            "name": "New Key Result Name",
            "type": "number",
            "unit": "km",
            "creator": 183,
            "date_created": "1568062902048",
            "goal_pretty_id": "6",
            "percent_completed": null,
            "completed": false,
            "task_ids": [],
            "subcategory_ids": [],
            "owners": [
              {
                "id": 183,
                "username": "John Doe",
                "email": "example@email.com",
                "color": "#827718",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
                "initials": "JK"
              }
            ],
            "last_action": {
              "id": "e889858b-a023-46cc-968a-cac32fd04c1e",
              "key_result_id": "19c7a55e-537e-4bc9-b741-08df05a5bda8",
              "userid": 183,
              "date_modified": "1568122776851",
              "steps_taken": null,
              "note": "Target achieved",
              "steps_before": null,
              "steps_current": null,
              "steps_before_float": 0,
              "steps_taken_float": 5,
              "steps_current_float": null
            }
          }
        }
      },
      "KeyResult1": {
        "title": "KeyResult1",
        "required": [
          "id",
          "goal_id",
          "name",
          "type",
          "unit",
          "creator",
          "date_created",
          "goal_pretty_id",
          "percent_completed",
          "completed",
          "task_ids",
          "subcategory_ids",
          "owners",
          "last_action"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goal_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "date_created": {
            "type": "string"
          },
          "goal_pretty_id": {
            "type": "string"
          },
          "percent_completed": {
            "type": "string",
            "nullable": true
          },
          "completed": {
            "type": "boolean"
          },
          "task_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "subcategory_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            },
            "description": ""
          },
          "last_action": {
            "$ref": "#/components/schemas/LastAction1"
          }
        },
        "example": {
          "id": "947d46ed-8480-49bc-8c57-e569747efe93",
          "goal_id": "e53a033c-900e-462d-a849-4a216b06d930",
          "name": "New Key Result Name",
          "type": "number",
          "unit": "km",
          "creator": 183,
          "date_created": "1568062902048",
          "goal_pretty_id": "6",
          "percent_completed": null,
          "completed": false,
          "task_ids": [],
          "subcategory_ids": [],
          "owners": [
            {
              "id": 183,
              "username": "John Doe",
              "email": "example@email.com",
              "color": "#827718",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/183_nx1.jpg",
              "initials": "JK"
            }
          ],
          "last_action": {
            "id": "e889858b-a023-46cc-968a-cac32fd04c1e",
            "key_result_id": "19c7a55e-537e-4bc9-b741-08df05a5bda8",
            "userid": 183,
            "date_modified": "1568122776851",
            "steps_taken": null,
            "note": "Target achieved",
            "steps_before": null,
            "steps_current": null,
            "steps_before_float": 0,
            "steps_taken_float": 5,
            "steps_current_float": null
          }
        }
      },
      "LastAction1": {
        "title": "LastAction1",
        "required": [
          "id",
          "key_result_id",
          "userid",
          "date_modified",
          "steps_taken",
          "note",
          "steps_before",
          "steps_current",
          "steps_before_float",
          "steps_taken_float",
          "steps_current_float"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key_result_id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "date_modified": {
            "type": "string"
          },
          "steps_taken": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string"
          },
          "steps_before": {
            "type": "string",
            "nullable": true
          },
          "steps_current": {
            "type": "string",
            "nullable": true
          },
          "steps_before_float": {
            "type": "integer",
            "format": "int32"
          },
          "steps_taken_float": {
            "type": "integer",
            "format": "int32"
          },
          "steps_current_float": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "e889858b-a023-46cc-968a-cac32fd04c1e",
          "key_result_id": "19c7a55e-537e-4bc9-b741-08df05a5bda8",
          "userid": 183,
          "date_modified": "1568122776851",
          "steps_taken": null,
          "note": "Target achieved",
          "steps_before": null,
          "steps_current": null,
          "steps_before_float": 0,
          "steps_taken_float": 5,
          "steps_current_float": null
        }
      },
      "InviteGuestToWorkspacerequest": {
        "title": "InviteGuestToWorkspacerequest",
        "required": [
          "email",
          "can_edit_tags",
          "can_see_time_spent",
          "can_see_time_estimated"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          }
        },
        "example": {
          "email": "guest@example.com",
          "can_edit_tags": true,
          "can_see_time_spent": true,
          "can_see_time_estimated": true
        }
      },
      "InviteGuestToWorkspaceresponse": {
        "title": "InviteGuestToWorkspaceresponse",
        "required": [
          "team"
        ],
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/Team1"
          }
        },
        "example": {
          "team": {
            "id": "333",
            "name": "Team Name",
            "color": "#8D00D4",
            "avatar": null,
            "members": [
              {
                "user": {
                  "id": 184,
                  "username": null,
                  "email": "guest@example.com",
                  "color": null,
                  "profilePicture": null,
                  "initials": "G",
                  "role": 4,
                  "last_active": null,
                  "date_joined": null,
                  "date_invited": "1583358383412"
                },
                "invited_by": {
                  "id": 183,
                  "color": "#827718",
                  "username": "Jerry",
                  "email": "jerry@example.com",
                  "initials": "J",
                  "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                },
                "can_see_time_spent": true,
                "can_see_time_estimated": true,
                "can_edit_tags": true
              }
            ]
          }
        }
      },
      "Team1": {
        "title": "Team1",
        "required": [
          "id",
          "name",
          "color",
          "avatar",
          "members"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member4"
            },
            "description": ""
          }
        },
        "example": {
          "id": "333",
          "name": "Team Name",
          "color": "#8D00D4",
          "avatar": null,
          "members": [
            {
              "user": {
                "id": 184,
                "username": null,
                "email": "guest@example.com",
                "color": null,
                "profilePicture": null,
                "initials": "G",
                "role": 4,
                "last_active": null,
                "date_joined": null,
                "date_invited": "1583358383412"
              },
              "invited_by": {
                "id": 183,
                "color": "#827718",
                "username": "Jerry",
                "email": "jerry@example.com",
                "initials": "J",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
              },
              "can_see_time_spent": true,
              "can_see_time_estimated": true,
              "can_edit_tags": true
            }
          ]
        }
      },
      "Member4": {
        "title": "Member4",
        "required": [
          "user",
          "invited_by",
          "can_see_time_spent",
          "can_see_time_estimated",
          "can_edit_tags"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          },
          "can_edit_tags": {
            "type": "boolean"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "guest@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 4,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "can_see_time_spent": true,
          "can_see_time_estimated": true,
          "can_edit_tags": true
        }
      },
      "User5": {
        "title": "User5",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "profilePicture",
          "initials",
          "role",
          "last_active",
          "date_joined",
          "date_invited"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          },
          "initials": {
            "type": "string"
          },
          "role": {
            "type": "integer",
            "format": "int32"
          },
          "last_active": {
            "type": "string",
            "nullable": true
          },
          "date_joined": {
            "type": "string",
            "nullable": true
          },
          "date_invited": {
            "type": "string"
          }
        },
        "example": {
          "id": 184,
          "username": null,
          "email": "guest@example.com",
          "color": null,
          "profilePicture": null,
          "initials": "G",
          "role": 4,
          "last_active": null,
          "date_joined": null,
          "date_invited": "1583358383412"
        }
      },
      "InvitedBy": {
        "title": "InvitedBy",
        "required": [
          "id",
          "color",
          "username",
          "email",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "color": "#827718",
          "username": "Jerry",
          "email": "jerry@example.com",
          "initials": "J",
          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
        }
      },
      "EditGuestOnWorkspacerequest": {
        "title": "EditGuestOnWorkspacerequest",
        "required": [
          "username",
          "can_edit_tags",
          "can_see_time_spent",
          "can_see_time_estimated"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          }
        },
        "example": {
          "username": "Guest User",
          "can_edit_tags": true,
          "can_see_time_spent": true,
          "can_see_time_estimated": true
        }
      },
      "EditGuestOnWorkspaceresponse": {
        "title": "EditGuestOnWorkspaceresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "Guest": {
        "title": "Guest",
        "required": [
          "user",
          "invited_by",
          "can_see_time_spent",
          "can_see_time_estimated",
          "can_edit_tags",
          "shared"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "shared": {
            "$ref": "#/components/schemas/Shared"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "guest@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 4,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "can_see_time_spent": true,
          "can_see_time_estimated": true,
          "can_edit_tags": true,
          "shared": {
            "tasks": [],
            "lists": [],
            "folders": []
          }
        }
      },
      "Shared": {
        "title": "Shared",
        "required": [
          "tasks",
          "lists",
          "folders"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [],
          "lists": [],
          "folders": []
        }
      },
      "RemoveGuestFromWorkspaceresponse": {
        "title": "RemoveGuestFromWorkspaceresponse",
        "required": [
          "team"
        ],
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/Team2"
          }
        },
        "example": {
          "team": {
            "id": "333",
            "name": "Team Name",
            "color": "#8D00D4",
            "avatar": null,
            "members": []
          }
        }
      },
      "Team2": {
        "title": "Team2",
        "required": [
          "id",
          "name",
          "color",
          "avatar",
          "members"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "id": "333",
          "name": "Team Name",
          "color": "#8D00D4",
          "avatar": null,
          "members": []
        }
      },
      "AddGuestToTaskrequest": {
        "title": "AddGuestToTaskrequest",
        "required": [
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "permission_level": "read"
        }
      },
      "AddGuestToTaskresponse": {
        "title": "AddGuestToTaskresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest1"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [
                {
                  "id": "c04",
                  "name": "Task Name",
                  "status": {
                    "status": "Open",
                    "color": "#d3d3d3",
                    "type": "open",
                    "orderindex": 0
                  },
                  "orderindex": "0",
                  "date_created": "1574718405408",
                  "date_updated": "1574722145869",
                  "date_closed": null,
                  "archived": false,
                  "creator": {
                    "id": 183,
                    "username": "Jerry",
                    "color": "#827718",
                    "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                  },
                  "assignees": [],
                  "checklists": [],
                  "tags": [],
                  "parent": null,
                  "priority": {
                    "id": "1",
                    "priority": "urgent",
                    "color": "#f50000",
                    "orderindex": "1"
                  },
                  "due_date": "1508369194377",
                  "start_date": null,
                  "points": null,
                  "time_estimate": null,
                  "custom_fields": [],
                  "dependencies": [],
                  "team_id": "108",
                  "url": "https://app.clickup.com/t/c04",
                  "permission_level": "read",
                  "list": {
                    "id": "1752",
                    "name": "Shared with me",
                    "access": false
                  },
                  "folder": {
                    "id": "1217",
                    "name": "Shared with me",
                    "hidden": false,
                    "access": false
                  },
                  "space": {
                    "id": "380"
                  }
                }
              ],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "Guest1": {
        "title": "Guest1",
        "required": [
          "user",
          "invited_by",
          "can_see_time_spent",
          "can_see_time_estimated",
          "can_edit_tags",
          "shared"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "shared": {
            "$ref": "#/components/schemas/Shared1"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "guest@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 4,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "can_see_time_spent": true,
          "can_see_time_estimated": true,
          "can_edit_tags": true,
          "shared": {
            "tasks": [
              {
                "id": "c04",
                "name": "Task Name",
                "status": {
                  "status": "Open",
                  "color": "#d3d3d3",
                  "type": "open",
                  "orderindex": 0
                },
                "orderindex": "0",
                "date_created": "1574718405408",
                "date_updated": "1574722145869",
                "date_closed": null,
                "archived": false,
                "creator": {
                  "id": 183,
                  "username": "Jerry",
                  "color": "#827718",
                  "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                },
                "assignees": [],
                "checklists": [],
                "tags": [],
                "parent": null,
                "priority": {
                  "id": "1",
                  "priority": "urgent",
                  "color": "#f50000",
                  "orderindex": "1"
                },
                "due_date": "1508369194377",
                "start_date": null,
                "points": null,
                "time_estimate": null,
                "custom_fields": [],
                "dependencies": [],
                "team_id": "108",
                "url": "https://app.clickup.com/t/c04",
                "permission_level": "read",
                "list": {
                  "id": "1752",
                  "name": "Shared with me",
                  "access": false
                },
                "folder": {
                  "id": "1217",
                  "name": "Shared with me",
                  "hidden": false,
                  "access": false
                },
                "space": {
                  "id": "380"
                }
              }
            ],
            "lists": [],
            "folders": []
          }
        }
      },
      "Shared1": {
        "title": "Shared1",
        "required": [
          "tasks",
          "lists",
          "folders"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task2"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [
            {
              "id": "c04",
              "name": "Task Name",
              "status": {
                "status": "Open",
                "color": "#d3d3d3",
                "type": "open",
                "orderindex": 0
              },
              "orderindex": "0",
              "date_created": "1574718405408",
              "date_updated": "1574722145869",
              "date_closed": null,
              "archived": false,
              "creator": {
                "id": 183,
                "username": "Jerry",
                "color": "#827718",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
              },
              "assignees": [],
              "checklists": [],
              "tags": [],
              "parent": null,
              "priority": {
                "id": "1",
                "priority": "urgent",
                "color": "#f50000",
                "orderindex": "1"
              },
              "due_date": "1508369194377",
              "start_date": null,
              "points": null,
              "time_estimate": null,
              "custom_fields": [],
              "dependencies": [],
              "team_id": "108",
              "url": "https://app.clickup.com/t/c04",
              "permission_level": "read",
              "list": {
                "id": "1752",
                "name": "Shared with me",
                "access": false
              },
              "folder": {
                "id": "1217",
                "name": "Shared with me",
                "hidden": false,
                "access": false
              },
              "space": {
                "id": "380"
              }
            }
          ],
          "lists": [],
          "folders": []
        }
      },
      "Task2": {
        "title": "Task2",
        "required": [
          "id",
          "name",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "archived",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "points",
          "time_estimate",
          "custom_fields",
          "dependencies",
          "team_id",
          "url",
          "permission_level",
          "list",
          "folder",
          "space"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/Priority"
          },
          "due_date": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "points": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "team_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "permission_level": {
            "type": "string"
          },
          "list": {
            "$ref": "#/components/schemas/List2"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          }
        },
        "example": {
          "id": "c04",
          "name": "Task Name",
          "status": {
            "status": "Open",
            "color": "#d3d3d3",
            "type": "open",
            "orderindex": 0
          },
          "orderindex": "0",
          "date_created": "1574718405408",
          "date_updated": "1574722145869",
          "date_closed": null,
          "archived": false,
          "creator": {
            "id": 183,
            "username": "Jerry",
            "color": "#827718",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "assignees": [],
          "checklists": [],
          "tags": [],
          "parent": null,
          "priority": {
            "id": "1",
            "priority": "urgent",
            "color": "#f50000",
            "orderindex": "1"
          },
          "due_date": "1508369194377",
          "start_date": null,
          "points": null,
          "time_estimate": null,
          "custom_fields": [],
          "dependencies": [],
          "team_id": "108",
          "url": "https://app.clickup.com/t/c04",
          "permission_level": "read",
          "list": {
            "id": "1752",
            "name": "Shared with me",
            "access": false
          },
          "folder": {
            "id": "1217",
            "name": "Shared with me",
            "hidden": false,
            "access": false
          },
          "space": {
            "id": "380"
          }
        }
      },
      "Priority": {
        "title": "Priority",
        "required": [
          "id",
          "priority",
          "color",
          "orderindex"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "orderindex": {
            "type": "string"
          }
        },
        "example": {
          "id": "1",
          "priority": "urgent",
          "color": "#f50000",
          "orderindex": "1"
        }
      },
      "List2": {
        "title": "List2",
        "required": [
          "id",
          "name",
          "access"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "access": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "1752",
          "name": "Shared with me",
          "access": false
        }
      },
      "Folder3": {
        "title": "Folder3",
        "required": [
          "id",
          "name",
          "hidden",
          "access"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "access": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "1217",
          "name": "Shared with me",
          "hidden": false,
          "access": false
        }
      },
      "RemoveGuestFromTaskresponse": {
        "title": "RemoveGuestFromTaskresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "AddGuestToListrequest": {
        "title": "AddGuestToListrequest",
        "required": [
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "permission_level": "read"
        }
      },
      "AddGuestToListresponse": {
        "title": "AddGuestToListresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest3"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [
                {
                  "id": "1427",
                  "name": "List Name",
                  "orderindex": 1,
                  "status": null,
                  "priority": null,
                  "assignee": null,
                  "task_count": "5",
                  "due_date": null,
                  "start_date": null,
                  "archived": false,
                  "override_statuses": true,
                  "statuses": [
                    {
                      "status": "Open",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "Closed",
                      "orderindex": 5,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "permission_level": "read"
                }
              ],
              "folders": []
            }
          }
        }
      },
      "Guest3": {
        "title": "Guest3",
        "required": [
          "user",
          "invited_by",
          "can_see_time_spent",
          "can_see_time_estimated",
          "can_edit_tags",
          "shared"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "shared": {
            "$ref": "#/components/schemas/Shared3"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "guest@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 4,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "can_see_time_spent": true,
          "can_see_time_estimated": true,
          "can_edit_tags": true,
          "shared": {
            "tasks": [],
            "lists": [
              {
                "id": "1427",
                "name": "List Name",
                "orderindex": 1,
                "status": null,
                "priority": null,
                "assignee": null,
                "task_count": "5",
                "due_date": null,
                "start_date": null,
                "archived": false,
                "override_statuses": true,
                "statuses": [
                  {
                    "status": "Open",
                    "orderindex": 0,
                    "color": "#d3d3d3",
                    "type": "open"
                  },
                  {
                    "status": "Closed",
                    "orderindex": 5,
                    "color": "#6bc950",
                    "type": "closed"
                  }
                ],
                "permission_level": "read"
              }
            ],
            "folders": []
          }
        }
      },
      "Shared3": {
        "title": "Shared3",
        "required": [
          "tasks",
          "lists",
          "folders"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List3"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [],
          "lists": [
            {
              "id": "1427",
              "name": "List Name",
              "orderindex": 1,
              "status": null,
              "priority": null,
              "assignee": null,
              "task_count": "5",
              "due_date": null,
              "start_date": null,
              "archived": false,
              "override_statuses": true,
              "statuses": [
                {
                  "status": "Open",
                  "orderindex": 0,
                  "color": "#d3d3d3",
                  "type": "open"
                },
                {
                  "status": "Closed",
                  "orderindex": 5,
                  "color": "#6bc950",
                  "type": "closed"
                }
              ],
              "permission_level": "read"
            }
          ],
          "folders": []
        }
      },
      "List3": {
        "title": "List3",
        "required": [
          "id",
          "name",
          "orderindex",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "start_date",
          "archived",
          "override_statuses",
          "statuses",
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string"
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "id": "1427",
          "name": "List Name",
          "orderindex": 1,
          "status": null,
          "priority": null,
          "assignee": null,
          "task_count": "5",
          "due_date": null,
          "start_date": null,
          "archived": false,
          "override_statuses": true,
          "statuses": [
            {
              "status": "Open",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "Closed",
              "orderindex": 5,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "permission_level": "read"
        }
      },
      "RemoveGuestFromListresponse": {
        "title": "RemoveGuestFromListresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "AddGuestToFolderrequest": {
        "title": "AddGuestToFolderrequest",
        "required": [
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "permission_level": "read"
        }
      },
      "AddGuestToFolderresponse": {
        "title": "AddGuestToFolderresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest5"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": [
                {
                  "id": "1057",
                  "name": "Folder Name",
                  "orderindex": 5,
                  "override_statuses": true,
                  "hidden": false,
                  "task_count": "20",
                  "archived": false,
                  "statuses": [
                    {
                      "status": "Open",
                      "orderindex": 0,
                      "color": "#d3d3d3",
                      "type": "open"
                    },
                    {
                      "status": "Closed",
                      "orderindex": 5,
                      "color": "#6bc950",
                      "type": "closed"
                    }
                  ],
                  "lists": [],
                  "permission_level": "read"
                }
              ]
            }
          }
        }
      },
      "Guest5": {
        "title": "Guest5",
        "required": [
          "user",
          "invited_by",
          "can_see_time_spent",
          "can_see_time_estimated",
          "can_edit_tags",
          "shared"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "can_see_time_spent": {
            "type": "boolean"
          },
          "can_see_time_estimated": {
            "type": "boolean"
          },
          "can_edit_tags": {
            "type": "boolean"
          },
          "shared": {
            "$ref": "#/components/schemas/Shared5"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "guest@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 4,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "can_see_time_spent": true,
          "can_see_time_estimated": true,
          "can_edit_tags": true,
          "shared": {
            "tasks": [],
            "lists": [],
            "folders": [
              {
                "id": "1057",
                "name": "Folder Name",
                "orderindex": 5,
                "override_statuses": true,
                "hidden": false,
                "task_count": "20",
                "archived": false,
                "statuses": [
                  {
                    "status": "Open",
                    "orderindex": 0,
                    "color": "#d3d3d3",
                    "type": "open"
                  },
                  {
                    "status": "Closed",
                    "orderindex": 5,
                    "color": "#6bc950",
                    "type": "closed"
                  }
                ],
                "lists": [],
                "permission_level": "read"
              }
            ]
          }
        }
      },
      "Shared5": {
        "title": "Shared5",
        "required": [
          "tasks",
          "lists",
          "folders"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder4"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [],
          "lists": [],
          "folders": [
            {
              "id": "1057",
              "name": "Folder Name",
              "orderindex": 5,
              "override_statuses": true,
              "hidden": false,
              "task_count": "20",
              "archived": false,
              "statuses": [
                {
                  "status": "Open",
                  "orderindex": 0,
                  "color": "#d3d3d3",
                  "type": "open"
                },
                {
                  "status": "Closed",
                  "orderindex": 5,
                  "color": "#6bc950",
                  "type": "closed"
                }
              ],
              "lists": [],
              "permission_level": "read"
            }
          ]
        }
      },
      "Folder4": {
        "title": "Folder4",
        "required": [
          "id",
          "name",
          "orderindex",
          "override_statuses",
          "hidden",
          "task_count",
          "archived",
          "statuses",
          "lists",
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "hidden": {
            "type": "boolean"
          },
          "task_count": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "id": "1057",
          "name": "Folder Name",
          "orderindex": 5,
          "override_statuses": true,
          "hidden": false,
          "task_count": "20",
          "archived": false,
          "statuses": [
            {
              "status": "Open",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "Closed",
              "orderindex": 5,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "lists": [],
          "permission_level": "read"
        }
      },
      "RemoveGuestFromFolderresponse": {
        "title": "RemoveGuestFromFolderresponse",
        "required": [
          "guest"
        ],
        "type": "object",
        "properties": {
          "guest": {
            "$ref": "#/components/schemas/Guest"
          }
        },
        "example": {
          "guest": {
            "user": {
              "id": 184,
              "username": null,
              "email": "guest@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 4,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "can_see_time_spent": true,
            "can_see_time_estimated": true,
            "can_edit_tags": true,
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "CreateListrequest": {
        "title": "CreateListrequest",
        "required": [
          "name",
          "content",
          "due_date",
          "due_date_time",
          "priority",
          "assignee",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "due_date": {
            "type": "integer",
            "format": "int64"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "name": "New List Name",
          "content": "New List Content",
          "due_date": 1567780450202,
          "due_date_time": false,
          "priority": 1,
          "assignee": 183,
          "status": "red"
        }
      },
      "CreateListresponse": {
        "title": "CreateListresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "due_date_time",
          "start_date",
          "start_date_time",
          "folder",
          "space",
          "statuses",
          "inbound_address"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status5"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority1"
          },
          "assignee": {
            "$ref": "#/components/schemas/Assignee3"
          },
          "task_count": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "start_date_time": {
            "type": "string",
            "nullable": true
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "inbound_address": {
            "type": "string"
          }
        },
        "example": {
          "id": "124",
          "name": "New List Name",
          "orderindex": 1,
          "content": "New List Content",
          "status": {
            "status": "red",
            "color": "#e50000",
            "hide_label": true
          },
          "priority": {
            "priority": "urgent",
            "color": "#f50000"
          },
          "assignee": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "task_count": null,
          "due_date": "1567780450202",
          "due_date_time": false,
          "start_date": null,
          "start_date_time": null,
          "folder": {
            "id": "456",
            "name": "Folder Name",
            "hidden": false,
            "access": true
          },
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "statuses": [
            {
              "status": "to do",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "complete",
              "orderindex": 1,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
        }
      },
      "Status5": {
        "title": "Status5",
        "required": [
          "status",
          "color",
          "hide_label"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "hide_label": {
            "type": "boolean"
          }
        },
        "example": {
          "status": "red",
          "color": "#e50000",
          "hide_label": true
        }
      },
      "Priority1": {
        "title": "Priority1",
        "required": [
          "priority",
          "color"
        ],
        "type": "object",
        "properties": {
          "priority": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "example": {
          "priority": "urgent",
          "color": "#f50000"
        }
      },
      "Assignee3": {
        "title": "Assignee3",
        "required": [
          "id",
          "color",
          "username",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 183,
          "color": "#827718",
          "username": "Jerry",
          "initials": "J",
          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
        }
      },
      "CreateFolderlessListrequest": {
        "title": "CreateFolderlessListrequest",
        "required": [
          "name",
          "content",
          "due_date",
          "due_date_time",
          "priority",
          "assignee",
          "status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "due_date": {
            "type": "integer",
            "format": "int64"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "name": "New List Name",
          "content": "New List Content",
          "due_date": 1567780450202,
          "due_date_time": false,
          "priority": 1,
          "assignee": 183,
          "status": "red"
        }
      },
      "CreateFolderlessListresponse": {
        "title": "CreateFolderlessListresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "due_date_time",
          "start_date",
          "start_date_time",
          "folder",
          "space",
          "statuses",
          "inbound_address"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status5"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority1"
          },
          "assignee": {
            "$ref": "#/components/schemas/Assignee3"
          },
          "task_count": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "start_date_time": {
            "type": "string",
            "nullable": true
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "inbound_address": {
            "type": "string"
          }
        },
        "example": {
          "id": "124",
          "name": "New List Name",
          "orderindex": 1,
          "content": "New List Content",
          "status": {
            "status": "red",
            "color": "#e50000",
            "hide_label": true
          },
          "priority": {
            "priority": "urgent",
            "color": "#f50000"
          },
          "assignee": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "task_count": null,
          "due_date": "1567780450202",
          "due_date_time": false,
          "start_date": null,
          "start_date_time": null,
          "folder": {
            "id": "457",
            "name": "hidden",
            "hidden": true,
            "access": true
          },
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "statuses": [
            {
              "status": "to do",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "complete",
              "orderindex": 1,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
        }
      },
      "UpdateListrequest": {
        "title": "UpdateListrequest",
        "required": [
          "name",
          "content",
          "due_date",
          "due_date_time",
          "priority",
          "assignee",
          "unset_status"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "due_date": {
            "type": "integer",
            "format": "int64"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "string"
          },
          "unset_status": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "Updated List Name",
          "content": "Updated List Content",
          "due_date": 1567780450202,
          "due_date_time": true,
          "priority": 2,
          "assignee": "none",
          "unset_status": true
        }
      },
      "UpdateListresponse": {
        "title": "UpdateListresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "due_date_time",
          "start_date",
          "start_date_time",
          "folder",
          "space",
          "statuses",
          "inbound_address"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status5"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority1"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "start_date_time": {
            "type": "string",
            "nullable": true
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "inbound_address": {
            "type": "string"
          }
        },
        "example": {
          "id": "124",
          "name": "Updated List Name",
          "orderindex": 1,
          "content": "Updated List Content",
          "status": {
            "status": "red",
            "color": "#e50000",
            "hide_label": true
          },
          "priority": {
            "priority": "high",
            "color": "#f50000"
          },
          "assignee": null,
          "task_count": null,
          "due_date": "1567780450202",
          "due_date_time": true,
          "start_date": null,
          "start_date_time": null,
          "folder": {
            "id": "456",
            "name": "Folder Name",
            "hidden": false,
            "access": true
          },
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "statuses": [
            {
              "status": "to do",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "complete",
              "orderindex": 1,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "inbound_address": "add.task.1389.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com"
        }
      },
      "GetListsresponse": {
        "title": "GetListsresponse",
        "required": [
          "lists"
        ],
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List4"
            },
            "description": ""
          }
        }
      },
      "List4": {
        "title": "List4",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "start_date",
          "folder",
          "space",
          "archived",
          "override_statuses",
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Status11"
              },
              {
                "type": "string",
                "nullable": true
              },
              {
                "nullable": true
              }
            ],
            "example": {
              "status": "red",
              "color": "#e50000",
              "hide_label": true
            }
          },
          "priority": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Priority4"
              },
              {
                "type": "string",
                "nullable": true
              },
              {
                "nullable": true
              }
            ],
            "example": {
              "priority": "high",
              "color": "#f50000"
            }
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "archived": {
            "type": "boolean"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "id": "124",
          "name": "Updated List Name",
          "orderindex": 1,
          "content": "Updated List Content",
          "status": {
            "status": "red",
            "color": "#e50000",
            "hide_label": true
          },
          "priority": {
            "priority": "high",
            "color": "#f50000"
          },
          "assignee": null,
          "task_count": null,
          "due_date": "1567780450202",
          "start_date": null,
          "folder": {
            "id": "456",
            "name": "Folder Name",
            "hidden": false,
            "access": true
          },
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "archived": false,
          "override_statuses": false,
          "permission_level": "create"
        }
      },
      "Status11": {
        "title": "Status11",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "hide_label": {
            "type": "boolean"
          }
        },
        "example": {
          "status": "red",
          "color": "#e50000",
          "hide_label": true
        }
      },
      "Priority4": {
        "title": "Priority4",
        "type": "object",
        "properties": {
          "priority": {
            "type": "string"
          },
          "color": {
            "type": "string"
          }
        },
        "example": {
          "priority": "high",
          "color": "#f50000"
        }
      },
      "GetFolderlessListsresponse": {
        "title": "GetFolderlessListsresponse",
        "required": [
          "lists"
        ],
        "type": "object",
        "properties": {
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List4"
            },
            "description": ""
          }
        }
      },
      "GetListresponse": {
        "title": "GetListresponse",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "due_date_time",
          "start_date",
          "start_date_time",
          "folder",
          "space",
          "inbound_address",
          "archived",
          "override_statuses",
          "statuses",
          "permission_level"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status5"
          },
          "priority": {
            "$ref": "#/components/schemas/Priority1"
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "start_date_time": {
            "type": "string",
            "nullable": true
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space2"
          },
          "inbound_address": {
            "type": "string"
          },
          "archived": {
            "type": "boolean"
          },
          "override_statuses": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "permission_level": {
            "type": "string"
          }
        },
        "example": {
          "id": "124",
          "name": "Updated List Name",
          "orderindex": 1,
          "content": "Updated List Content",
          "status": {
            "status": "red",
            "color": "#e50000",
            "hide_label": true
          },
          "priority": {
            "priority": "high",
            "color": "#f50000"
          },
          "assignee": null,
          "task_count": null,
          "due_date": "1567780450202",
          "due_date_time": true,
          "start_date": null,
          "start_date_time": null,
          "folder": {
            "id": "456",
            "name": "Folder Name",
            "hidden": false,
            "access": true
          },
          "space": {
            "id": "789",
            "name": "Space Name",
            "access": true
          },
          "inbound_address": "add.task.124.ac725f.31518a6a-05bb-4997-92a6-1dcfe2f527ca@tasks.clickup.com",
          "archived": false,
          "override_statuses": false,
          "statuses": [
            {
              "status": "to do",
              "orderindex": 0,
              "color": "#d3d3d3",
              "type": "open"
            },
            {
              "status": "complete",
              "orderindex": 1,
              "color": "#6bc950",
              "type": "closed"
            }
          ],
          "permission_level": "create"
        }
      },
      "GetTaskMembersresponse": {
        "title": "GetTaskMembersresponse",
        "required": [
          "members"
        ],
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member5"
            },
            "description": ""
          }
        },
        "example": {
          "members": [
            {
              "id": 812,
              "username": "John Doe",
              "email": "john@example.com",
              "color": "#FFFFFF",
              "initials": "JD",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/812_nx1.jpg",
              "profileInfo": {
                "display_profile": null,
                "verified_ambassador": null,
                "verified_consultant": null,
                "top_tier_user": null,
                "viewed_verified_ambassador": null,
                "viewed_verified_consultant": null,
                "viewed_top_tier_user": null
              }
            },
            {
              "id": 813,
              "username": "Jane Doe",
              "email": "jane@example.com",
              "color": null,
              "initials": "JD",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/813_nx1.jpg",
              "profileInfo": {
                "display_profile": null,
                "verified_ambassador": null,
                "verified_consultant": null,
                "top_tier_user": null,
                "viewed_verified_ambassador": null,
                "viewed_verified_consultant": null,
                "viewed_top_tier_user": null
              }
            }
          ]
        }
      },
      "Member5": {
        "title": "Member5",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture",
          "profileInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "profileInfo": {
            "$ref": "#/components/schemas/ProfileInfo"
          }
        },
        "example": {
          "id": 812,
          "username": "John Doe",
          "email": "john@example.com",
          "color": "#FFFFFF",
          "initials": "JD",
          "profilePicture": "https://attachments-public.clickup.com/profilePictures/812_nx1.jpg",
          "profileInfo": {
            "display_profile": null,
            "verified_ambassador": null,
            "verified_consultant": null,
            "top_tier_user": null,
            "viewed_verified_ambassador": null,
            "viewed_verified_consultant": null,
            "viewed_top_tier_user": null
          }
        }
      },
      "ProfileInfo": {
        "title": "ProfileInfo",
        "required": [
          "display_profile",
          "verified_ambassador",
          "verified_consultant",
          "top_tier_user",
          "viewed_verified_ambassador",
          "viewed_verified_consultant",
          "viewed_top_tier_user"
        ],
        "type": "object",
        "properties": {
          "display_profile": {
            "type": "string",
            "nullable": true
          },
          "verified_ambassador": {
            "type": "string",
            "nullable": true
          },
          "verified_consultant": {
            "type": "string",
            "nullable": true
          },
          "top_tier_user": {
            "type": "string",
            "nullable": true
          },
          "viewed_verified_ambassador": {
            "type": "string",
            "nullable": true
          },
          "viewed_verified_consultant": {
            "type": "string",
            "nullable": true
          },
          "viewed_top_tier_user": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "display_profile": null,
          "verified_ambassador": null,
          "verified_consultant": null,
          "top_tier_user": null,
          "viewed_verified_ambassador": null,
          "viewed_verified_consultant": null,
          "viewed_top_tier_user": null
        }
      },
      "GetListMembersresponse": {
        "title": "GetListMembersresponse",
        "required": [
          "members"
        ],
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member5"
            },
            "description": ""
          }
        },
        "example": {
          "members": [
            {
              "id": 812,
              "username": "John Doe",
              "email": "john@example.com",
              "color": "#FFFFFF",
              "initials": "JD",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/812_nx1.jpg",
              "profileInfo": {
                "display_profile": null,
                "verified_ambassador": null,
                "verified_consultant": null,
                "top_tier_user": null,
                "viewed_verified_ambassador": null,
                "viewed_verified_consultant": null,
                "viewed_top_tier_user": null
              }
            },
            {
              "id": 813,
              "username": "Jane Doe",
              "email": "jane@example.com",
              "color": null,
              "initials": "JD",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/813_nx1.jpg",
              "profileInfo": {
                "display_profile": null,
                "verified_ambassador": null,
                "verified_consultant": null,
                "top_tier_user": null,
                "viewed_verified_ambassador": null,
                "viewed_verified_consultant": null,
                "viewed_top_tier_user": null
              }
            }
          ]
        }
      },
      "SharedHierarchyresponse": {
        "title": "SharedHierarchyresponse",
        "required": [
          "shared"
        ],
        "type": "object",
        "properties": {
          "shared": {
            "$ref": "#/components/schemas/Shared7"
          }
        },
        "example": {
          "shared": {
            "tasks": [],
            "lists": [
              {
                "id": "1421",
                "name": "Shared List",
                "orderindex": 0,
                "content": null,
                "status": null,
                "priority": null,
                "assignee": null,
                "task_count": "0",
                "due_date": null,
                "start_date": null,
                "archived": false
              }
            ],
            "folders": [
              {
                "id": "1058",
                "name": "Shared Folder",
                "orderindex": 0,
                "content": null,
                "task_count": "0",
                "due_date": null,
                "archived": false
              }
            ]
          }
        }
      },
      "Shared7": {
        "title": "Shared7",
        "required": [
          "tasks",
          "lists",
          "folders"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "lists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/List6"
            },
            "description": ""
          },
          "folders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder11"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [],
          "lists": [
            {
              "id": "1421",
              "name": "Shared List",
              "orderindex": 0,
              "content": null,
              "status": null,
              "priority": null,
              "assignee": null,
              "task_count": "0",
              "due_date": null,
              "start_date": null,
              "archived": false
            }
          ],
          "folders": [
            {
              "id": "1058",
              "name": "Shared Folder",
              "orderindex": 0,
              "content": null,
              "task_count": "0",
              "due_date": null,
              "archived": false
            }
          ]
        }
      },
      "List6": {
        "title": "List6",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "status",
          "priority",
          "assignee",
          "task_count",
          "due_date",
          "start_date",
          "archived"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "assignee": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string"
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "1421",
          "name": "Shared List",
          "orderindex": 0,
          "content": null,
          "status": null,
          "priority": null,
          "assignee": null,
          "task_count": "0",
          "due_date": null,
          "start_date": null,
          "archived": false
        }
      },
      "Folder11": {
        "title": "Folder11",
        "required": [
          "id",
          "name",
          "orderindex",
          "content",
          "task_count",
          "due_date",
          "archived"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "task_count": {
            "type": "string"
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "1058",
          "name": "Shared Folder",
          "orderindex": 0,
          "content": null,
          "task_count": "0",
          "due_date": null,
          "archived": false
        }
      },
      "CreateSpacerequest": {
        "title": "CreateSpacerequest",
        "required": [
          "name",
          "multiple_assignees",
          "features"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        },
        "example": {
          "name": "New Space Name",
          "multiple_assignees": true,
          "features": {
            "due_dates": {
              "enabled": true,
              "start_date": false,
              "remap_due_dates": true,
              "remap_closed_due_date": false
            },
            "time_tracking": {
              "enabled": false
            },
            "tags": {
              "enabled": true
            },
            "time_estimates": {
              "enabled": true
            },
            "checklists": {
              "enabled": true
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": true
            },
            "dependency_warning": {
              "enabled": true
            },
            "portfolios": {
              "enabled": true
            }
          }
        }
      },
      "Features": {
        "title": "Features",
        "required": [
          "due_dates",
          "time_tracking",
          "tags",
          "time_estimates",
          "checklists",
          "custom_fields",
          "remap_dependencies",
          "dependency_warning",
          "portfolios"
        ],
        "type": "object",
        "properties": {
          "due_dates": {
            "$ref": "#/components/schemas/DueDates"
          },
          "time_tracking": {
            "$ref": "#/components/schemas/TimeTracking"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "time_estimates": {
            "$ref": "#/components/schemas/TimeEstimates"
          },
          "checklists": {
            "$ref": "#/components/schemas/Checklists"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "remap_dependencies": {
            "$ref": "#/components/schemas/RemapDependencies"
          },
          "dependency_warning": {
            "$ref": "#/components/schemas/DependencyWarning"
          },
          "portfolios": {
            "$ref": "#/components/schemas/Portfolios"
          }
        },
        "example": {
          "due_dates": {
            "enabled": true,
            "start_date": false,
            "remap_due_dates": true,
            "remap_closed_due_date": false
          },
          "time_tracking": {
            "enabled": false
          },
          "tags": {
            "enabled": true
          },
          "time_estimates": {
            "enabled": true
          },
          "checklists": {
            "enabled": true
          },
          "custom_fields": {
            "enabled": true
          },
          "remap_dependencies": {
            "enabled": true
          },
          "dependency_warning": {
            "enabled": true
          },
          "portfolios": {
            "enabled": true
          }
        }
      },
      "DueDates": {
        "title": "DueDates",
        "required": [
          "enabled",
          "start_date",
          "remap_due_dates",
          "remap_closed_due_date"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "start_date": {
            "type": "boolean"
          },
          "remap_due_dates": {
            "type": "boolean"
          },
          "remap_closed_due_date": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true,
          "start_date": false,
          "remap_due_dates": true,
          "remap_closed_due_date": false
        }
      },
      "TimeTracking": {
        "title": "TimeTracking",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "Tags": {
        "title": "Tags",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "TimeEstimates": {
        "title": "TimeEstimates",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "Checklists": {
        "title": "Checklists",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "CustomFields": {
        "title": "CustomFields",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "RemapDependencies": {
        "title": "RemapDependencies",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "DependencyWarning": {
        "title": "DependencyWarning",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "Portfolios": {
        "title": "Portfolios",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "CreateSpaceresponse": {
        "title": "CreateSpaceresponse",
        "required": [
          "id",
          "name",
          "private",
          "statuses",
          "multiple_assignees",
          "features",
          "archived"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status15"
            },
            "description": ""
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features1"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "790",
          "name": "New Space Name",
          "private": false,
          "statuses": [
            {
              "id": "p16911531_p8y2WNC6",
              "status": "to do",
              "type": "open",
              "orderindex": 0,
              "color": "#d3d3d3"
            },
            {
              "id": "p17911545_ABo7jSsf",
              "status": "complete",
              "type": "closed",
              "orderindex": 1,
              "color": "#6bc950"
            }
          ],
          "multiple_assignees": true,
          "features": {
            "due_dates": {
              "enabled": true,
              "start_date": false,
              "remap_due_dates": true,
              "remap_closed_due_date": false
            },
            "sprints": {
              "enabled": false
            },
            "points": {
              "enabled": false
            },
            "custom_items": {
              "enabled": false
            },
            "tags": {
              "enabled": true
            },
            "time_estimates": {
              "enabled": true
            },
            "checklists": {
              "enabled": true
            },
            "zoom": {
              "enabled": false
            },
            "milestones": {
              "enabled": false
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": true
            },
            "dependency_warning": {
              "enabled": true
            },
            "multiple_assignees": {
              "enabled": true
            },
            "portfolios": {
              "enabled": true
            },
            "emails": {
              "enabled": true
            }
          },
          "archived": false
        }
      },
      "Status15": {
        "title": "Status15",
        "required": [
          "id",
          "status",
          "type",
          "orderindex",
          "color"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          }
        },
        "example": {
          "id": "p16911531_p8y2WNC6",
          "status": "to do",
          "type": "open",
          "orderindex": 0,
          "color": "#d3d3d3"
        }
      },
      "Features1": {
        "title": "Features1",
        "required": [
          "due_dates",
          "sprints",
          "points",
          "custom_items",
          "tags",
          "time_estimates",
          "checklists",
          "zoom",
          "milestones",
          "custom_fields",
          "remap_dependencies",
          "dependency_warning",
          "multiple_assignees",
          "portfolios",
          "emails"
        ],
        "type": "object",
        "properties": {
          "due_dates": {
            "$ref": "#/components/schemas/DueDates"
          },
          "sprints": {
            "$ref": "#/components/schemas/Sprints"
          },
          "points": {
            "$ref": "#/components/schemas/Points"
          },
          "custom_items": {
            "$ref": "#/components/schemas/CustomItems"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "time_estimates": {
            "$ref": "#/components/schemas/TimeEstimates"
          },
          "checklists": {
            "$ref": "#/components/schemas/Checklists"
          },
          "zoom": {
            "$ref": "#/components/schemas/Zoom"
          },
          "milestones": {
            "$ref": "#/components/schemas/Milestones"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "remap_dependencies": {
            "$ref": "#/components/schemas/RemapDependencies"
          },
          "dependency_warning": {
            "$ref": "#/components/schemas/DependencyWarning"
          },
          "multiple_assignees": {
            "$ref": "#/components/schemas/MultipleAssignees"
          },
          "portfolios": {
            "$ref": "#/components/schemas/Portfolios"
          },
          "emails": {
            "$ref": "#/components/schemas/Emails"
          }
        },
        "example": {
          "due_dates": {
            "enabled": true,
            "start_date": false,
            "remap_due_dates": true,
            "remap_closed_due_date": false
          },
          "sprints": {
            "enabled": false
          },
          "points": {
            "enabled": false
          },
          "custom_items": {
            "enabled": false
          },
          "tags": {
            "enabled": true
          },
          "time_estimates": {
            "enabled": true
          },
          "checklists": {
            "enabled": true
          },
          "zoom": {
            "enabled": false
          },
          "milestones": {
            "enabled": false
          },
          "custom_fields": {
            "enabled": true
          },
          "remap_dependencies": {
            "enabled": true
          },
          "dependency_warning": {
            "enabled": true
          },
          "multiple_assignees": {
            "enabled": true
          },
          "portfolios": {
            "enabled": true
          },
          "emails": {
            "enabled": true
          }
        }
      },
      "Sprints": {
        "title": "Sprints",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "Points": {
        "title": "Points",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "CustomItems": {
        "title": "CustomItems",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "Zoom": {
        "title": "Zoom",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "Milestones": {
        "title": "Milestones",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": false
        }
      },
      "MultipleAssignees": {
        "title": "MultipleAssignees",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "Emails": {
        "title": "Emails",
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        },
        "example": {
          "enabled": true
        }
      },
      "UpdateSpacerequest": {
        "title": "UpdateSpacerequest",
        "required": [
          "name",
          "multiple_assignees",
          "features"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        },
        "example": {
          "name": "Updated Space Name",
          "multiple_assignees": false,
          "features": {
            "due_dates": {
              "enabled": false,
              "start_date": false,
              "remap_due_dates": false,
              "remap_closed_due_date": false
            },
            "time_tracking": {
              "enabled": false
            },
            "tags": {
              "enabled": false
            },
            "time_estimates": {
              "enabled": false
            },
            "checklists": {
              "enabled": true
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": false
            },
            "dependency_warning": {
              "enabled": false
            },
            "portfolios": {
              "enabled": false
            }
          }
        }
      },
      "UpdateSpaceresponse": {
        "title": "UpdateSpaceresponse",
        "required": [
          "id",
          "name",
          "private",
          "statuses",
          "multiple_assignees",
          "features"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        },
        "example": {
          "id": "790",
          "name": "Updated Space Name",
          "private": false,
          "statuses": [
            {
              "status": "to do",
              "type": "open",
              "orderindex": 0,
              "color": "#d3d3d3"
            },
            {
              "status": "complete",
              "type": "closed",
              "orderindex": 1,
              "color": "#6bc950"
            }
          ],
          "multiple_assignees": false,
          "features": {
            "due_dates": {
              "enabled": false,
              "start_date": false,
              "remap_due_dates": false,
              "remap_closed_due_date": false
            },
            "time_tracking": {
              "enabled": false
            },
            "tags": {
              "enabled": false
            },
            "time_estimates": {
              "enabled": false
            },
            "checklists": {
              "enabled": true
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": false
            },
            "dependency_warning": {
              "enabled": false
            },
            "portfolios": {
              "enabled": false
            }
          }
        }
      },
      "GetSpacesresponse": {
        "title": "GetSpacesresponse",
        "required": [
          "spaces"
        ],
        "type": "object",
        "properties": {
          "spaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Space13"
            },
            "description": ""
          }
        },
        "example": {
          "spaces": [
            {
              "id": "790",
              "name": "Updated Space Name",
              "private": false,
              "statuses": [
                {
                  "status": "to do",
                  "type": "open",
                  "orderindex": 0,
                  "color": "#d3d3d3"
                },
                {
                  "status": "complete",
                  "type": "closed",
                  "orderindex": 1,
                  "color": "#6bc950"
                }
              ],
              "multiple_assignees": false,
              "features": {
                "due_dates": {
                  "enabled": false,
                  "start_date": false,
                  "remap_due_dates": false,
                  "remap_closed_due_date": false
                },
                "time_tracking": {
                  "enabled": false
                },
                "tags": {
                  "enabled": false
                },
                "time_estimates": {
                  "enabled": false
                },
                "checklists": {
                  "enabled": true
                },
                "custom_fields": {
                  "enabled": true
                },
                "remap_dependencies": {
                  "enabled": false
                },
                "dependency_warning": {
                  "enabled": false
                },
                "portfolios": {
                  "enabled": false
                }
              }
            },
            {
              "id": "791",
              "name": "Second Space Name",
              "private": false,
              "statuses": [
                {
                  "status": "Open",
                  "type": "open",
                  "orderindex": 0,
                  "color": "#d3d3d3"
                },
                {
                  "status": "Closed",
                  "type": "closed",
                  "orderindex": 1,
                  "color": "#6bc950"
                }
              ],
              "multiple_assignees": true,
              "features": {
                "due_dates": {
                  "enabled": true,
                  "start_date": false,
                  "remap_due_dates": false,
                  "remap_closed_due_date": false
                },
                "time_tracking": {
                  "enabled": true
                },
                "tags": {
                  "enabled": true
                },
                "time_estimates": {
                  "enabled": true
                },
                "checklists": {
                  "enabled": true
                }
              }
            }
          ]
        }
      },
      "Space13": {
        "title": "Space13",
        "required": [
          "id",
          "name",
          "private",
          "statuses",
          "multiple_assignees",
          "features"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features4"
          }
        },
        "example": {
          "id": "790",
          "name": "Updated Space Name",
          "private": false,
          "statuses": [
            {
              "status": "to do",
              "type": "open",
              "orderindex": 0,
              "color": "#d3d3d3"
            },
            {
              "status": "complete",
              "type": "closed",
              "orderindex": 1,
              "color": "#6bc950"
            }
          ],
          "multiple_assignees": false,
          "features": {
            "due_dates": {
              "enabled": false,
              "start_date": false,
              "remap_due_dates": false,
              "remap_closed_due_date": false
            },
            "time_tracking": {
              "enabled": false
            },
            "tags": {
              "enabled": false
            },
            "time_estimates": {
              "enabled": false
            },
            "checklists": {
              "enabled": true
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": false
            },
            "dependency_warning": {
              "enabled": false
            },
            "portfolios": {
              "enabled": false
            }
          }
        }
      },
      "Features4": {
        "title": "Features4",
        "required": [
          "due_dates",
          "time_tracking",
          "tags",
          "time_estimates",
          "checklists"
        ],
        "type": "object",
        "properties": {
          "due_dates": {
            "$ref": "#/components/schemas/DueDates"
          },
          "time_tracking": {
            "$ref": "#/components/schemas/TimeTracking"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "time_estimates": {
            "$ref": "#/components/schemas/TimeEstimates"
          },
          "checklists": {
            "$ref": "#/components/schemas/Checklists"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/CustomFields"
          },
          "remap_dependencies": {
            "$ref": "#/components/schemas/RemapDependencies"
          },
          "dependency_warning": {
            "$ref": "#/components/schemas/DependencyWarning"
          },
          "portfolios": {
            "$ref": "#/components/schemas/Portfolios"
          }
        },
        "example": {
          "due_dates": {
            "enabled": false,
            "start_date": false,
            "remap_due_dates": false,
            "remap_closed_due_date": false
          },
          "time_tracking": {
            "enabled": false
          },
          "tags": {
            "enabled": false
          },
          "time_estimates": {
            "enabled": false
          },
          "checklists": {
            "enabled": true
          },
          "custom_fields": {
            "enabled": true
          },
          "remap_dependencies": {
            "enabled": false
          },
          "dependency_warning": {
            "enabled": false
          },
          "portfolios": {
            "enabled": false
          }
        }
      },
      "GetSpaceresponse": {
        "title": "GetSpaceresponse",
        "required": [
          "id",
          "name",
          "private",
          "statuses",
          "multiple_assignees",
          "features"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "private": {
            "type": "boolean"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Status"
            },
            "description": ""
          },
          "multiple_assignees": {
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/Features"
          }
        },
        "example": {
          "id": "790",
          "name": "Updated Space Name",
          "private": false,
          "statuses": [
            {
              "status": "to do",
              "type": "open",
              "orderindex": 0,
              "color": "#d3d3d3"
            },
            {
              "status": "complete",
              "type": "closed",
              "orderindex": 1,
              "color": "#6bc950"
            }
          ],
          "multiple_assignees": false,
          "features": {
            "due_dates": {
              "enabled": false,
              "start_date": false,
              "remap_due_dates": false,
              "remap_closed_due_date": false
            },
            "time_tracking": {
              "enabled": false
            },
            "tags": {
              "enabled": false
            },
            "time_estimates": {
              "enabled": false
            },
            "checklists": {
              "enabled": true
            },
            "custom_fields": {
              "enabled": true
            },
            "remap_dependencies": {
              "enabled": false
            },
            "dependency_warning": {
              "enabled": false
            },
            "portfolios": {
              "enabled": false
            }
          }
        }
      },
      "GetSpaceTagsresponse": {
        "title": "GetSpaceTagsresponse",
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          }
        },
        "example": {
          "tags": [
            {
              "name": "Tag name",
              "tag_fg": "#000000",
              "tag_bg": "#000000"
            }
          ]
        }
      },
      "Tags6": {
        "title": "Tags6",
        "required": [
          "name",
          "tag_fg",
          "tag_bg"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tag_fg": {
            "type": "string"
          },
          "tag_bg": {
            "type": "string"
          }
        },
        "example": {
          "name": "Tag name",
          "tag_fg": "#000000",
          "tag_bg": "#000000"
        }
      },
      "CreateSpaceTagrequest": {
        "title": "CreateSpaceTagrequest",
        "required": [
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "example": {
          "tag": {
            "name": "Tag Name",
            "tag_fg": "#000000",
            "tag_bg": "#000000"
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "required": [
          "name",
          "tag_fg",
          "tag_bg"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tag_fg": {
            "type": "string"
          },
          "tag_bg": {
            "type": "string"
          }
        },
        "example": {
          "name": "Tag Name",
          "tag_fg": "#000000",
          "tag_bg": "#000000"
        }
      },
      "EditSpaceTagresponse": {
        "title": "EditSpaceTagresponse",
        "required": [
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag1"
          }
        },
        "example": {
          "tag": {
            "name": "Updated Tag",
            "fg_color": "#ffffff",
            "bg_color": "#ffffff"
          }
        }
      },
      "Tag1": {
        "title": "Tag1",
        "required": [
          "name",
          "fg_color",
          "bg_color"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "fg_color": {
            "type": "string"
          },
          "bg_color": {
            "type": "string"
          }
        },
        "example": {
          "name": "Updated Tag",
          "fg_color": "#ffffff",
          "bg_color": "#ffffff"
        }
      },
      "DeleteSpaceTagrequest": {
        "title": "DeleteSpaceTagrequest",
        "required": [
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          }
        },
        "example": {
          "tag": {
            "name": "Tag name",
            "tag_fg": "#000000",
            "tag_bg": "#000000"
          }
        }
      },
      "CreateTaskrequest": {
        "title": "CreateTaskrequest",
        "required": [
          "name",
          "description",
          "assignees",
          "tags",
          "status",
          "priority",
          "due_date",
          "due_date_time",
          "time_estimate",
          "start_date",
          "start_date_time",
          "notify_all",
          "parent",
          "links_to",
          "check_required_custom_fields",
          "custom_fields"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "due_date": {
            "type": "integer",
            "format": "int64"
          },
          "due_date_time": {
            "type": "boolean"
          },
          "time_estimate": {
            "type": "integer",
            "format": "int32"
          },
          "start_date": {
            "type": "integer",
            "format": "int64"
          },
          "start_date_time": {
            "type": "boolean"
          },
          "notify_all": {
            "type": "boolean"
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "links_to": {
            "type": "string",
            "nullable": true
          },
          "check_required_custom_fields": {
            "type": "boolean"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFields6"
            },
            "description": ""
          }
        },
        "example": {
          "name": "New Task Name",
          "description": "New Task Description",
          "assignees": [
            183
          ],
          "tags": [
            "tag name 1"
          ],
          "status": "Open",
          "priority": 3,
          "due_date": 1508369194377,
          "due_date_time": false,
          "time_estimate": 8640000,
          "start_date": 1567780450202,
          "start_date_time": false,
          "notify_all": true,
          "parent": null,
          "links_to": null,
          "check_required_custom_fields": true,
          "custom_fields": [
            {
              "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
              "value": 23
            },
            {
              "id": "03efda77-c7a0-42d3-8afd-fd546353c2f5",
              "value": "Text field input"
            }
          ]
        }
      },
      "CustomFields6": {
        "title": "CustomFields6",
        "required": [
          "id",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "oneOf": [
              {
                "type": "integer",
                "format": "int32"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "example": {
          "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
          "value": 23
        }
      },
      "UpdateTaskrequest": {
        "title": "UpdateTaskrequest",
        "required": [
          "name",
          "description",
          "status",
          "priority",
          "parent",
          "time_estimate",
          "assignees",
          "archived"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "parent": {
            "type": "string"
          },
          "time_estimate": {
            "type": "integer",
            "format": "int32"
          },
          "assignees": {
            "$ref": "#/components/schemas/Assignees"
          },
          "archived": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "Updated Task Name",
          "description": "Updated Task Content",
          "status": "in progress",
          "priority": 1,
          "parent": "abc1234",
          "time_estimate": 8640000,
          "assignees": {
            "add": [
              182
            ],
            "rem": [
              183
            ]
          },
          "archived": false
        }
      },
      "Assignees": {
        "title": "Assignees",
        "required": [
          "add",
          "rem"
        ],
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "rem": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        },
        "example": {
          "add": [
            182
          ],
          "rem": [
            183
          ]
        }
      },
      "UpdateTaskresponse": {
        "title": "UpdateTaskresponse",
        "required": [
          "id",
          "custom_id",
          "name",
          "text_content",
          "description",
          "status",
          "archived",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "time_estimate",
          "time_spent",
          "custom_fields",
          "list",
          "folder",
          "space",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "text_content": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "archived": {
            "type": "boolean"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "time_spent": {
            "type": "string",
            "nullable": true
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFields7"
            },
            "description": ""
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "9hx",
          "custom_id": null,
          "name": "Updated Task Name",
          "text_content": "Updated Task Content",
          "description": "Updated Task Content",
          "status": {
            "status": "in progress",
            "color": "#d3d3d3",
            "orderindex": 1,
            "type": "custom"
          },
          "archived": false,
          "orderindex": "1.00000000000000000000000000000000",
          "date_created": "1567780450202",
          "date_updated": "1567780450202",
          "date_closed": null,
          "creator": {
            "id": 183,
            "username": "John Doe",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "assignees": [],
          "checklists": [],
          "tags": [],
          "parent": "abc1234",
          "priority": null,
          "due_date": null,
          "start_date": null,
          "time_estimate": null,
          "time_spent": null,
          "custom_fields": [
            {
              "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
              "name": "My Number field",
              "type": "checkbox",
              "type_config": {},
              "date_created": "1622176979540",
              "hide_from_guests": false,
              "value": "23",
              "required": true
            },
            {
              "id": "03efda77-c7a0-42d3-8afd-fd546353c2f5",
              "name": "My Text field",
              "type": "short_text",
              "type_config": {},
              "date_created": "1622176979540",
              "hide_from_guests": false,
              "value": "Text field input",
              "required": false
            },
            {
              "id": "f4d2a20d-6759-4420-b853-222dbe2589d5",
              "name": "My People",
              "type": "users",
              "type_config": {
                "single_user": true,
                "include_groups": true,
                "include_guests": true,
                "include_team_members": true
              },
              "date_created": "1618440378816",
              "hide_from_guests": false,
              "required": false
            }
          ],
          "list": {
            "id": "123"
          },
          "folder": {
            "id": "456"
          },
          "space": {
            "id": "789"
          },
          "url": "https://app.clickup.com/t/9hx"
        }
      },
      "CustomFields7": {
        "title": "CustomFields7",
        "required": [
          "id",
          "name",
          "type",
          "type_config",
          "date_created",
          "hide_from_guests",
          "required"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "type_config": {
            "$ref": "#/components/schemas/TypeConfig1"
          },
          "date_created": {
            "type": "string"
          },
          "hide_from_guests": {
            "type": "boolean"
          },
          "value": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "0a52c486-5f05-403b-b4fd-c512ff05131c",
          "name": "My Number field",
          "type": "checkbox",
          "type_config": {},
          "date_created": "1622176979540",
          "hide_from_guests": false,
          "value": "23",
          "required": true
        }
      },
      "TypeConfig1": {
        "title": "TypeConfig1",
        "type": "object",
        "properties": {
          "single_user": {
            "type": "boolean"
          },
          "include_groups": {
            "type": "boolean"
          },
          "include_guests": {
            "type": "boolean"
          },
          "include_team_members": {
            "type": "boolean"
          }
        },
        "example": {}
      },
      "GetTaskresponse": {
        "title": "GetTaskresponse",
        "required": [
          "id",
          "custom_id",
          "name",
          "text_content",
          "description",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "time_estimate",
          "time_spent",
          "custom_fields",
          "list",
          "folder",
          "space",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "text_content": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "time_spent": {
            "type": "string",
            "nullable": true
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFields8"
            },
            "description": ""
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "CustomFields8": {
        "title": "CustomFields8",
        "required": [
          "id",
          "name",
          "type",
          "type_config",
          "date_created",
          "hide_from_guests",
          "value",
          "required"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "type_config": {
            "$ref": "#/components/schemas/TypeConfig1"
          },
          "date_created": {
            "type": "string"
          },
          "hide_from_guests": {
            "type": "boolean"
          },
          "value": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Value"
              },
              {
                "$ref": "#/components/schemas/Value1"
              }
            ],
            "example": {
              "id": 183,
              "username": "John Doe",
              "email": "john@example.com",
              "color": "#7b68ee",
              "initials": "JD",
              "profilePicture": null
            }
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "Value": {
        "title": "Value",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Value1": {
        "title": "Value1",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": 183,
          "username": "John Doe",
          "email": "john@example.com",
          "color": "#7b68ee",
          "initials": "JD",
          "profilePicture": null
        }
      },
      "GetFilteredTeamTasksresponse": {
        "title": "GetFilteredTeamTasksresponse",
        "required": [
          "tasks"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task3"
            },
            "description": ""
          }
        },
        "example": {
          "tasks": [
            {
              "id": "av1",
              "custom_id": null,
              "name": "My First Task",
              "text_content": "Task description",
              "description": "Task description",
              "status": {
                "status": "Open",
                "type": "open",
                "orderindex": 1,
                "color": "#000000"
              },
              "orderindex": "1.0000",
              "date_created": "1508369194377",
              "date_updated": "1508369194377",
              "date_closed": "1508369194377",
              "creator": {
                "id": 123,
                "username": "John Doe",
                "color": "#000000",
                "email": "johndoe@website.com",
                "profilePicture": "https://clickup.com/avatar.jpg"
              },
              "assignees": [
                {
                  "id": 123,
                  "username": "John Doe",
                  "color": "#000000",
                  "email": "johndoe@website.com",
                  "profilePicture": "https://clickup.com/avatar.jpg"
                }
              ],
              "watchers": [
                {
                  "id": 123,
                  "username": "John Doe",
                  "color": "#000000",
                  "email": "johndoe@website.com",
                  "profilePicture": "https://clickup.com/avatar.jpg"
                }
              ],
              "checklists": [
                {
                  "id": "d41340bc-2f17-43cc-ae71-86628f45825f",
                  "task_id": "3cxv9f",
                  "name": "Checklist",
                  "date_created": "1618455803730",
                  "orderindex": 1,
                  "creator": 2770032,
                  "resolved": 0,
                  "unresolved": 1,
                  "items": [
                    {
                      "id": "9398cb3d-55a4-4c45-ab46-2a47a371e375",
                      "name": "checklist item 1",
                      "orderindex": 0,
                      "assignee": null,
                      "resolved": false,
                      "parent": null,
                      "date_created": "1618455810454",
                      "children": []
                    }
                  ]
                }
              ],
              "tags": [
                {
                  "name": "tagged",
                  "tag_fg": "#000000",
                  "tag_bg": "#000000"
                }
              ],
              "parent": "av2",
              "priority": 1,
              "due_date": "1508369194377",
              "start_date": "1508369194377",
              "points": 1.3,
              "time_estimate": 1.2,
              "custom_fields": [
                {
                  "id": "be43f58e-989e-4233-9f25-27584f094b74",
                  "name": "Location type Custom Field",
                  "type": "location",
                  "type_config": {},
                  "date_created": "1617765143523",
                  "hide_from_guests": false,
                  "required": false
                }
              ],
              "dependencies": [],
              "linked_tasks": [],
              "team_id": "1234",
              "url": "https://app.clickup.com/t/av1",
              "permission_level": "create",
              "list": {
                "id": "1",
                "name": "List",
                "access": true
              },
              "project": {
                "id": "1",
                "name": "Folder",
                "hidden": false,
                "access": true
              },
              "folder": {
                "id": "1",
                "name": "Folder",
                "hidden": false,
                "access": true
              },
              "space": {
                "id": "1"
              }
            }
          ]
        }
      },
      "Task3": {
        "title": "Task3",
        "required": [
          "id",
          "custom_id",
          "name",
          "text_content",
          "description",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "watchers",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "points",
          "time_estimate",
          "custom_fields",
          "dependencies",
          "linked_tasks",
          "team_id",
          "url",
          "permission_level",
          "list",
          "project",
          "folder",
          "space"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "text_content": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/Creator5"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assignees1"
            },
            "description": ""
          },
          "watchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Watcher"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Checklists6"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          },
          "parent": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "due_date": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "points": {
            "type": "number"
          },
          "time_estimate": {
            "type": "number"
          },
          "custom_fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFields9"
            },
            "description": ""
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "linked_tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "team_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "permission_level": {
            "type": "string"
          },
          "list": {
            "$ref": "#/components/schemas/List2"
          },
          "project": {
            "$ref": "#/components/schemas/Project"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder3"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          }
        },
        "example": {
          "id": "av1",
          "custom_id": null,
          "name": "My First Task",
          "text_content": "Task description",
          "description": "Task description",
          "status": {
            "status": "Open",
            "type": "open",
            "orderindex": 1,
            "color": "#000000"
          },
          "orderindex": "1.0000",
          "date_created": "1508369194377",
          "date_updated": "1508369194377",
          "date_closed": "1508369194377",
          "creator": {
            "id": 123,
            "username": "John Doe",
            "color": "#000000",
            "email": "johndoe@website.com",
            "profilePicture": "https://clickup.com/avatar.jpg"
          },
          "assignees": [
            {
              "id": 123,
              "username": "John Doe",
              "color": "#000000",
              "email": "johndoe@website.com",
              "profilePicture": "https://clickup.com/avatar.jpg"
            }
          ],
          "watchers": [
            {
              "id": 123,
              "username": "John Doe",
              "color": "#000000",
              "email": "johndoe@website.com",
              "profilePicture": "https://clickup.com/avatar.jpg"
            }
          ],
          "checklists": [
            {
              "id": "d41340bc-2f17-43cc-ae71-86628f45825f",
              "task_id": "3cxv9f",
              "name": "Checklist",
              "date_created": "1618455803730",
              "orderindex": 1,
              "creator": 2770032,
              "resolved": 0,
              "unresolved": 1,
              "items": [
                {
                  "id": "9398cb3d-55a4-4c45-ab46-2a47a371e375",
                  "name": "checklist item 1",
                  "orderindex": 0,
                  "assignee": null,
                  "resolved": false,
                  "parent": null,
                  "date_created": "1618455810454",
                  "children": []
                }
              ]
            }
          ],
          "tags": [
            {
              "name": "tagged",
              "tag_fg": "#000000",
              "tag_bg": "#000000"
            }
          ],
          "parent": "av2",
          "priority": 1,
          "due_date": "1508369194377",
          "start_date": "1508369194377",
          "points": 1.3,
          "time_estimate": 1.2,
          "custom_fields": [
            {
              "id": "be43f58e-989e-4233-9f25-27584f094b74",
              "name": "Location type Custom Field",
              "type": "location",
              "type_config": {},
              "date_created": "1617765143523",
              "hide_from_guests": false,
              "required": false
            }
          ],
          "dependencies": [],
          "linked_tasks": [],
          "team_id": "1234",
          "url": "https://app.clickup.com/t/av1",
          "permission_level": "create",
          "list": {
            "id": "1",
            "name": "List",
            "access": true
          },
          "project": {
            "id": "1",
            "name": "Folder",
            "hidden": false,
            "access": true
          },
          "folder": {
            "id": "1",
            "name": "Folder",
            "hidden": false,
            "access": true
          },
          "space": {
            "id": "1"
          }
        }
      },
      "Creator5": {
        "title": "Creator5",
        "required": [
          "id",
          "username",
          "color",
          "email",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 123,
          "username": "John Doe",
          "color": "#000000",
          "email": "johndoe@website.com",
          "profilePicture": "https://clickup.com/avatar.jpg"
        }
      },
      "Assignees1": {
        "title": "Assignees1",
        "required": [
          "id",
          "username",
          "color",
          "email",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 123,
          "username": "John Doe",
          "color": "#000000",
          "email": "johndoe@website.com",
          "profilePicture": "https://clickup.com/avatar.jpg"
        }
      },
      "Watcher": {
        "title": "Watcher",
        "required": [
          "id",
          "username",
          "color",
          "email",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 123,
          "username": "John Doe",
          "color": "#000000",
          "email": "johndoe@website.com",
          "profilePicture": "https://clickup.com/avatar.jpg"
        }
      },
      "Checklists6": {
        "title": "Checklists6",
        "required": [
          "id",
          "task_id",
          "name",
          "date_created",
          "orderindex",
          "creator",
          "resolved",
          "unresolved",
          "items"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "resolved": {
            "type": "integer",
            "format": "int32"
          },
          "unresolved": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item1"
            },
            "description": ""
          }
        },
        "example": {
          "id": "d41340bc-2f17-43cc-ae71-86628f45825f",
          "task_id": "3cxv9f",
          "name": "Checklist",
          "date_created": "1618455803730",
          "orderindex": 1,
          "creator": 2770032,
          "resolved": 0,
          "unresolved": 1,
          "items": [
            {
              "id": "9398cb3d-55a4-4c45-ab46-2a47a371e375",
              "name": "checklist item 1",
              "orderindex": 0,
              "assignee": null,
              "resolved": false,
              "parent": null,
              "date_created": "1618455810454",
              "children": []
            }
          ]
        }
      },
      "CustomFields9": {
        "title": "CustomFields9",
        "required": [
          "id",
          "name",
          "type",
          "type_config",
          "date_created",
          "hide_from_guests",
          "required"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "type_config": {
            "type": "object"
          },
          "date_created": {
            "type": "string"
          },
          "hide_from_guests": {
            "type": "boolean"
          },
          "required": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "be43f58e-989e-4233-9f25-27584f094b74",
          "name": "Location type Custom Field",
          "type": "location",
          "type_config": {},
          "date_created": "1617765143523",
          "hide_from_guests": false,
          "required": false
        }
      },
      "Project": {
        "title": "Project",
        "required": [
          "id",
          "name",
          "hidden",
          "access"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "access": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "1",
          "name": "Folder",
          "hidden": false,
          "access": true
        }
      },
      "GetTasksTimeinStatusresponse": {
        "title": "GetTasksTimeinStatusresponse",
        "required": [
          "current_status",
          "status_history"
        ],
        "type": "object",
        "properties": {
          "current_status": {
            "$ref": "#/components/schemas/CurrentStatus"
          },
          "status_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistory"
            },
            "description": ""
          }
        },
        "example": {
          "current_status": {
            "status": "open",
            "color": "#d3d3d3",
            "total_time": {
              "by_minute": 21708,
              "since": "1604004423494"
            }
          },
          "status_history": [
            {
              "status": "open",
              "color": "#d3d3d3",
              "type": "open",
              "total_time": {
                "by_minute": 21707,
                "since": "1604004423494"
              },
              "orderindex": 0
            },
            {
              "status": "active status",
              "color": "#5CF1D4",
              "type": "custom",
              "total_time": {
                "by_minute": 23274,
                "since": "1602607941692"
              },
              "orderindex": 4
            }
          ]
        }
      },
      "CurrentStatus": {
        "title": "CurrentStatus",
        "required": [
          "status",
          "color",
          "total_time"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "total_time": {
            "$ref": "#/components/schemas/TotalTime"
          }
        },
        "example": {
          "status": "open",
          "color": "#d3d3d3",
          "total_time": {
            "by_minute": 21708,
            "since": "1604004423494"
          }
        }
      },
      "TotalTime": {
        "title": "TotalTime",
        "required": [
          "by_minute",
          "since"
        ],
        "type": "object",
        "properties": {
          "by_minute": {
            "type": "integer",
            "format": "int32"
          },
          "since": {
            "type": "string"
          }
        },
        "example": {
          "by_minute": 21708,
          "since": "1604004423494"
        }
      },
      "StatusHistory": {
        "title": "StatusHistory",
        "required": [
          "status",
          "color",
          "type",
          "total_time",
          "orderindex"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "total_time": {
            "$ref": "#/components/schemas/TotalTime"
          },
          "orderindex": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "status": "open",
          "color": "#d3d3d3",
          "type": "open",
          "total_time": {
            "by_minute": 21707,
            "since": "1604004423494"
          },
          "orderindex": 0
        }
      },
      "GetBulkTasksTimeinStatusresponse": {
        "title": "GetBulkTasksTimeinStatusresponse",
        "required": [
          "27075wz",
          "20bbn28"
        ],
        "type": "object",
        "properties": {
          "27075wz": {
            "$ref": "#/components/schemas/27075wz"
          },
          "20bbn28": {
            "$ref": "#/components/schemas/20bbn28"
          }
        },
        "example": {
          "27075wz": {
            "current_status": {
              "status": "open",
              "color": "#d3d3d3",
              "total_time": {
                "by_minute": 21830,
                "since": "1604004423494"
              }
            },
            "status_history": [
              {
                "status": "open",
                "color": "#d3d3d3",
                "type": "open",
                "total_time": {
                  "by_minute": 21829,
                  "since": "1604004423494"
                },
                "orderindex": 0
              },
              {
                "status": "active status #2",
                "color": "#5CF1D4",
                "type": "custom",
                "total_time": {
                  "by_minute": 23274,
                  "since": "1602607941692"
                },
                "orderindex": 4
              }
            ]
          },
          "20bbn28": {
            "current_status": {
              "status": "open",
              "color": "#d3d3d3",
              "total_time": {
                "by_minute": 21830,
                "since": "1604004420925"
              }
            },
            "status_history": [
              {
                "status": "open",
                "color": "#d3d3d3",
                "type": "open",
                "total_time": {
                  "by_minute": 22276,
                  "since": "1604004420925"
                },
                "orderindex": 0
              },
              {
                "status": "active status #2",
                "color": "#5CF1D4",
                "type": "custom",
                "total_time": {
                  "by_minute": 40109,
                  "since": "1601597828835"
                },
                "orderindex": 4
              }
            ]
          }
        }
      },
      "27075wz": {
        "title": "27075wz",
        "required": [
          "current_status",
          "status_history"
        ],
        "type": "object",
        "properties": {
          "current_status": {
            "$ref": "#/components/schemas/CurrentStatus"
          },
          "status_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistory"
            },
            "description": ""
          }
        },
        "example": {
          "current_status": {
            "status": "open",
            "color": "#d3d3d3",
            "total_time": {
              "by_minute": 21830,
              "since": "1604004423494"
            }
          },
          "status_history": [
            {
              "status": "open",
              "color": "#d3d3d3",
              "type": "open",
              "total_time": {
                "by_minute": 21829,
                "since": "1604004423494"
              },
              "orderindex": 0
            },
            {
              "status": "active status #2",
              "color": "#5CF1D4",
              "type": "custom",
              "total_time": {
                "by_minute": 23274,
                "since": "1602607941692"
              },
              "orderindex": 4
            }
          ]
        }
      },
      "20bbn28": {
        "title": "20bbn28",
        "required": [
          "current_status",
          "status_history"
        ],
        "type": "object",
        "properties": {
          "current_status": {
            "$ref": "#/components/schemas/CurrentStatus"
          },
          "status_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistory"
            },
            "description": ""
          }
        },
        "example": {
          "current_status": {
            "status": "open",
            "color": "#d3d3d3",
            "total_time": {
              "by_minute": 21830,
              "since": "1604004420925"
            }
          },
          "status_history": [
            {
              "status": "open",
              "color": "#d3d3d3",
              "type": "open",
              "total_time": {
                "by_minute": 22276,
                "since": "1604004420925"
              },
              "orderindex": 0
            },
            {
              "status": "active status #2",
              "color": "#5CF1D4",
              "type": "custom",
              "total_time": {
                "by_minute": 40109,
                "since": "1601597828835"
              },
              "orderindex": 4
            }
          ]
        }
      },
      "GetTaskTemplatesresponse": {
        "title": "GetTaskTemplatesresponse",
        "required": [
          "templates"
        ],
        "type": "object",
        "properties": {
          "templates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "templates": []
        }
      },
      "CreateTaskFromTemplaterequest": {
        "title": "CreateTaskFromTemplaterequest",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "New task name"
        }
      },
      "CreateTeamresponse": {
        "title": "CreateTeamresponse",
        "required": [
          "id",
          "team_id",
          "userid",
          "name",
          "handle",
          "date_created",
          "initials",
          "members",
          "avatar"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Member7"
            },
            "description": ""
          },
          "avatar": {
            "$ref": "#/components/schemas/Avatar"
          }
        },
        "example": {
          "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
          "team_id": "301540",
          "userid": 301828,
          "name": "User group",
          "handle": "usergroup",
          "date_created": "1640122639829",
          "initials": "U",
          "members": [
            {
              "id": 185,
              "username": "Sam",
              "email": "sam@example.com",
              "color": "#4169E1",
              "initials": "S",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            {
              "id": 186,
              "username": "Alex",
              "email": "alex@example.com",
              "color": "#4169E1",
              "initials": "A",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            }
          ],
          "avatar": {
            "attachment_id": null,
            "color": null,
            "source": null,
            "icon": null
          }
        }
      },
      "Member7": {
        "title": "Member7",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          }
        },
        "example": {
          "id": 185,
          "username": "Sam",
          "email": "sam@example.com",
          "color": "#4169E1",
          "initials": "S",
          "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
        }
      },
      "Avatar": {
        "title": "Avatar",
        "required": [
          "attachment_id",
          "color",
          "source",
          "icon"
        ],
        "type": "object",
        "properties": {
          "attachment_id": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "attachment_id": null,
          "color": null,
          "source": null,
          "icon": null
        }
      },
      "UpdateTeamrequest": {
        "title": "UpdateTeamrequest",
        "required": [
          "name",
          "handle",
          "members"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "members": {
            "$ref": "#/components/schemas/Members"
          }
        },
        "example": {
          "name": "New User Group Name",
          "handle": "newusergroupname",
          "members": {
            "add": [
              123456,
              987654
            ],
            "rem": [
              159753
            ]
          }
        }
      },
      "Members": {
        "title": "Members",
        "required": [
          "add",
          "rem"
        ],
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          },
          "rem": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        },
        "example": {
          "add": [
            123456,
            987654
          ],
          "rem": [
            159753
          ]
        }
      },
      "UpdateTeamresponse": {
        "title": "UpdateTeamresponse",
        "required": [
          "id",
          "team_id",
          "userid",
          "name",
          "handle",
          "date_created",
          "initials",
          "members",
          "avatar"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Members1"
            },
            "description": ""
          },
          "avatar": {
            "$ref": "#/components/schemas/Avatar"
          }
        },
        "example": {
          "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
          "team_id": "123456",
          "userid": 301828,
          "name": "New User Group Name",
          "handle": "newusergroupname",
          "date_created": "1640122639829",
          "initials": "NN",
          "members": [
            {
              "id": 201,
              "username": "Jim Halpert",
              "email": "jim@example.com",
              "color": "#40BC86",
              "initials": "JH",
              "profilePicture": null
            },
            {
              "id": 202,
              "username": "Dwight Shrute",
              "email": "dwight@example.com",
              "color": "#FF8600",
              "initials": "DS",
              "profilePicture": null
            }
          ],
          "avatar": {
            "attachment_id": null,
            "color": null,
            "source": null,
            "icon": null
          }
        }
      },
      "Members1": {
        "title": "Members1",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": 201,
          "username": "Jim Halpert",
          "email": "jim@example.com",
          "color": "#40BC86",
          "initials": "JH",
          "profilePicture": null
        }
      },
      "GetTeamsresponse": {
        "title": "GetTeamsresponse",
        "required": [
          "groups"
        ],
        "type": "object",
        "properties": {
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "description": ""
          }
        },
        "example": {
          "groups": [
            {
              "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
              "team_id": "123456",
              "userid": 301123,
              "name": "product team",
              "handle": "product",
              "date_created": "1640122639829",
              "initials": "PT",
              "members": [
                {
                  "id": 183,
                  "username": "Jerry",
                  "email": "jerry@example.com",
                  "color": "#40BC86",
                  "initials": "J",
                  "profilePicture": null
                },
                {
                  "id": 184,
                  "username": "Sam",
                  "email": "sam@example.com",
                  "color": "#FF8600",
                  "initials": "S",
                  "profilePicture": null
                }
              ],
              "avatar": {
                "attachment_id": null,
                "color": null,
                "source": null,
                "icon": null
              }
            },
            {
              "id": "fd31be63-41f2-4320-9043-9786fdf643d6",
              "team_id": "301540",
              "userid": 301828,
              "name": "HR department",
              "handle": "hr-dept",
              "date_created": "1627087990293",
              "initials": "HD",
              "members": [
                {
                  "id": 183,
                  "username": "Jerry",
                  "email": "jerry@example.com",
                  "color": "#40BC86",
                  "initials": "J",
                  "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                }
              ],
              "avatar": {
                "attachment_id": null,
                "color": null,
                "source": null,
                "icon": null
              }
            }
          ]
        }
      },
      "Group": {
        "title": "Group",
        "required": [
          "id",
          "team_id",
          "userid",
          "name",
          "handle",
          "date_created",
          "initials",
          "members",
          "avatar"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "team_id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Members1"
            },
            "description": ""
          },
          "avatar": {
            "$ref": "#/components/schemas/Avatar"
          }
        },
        "example": {
          "id": "4bfdfcec-6f4f-40a7-b0d6-22660d51870d",
          "team_id": "123456",
          "userid": 301123,
          "name": "product team",
          "handle": "product",
          "date_created": "1640122639829",
          "initials": "PT",
          "members": [
            {
              "id": 183,
              "username": "Jerry",
              "email": "jerry@example.com",
              "color": "#40BC86",
              "initials": "J",
              "profilePicture": null
            },
            {
              "id": 184,
              "username": "Sam",
              "email": "sam@example.com",
              "color": "#FF8600",
              "initials": "S",
              "profilePicture": null
            }
          ],
          "avatar": {
            "attachment_id": null,
            "color": null,
            "source": null,
            "icon": null
          }
        }
      },
      "Tracktimerequest": {
        "title": "Tracktimerequest",
        "required": [
          "start",
          "end",
          "time"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "start": 1567780450202,
          "end": 1508369194377,
          "time": 8640000
        }
      },
      "Tracktimeresponse": {
        "title": "Tracktimeresponse",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "example": {
          "id": "123"
        }
      },
      "Gettrackedtimeresponse": {
        "title": "Gettrackedtimeresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum"
            },
            "description": ""
          }
        },
        "example": {
          "data": [
            {
              "user": {
                "id": 1,
                "username": "John Doe",
                "email": "johndoe@gmail.com",
                "color": "#795548",
                "initials": "JD",
                "profilePicture": null
              },
              "time": 1000000,
              "intervals": [
                {
                  "id": "318",
                  "start": null,
                  "end": null,
                  "time": "1000000",
                  "source": "chrome",
                  "date_added": "1569983937761"
                }
              ]
            }
          ]
        }
      },
      "Datum": {
        "title": "Datum",
        "required": [
          "user",
          "time",
          "intervals"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User13"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          },
          "intervals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Interval"
            },
            "description": ""
          }
        },
        "example": {
          "user": {
            "id": 1,
            "username": "John Doe",
            "email": "johndoe@gmail.com",
            "color": "#795548",
            "initials": "JD",
            "profilePicture": null
          },
          "time": 1000000,
          "intervals": [
            {
              "id": "318",
              "start": null,
              "end": null,
              "time": "1000000",
              "source": "chrome",
              "date_added": "1569983937761"
            }
          ]
        }
      },
      "User13": {
        "title": "User13",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "initials",
          "profilePicture"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": 1,
          "username": "John Doe",
          "email": "johndoe@gmail.com",
          "color": "#795548",
          "initials": "JD",
          "profilePicture": null
        }
      },
      "Interval": {
        "title": "Interval",
        "required": [
          "id",
          "start",
          "end",
          "time",
          "source",
          "date_added"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "date_added": {
            "type": "string"
          }
        },
        "example": {
          "id": "318",
          "start": null,
          "end": null,
          "time": "1000000",
          "source": "chrome",
          "date_added": "1569983937761"
        }
      },
      "Edittimetrackedrequest": {
        "title": "Edittimetrackedrequest",
        "required": [
          "start",
          "end",
          "time"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "time": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "start": 1567780450202,
          "end": 1508369194377,
          "time": 8640000
        }
      },
      "Gettimeentrieswithinadaterangeresponse": {
        "title": "Gettimeentrieswithinadaterangeresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum1"
            },
            "description": ""
          }
        },
        "example": {
          "data": [
            {
              "id": "1963465985517105840",
              "task": {
                "id": "1vwwavv",
                "custom_id": "JOSH-917",
                "name": "woof",
                "status": {
                  "status": "open yes",
                  "color": "#d3d3d3",
                  "type": "open",
                  "orderindex": 0
                },
                "custom_type": null
              },
              "wid": "300702",
              "user": {
                "id": 1,
                "username": "first_name last_name",
                "email": "test@gmail.com",
                "color": "#08c7e0",
                "initials": "JK",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/1_HHk.jpg"
              },
              "billable": false,
              "start": "1592841559129",
              "end": "1592845899021",
              "duration": "4339892",
              "description": "",
              "tags": [],
              "source": "clickup",
              "at": "1592845899021",
              "task_location": {
                "list_id": 1560300071,
                "folder_id": 468300080,
                "space_id": 22800253,
                "list_name": "List",
                "folder_name": "Folder",
                "space_name": "Space"
              },
              "task_tags": [
                {
                  "name": "content-request",
                  "tag_fg": "#800000",
                  "tag_bg": "#2ecd6f",
                  "creator": 301828
                },
                {
                  "name": "marketing-okr",
                  "tag_fg": "#800000",
                  "tag_bg": "#7C4DFF",
                  "creator": 301828
                }
              ],
              "task_url": "https://staging.clickup.com/t/1vwwavv"
            }
          ]
        }
      },
      "Datum1": {
        "title": "Datum1",
        "required": [
          "id",
          "task",
          "wid",
          "user",
          "billable",
          "start",
          "end",
          "duration",
          "description",
          "tags",
          "source",
          "at",
          "task_location",
          "task_tags",
          "task_url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task4"
          },
          "wid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "billable": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "source": {
            "type": "string"
          },
          "at": {
            "type": "string"
          },
          "task_location": {
            "$ref": "#/components/schemas/TaskLocation"
          },
          "task_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTag"
            },
            "description": ""
          },
          "task_url": {
            "type": "string"
          }
        },
        "example": {
          "id": "1963465985517105840",
          "task": {
            "id": "1vwwavv",
            "custom_id": "JOSH-917",
            "name": "woof",
            "status": {
              "status": "open yes",
              "color": "#d3d3d3",
              "type": "open",
              "orderindex": 0
            },
            "custom_type": null
          },
          "wid": "300702",
          "user": {
            "id": 1,
            "username": "first_name last_name",
            "email": "test@gmail.com",
            "color": "#08c7e0",
            "initials": "JK",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/1_HHk.jpg"
          },
          "billable": false,
          "start": "1592841559129",
          "end": "1592845899021",
          "duration": "4339892",
          "description": "",
          "tags": [],
          "source": "clickup",
          "at": "1592845899021",
          "task_location": {
            "list_id": 1560300071,
            "folder_id": 468300080,
            "space_id": 22800253,
            "list_name": "List",
            "folder_name": "Folder",
            "space_name": "Space"
          },
          "task_tags": [
            {
              "name": "content-request",
              "tag_fg": "#800000",
              "tag_bg": "#2ecd6f",
              "creator": 301828
            },
            {
              "name": "marketing-okr",
              "tag_fg": "#800000",
              "tag_bg": "#7C4DFF",
              "creator": 301828
            }
          ],
          "task_url": "https://staging.clickup.com/t/1vwwavv"
        }
      },
      "Task4": {
        "title": "Task4",
        "required": [
          "id",
          "custom_id",
          "name",
          "status",
          "custom_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "custom_type": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "1vwwavv",
          "custom_id": "JOSH-917",
          "name": "woof",
          "status": {
            "status": "open yes",
            "color": "#d3d3d3",
            "type": "open",
            "orderindex": 0
          },
          "custom_type": null
        }
      },
      "TaskLocation": {
        "title": "TaskLocation",
        "required": [
          "list_id",
          "folder_id",
          "space_id",
          "list_name",
          "folder_name",
          "space_name"
        ],
        "type": "object",
        "properties": {
          "list_id": {
            "type": "integer",
            "format": "int32"
          },
          "folder_id": {
            "type": "integer",
            "format": "int32"
          },
          "space_id": {
            "type": "integer",
            "format": "int32"
          },
          "list_name": {
            "type": "string"
          },
          "folder_name": {
            "type": "string"
          },
          "space_name": {
            "type": "string"
          }
        },
        "example": {
          "list_id": 1560300071,
          "folder_id": 468300080,
          "space_id": 22800253,
          "list_name": "List",
          "folder_name": "Folder",
          "space_name": "Space"
        }
      },
      "TaskTag": {
        "title": "TaskTag",
        "required": [
          "name",
          "tag_fg",
          "tag_bg",
          "creator"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tag_fg": {
            "type": "string"
          },
          "tag_bg": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "name": "content-request",
          "tag_fg": "#800000",
          "tag_bg": "#2ecd6f",
          "creator": 301828
        }
      },
      "Getsingulartimeentryresponse": {
        "title": "Getsingulartimeentryresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Datum2"
            },
            "description": ""
          }
        },
        "example": {
          "data": [
            {
              "id": "timer_id",
              "wid": "workspace_id",
              "user": {
                "id": 1,
                "username": "first_name last_name",
                "email": "test@gmail.com",
                "color": "#08c7e0",
                "initials": "JK",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
              },
              "billable": false,
              "start": "1592841559129",
              "end": "1592845899021",
              "duration": "4339892",
              "description": "",
              "tags": [],
              "source": "clickup",
              "at": "1592845899021",
              "task_location": {
                "list_id": 1560300071,
                "folder_id": 468300080,
                "space_id": 22800253,
                "list_name": "List",
                "folder_name": "Folder",
                "space_name": "Space"
              },
              "task_tags": [
                {
                  "name": "content-request",
                  "tag_fg": "#800000",
                  "tag_bg": "#2ecd6f",
                  "creator": 301828
                },
                {
                  "name": "marketing-okr",
                  "tag_fg": "#800000",
                  "tag_bg": "#7C4DFF",
                  "creator": 301828
                }
              ],
              "task_url": "https://staging.clickup.com/t/rnmuwz7"
            }
          ]
        }
      },
      "Datum2": {
        "title": "Datum2",
        "required": [
          "id",
          "wid",
          "user",
          "billable",
          "start",
          "end",
          "duration",
          "description",
          "tags",
          "source",
          "at",
          "task_location",
          "task_tags",
          "task_url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "wid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "billable": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "duration": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "source": {
            "type": "string"
          },
          "at": {
            "type": "string"
          },
          "task_location": {
            "$ref": "#/components/schemas/TaskLocation"
          },
          "task_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTag"
            },
            "description": ""
          },
          "task_url": {
            "type": "string"
          }
        },
        "example": {
          "id": "timer_id",
          "wid": "workspace_id",
          "user": {
            "id": 1,
            "username": "first_name last_name",
            "email": "test@gmail.com",
            "color": "#08c7e0",
            "initials": "JK",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
          },
          "billable": false,
          "start": "1592841559129",
          "end": "1592845899021",
          "duration": "4339892",
          "description": "",
          "tags": [],
          "source": "clickup",
          "at": "1592845899021",
          "task_location": {
            "list_id": 1560300071,
            "folder_id": 468300080,
            "space_id": 22800253,
            "list_name": "List",
            "folder_name": "Folder",
            "space_name": "Space"
          },
          "task_tags": [
            {
              "name": "content-request",
              "tag_fg": "#800000",
              "tag_bg": "#2ecd6f",
              "creator": 301828
            },
            {
              "name": "marketing-okr",
              "tag_fg": "#800000",
              "tag_bg": "#7C4DFF",
              "creator": 301828
            }
          ],
          "task_url": "https://staging.clickup.com/t/rnmuwz7"
        }
      },
      "Getrunningtimeentryresponse": {
        "title": "Getrunningtimeentryresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "example": {
          "data": {
            "id": "timer_id",
            "task": {
              "id": "task_id",
              "name": "task_name",
              "status": {
                "status": "to do",
                "color": "#d3d3d3",
                "type": "open",
                "orderindex": 0
              }
            },
            "wid": "workspace_id",
            "user": {
              "id": 300528,
              "username": "first_name last_name",
              "email": "test@gmail.com",
              "color": "#08c7e0",
              "initials": "JK",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
            },
            "billable": false,
            "start": "1595293042560",
            "duration": -25655,
            "description": "",
            "tags": [],
            "at": "1595293042560"
          }
        }
      },
      "Data": {
        "title": "Data",
        "required": [
          "id",
          "task",
          "wid",
          "user",
          "billable",
          "start",
          "duration",
          "description",
          "tags",
          "at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task5"
          },
          "wid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "billable": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "at": {
            "type": "string"
          }
        },
        "example": {
          "id": "timer_id",
          "task": {
            "id": "task_id",
            "name": "task_name",
            "status": {
              "status": "to do",
              "color": "#d3d3d3",
              "type": "open",
              "orderindex": 0
            }
          },
          "wid": "workspace_id",
          "user": {
            "id": 300528,
            "username": "first_name last_name",
            "email": "test@gmail.com",
            "color": "#08c7e0",
            "initials": "JK",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
          },
          "billable": false,
          "start": "1595293042560",
          "duration": -25655,
          "description": "",
          "tags": [],
          "at": "1595293042560"
        }
      },
      "Task5": {
        "title": "Task5",
        "required": [
          "id",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        },
        "example": {
          "id": "task_id",
          "name": "task_name",
          "status": {
            "status": "to do",
            "color": "#d3d3d3",
            "type": "open",
            "orderindex": 0
          }
        }
      },
      "Createatimeentryrequest": {
        "title": "Createatimeentryrequest",
        "required": [
          "description",
          "tags",
          "start",
          "billable",
          "duration",
          "assignee",
          "tid"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          },
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "billable": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "type": "string"
          }
        },
        "example": {
          "description": "from api",
          "tags": [
            {
              "name": "name of tag",
              "tag_bg": "#BF55EC",
              "tag_fg": "#FFFFFF"
            }
          ],
          "start": 1595282645000,
          "billable": true,
          "duration": 50000,
          "assignee": 1,
          "tid": "task_id"
        }
      },
      "Createatimeentryresponse": {
        "title": "Createatimeentryresponse",
        "required": [
          "description",
          "tags",
          "start",
          "billable",
          "duration",
          "assignee",
          "tid"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          },
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "billable": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "assignee": {
            "type": "integer",
            "format": "int32"
          },
          "tid": {
            "type": "string"
          }
        },
        "example": {
          "description": "from api",
          "tags": [
            {
              "name": "name of tag",
              "tag_bg": "#BF55EC",
              "tag_fg": "#BF55EC"
            }
          ],
          "start": 1595282645000,
          "billable": true,
          "duration": 50000,
          "assignee": 1,
          "tid": "task_id"
        }
      },
      "Removetagsfromtimeentriesrequest": {
        "title": "Removetagsfromtimeentriesrequest",
        "required": [
          "time_entry_ids",
          "tags"
        ],
        "type": "object",
        "properties": {
          "time_entry_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags10"
            },
            "description": ""
          }
        },
        "example": {
          "time_entry_ids": [
            "timer_id"
          ],
          "tags": [
            {
              "name": "name of tag"
            }
          ]
        }
      },
      "Tags10": {
        "title": "Tags10",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "example": {
          "name": "name of tag"
        }
      },
      "Getalltagsfromtimeentriesresponse": {
        "title": "Getalltagsfromtimeentriesresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Data1"
            },
            "description": ""
          }
        },
        "example": {
          "data": [
            {
              "name": "name of tag",
              "creator": 1,
              "tag_bg": "#BF55EC",
              "tag_fg": "#FFFFFF"
            }
          ]
        }
      },
      "Data1": {
        "title": "Data1",
        "required": [
          "name",
          "creator",
          "tag_bg",
          "tag_fg"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "creator": {
            "type": "integer",
            "format": "int32"
          },
          "tag_bg": {
            "type": "string"
          },
          "tag_fg": {
            "type": "string"
          }
        },
        "example": {
          "name": "name of tag",
          "creator": 1,
          "tag_bg": "#BF55EC",
          "tag_fg": "#FFFFFF"
        }
      },
      "Addtagsfromtimeentriesrequest": {
        "title": "Addtagsfromtimeentriesrequest",
        "required": [
          "time_entry_ids",
          "tags"
        ],
        "type": "object",
        "properties": {
          "time_entry_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          }
        },
        "example": {
          "time_entry_ids": [
            "timer_id"
          ],
          "tags": [
            {
              "name": "name of tag",
              "tag_bg": "#BF55EC",
              "tag_fg": "#FFFFFF"
            }
          ]
        }
      },
      "Changetagnamesfromtimeentriesrequest": {
        "title": "Changetagnamesfromtimeentriesrequest",
        "required": [
          "name",
          "new_name",
          "tag_bg",
          "tag_fg"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "new_name": {
            "type": "string"
          },
          "tag_bg": {
            "type": "string"
          },
          "tag_fg": {
            "type": "string"
          }
        },
        "example": {
          "name": "old tag name",
          "new_name": "new tag name",
          "tag_bg": "#000000",
          "tag_fg": "#000000"
        }
      },
      "StartatimeEntryrequest": {
        "title": "StartatimeEntryrequest",
        "required": [
          "description",
          "tags",
          "tid",
          "billable"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags10"
            },
            "description": ""
          },
          "tid": {
            "type": "string"
          },
          "billable": {
            "type": "boolean"
          }
        },
        "example": {
          "description": "from api",
          "tags": [
            {
              "name": "tag1"
            }
          ],
          "tid": "task_id",
          "billable": false
        }
      },
      "StartatimeEntryresponse": {
        "title": "StartatimeEntryresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data2"
          }
        },
        "example": {
          "data": {
            "id": "timer_id",
            "task": {
              "id": "task_id",
              "name": "test task",
              "status": {
                "status": "to do",
                "color": "#d3d3d3",
                "type": "open",
                "orderindex": 0
              },
              "custom_type": null
            },
            "wid": "workspace_id",
            "user": {
              "id": 1,
              "username": "first_name last_name",
              "email": "test@gmail.com",
              "color": "#08c7e0",
              "initials": "JK",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
            },
            "billable": false,
            "start": "1595289395842",
            "duration": -53,
            "description": "",
            "tags": [],
            "at": 1595289452790
          }
        }
      },
      "Data2": {
        "title": "Data2",
        "required": [
          "id",
          "task",
          "wid",
          "user",
          "billable",
          "start",
          "duration",
          "description",
          "tags",
          "at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task6"
          },
          "wid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "billable": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "at": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "id": "timer_id",
          "task": {
            "id": "task_id",
            "name": "test task",
            "status": {
              "status": "to do",
              "color": "#d3d3d3",
              "type": "open",
              "orderindex": 0
            },
            "custom_type": null
          },
          "wid": "workspace_id",
          "user": {
            "id": 1,
            "username": "first_name last_name",
            "email": "test@gmail.com",
            "color": "#08c7e0",
            "initials": "JK",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
          },
          "billable": false,
          "start": "1595289395842",
          "duration": -53,
          "description": "",
          "tags": [],
          "at": 1595289452790
        }
      },
      "Task6": {
        "title": "Task6",
        "required": [
          "id",
          "name",
          "status",
          "custom_type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "custom_type": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "id": "task_id",
          "name": "test task",
          "status": {
            "status": "to do",
            "color": "#d3d3d3",
            "type": "open",
            "orderindex": 0
          },
          "custom_type": null
        }
      },
      "StopatimeEntryresponse": {
        "title": "StopatimeEntryresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data3"
          }
        },
        "example": {
          "data": {
            "id": "timer_id",
            "task": {
              "id": "task_id",
              "name": "test task",
              "status": {
                "status": "to do",
                "color": "#d3d3d3",
                "type": "open",
                "orderindex": 0
              },
              "custom_type": null
            },
            "wid": "workspace_id",
            "user": {
              "id": 1,
              "username": "first_name last_name",
              "email": "test@gmail.com",
              "color": "#08c7e0",
              "initials": "JK",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
            },
            "billable": false,
            "start": "1595289395842",
            "end": 1595289452790,
            "duration": 56948,
            "description": "",
            "tags": [],
            "source": "clickup",
            "at": 1595289452790
          }
        }
      },
      "Data3": {
        "title": "Data3",
        "required": [
          "id",
          "task",
          "wid",
          "user",
          "billable",
          "start",
          "end",
          "duration",
          "description",
          "tags",
          "source",
          "at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task6"
          },
          "wid": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User2"
          },
          "billable": {
            "type": "boolean"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "source": {
            "type": "string"
          },
          "at": {
            "type": "integer",
            "format": "int64"
          }
        },
        "example": {
          "id": "timer_id",
          "task": {
            "id": "task_id",
            "name": "test task",
            "status": {
              "status": "to do",
              "color": "#d3d3d3",
              "type": "open",
              "orderindex": 0
            },
            "custom_type": null
          },
          "wid": "workspace_id",
          "user": {
            "id": 1,
            "username": "first_name last_name",
            "email": "test@gmail.com",
            "color": "#08c7e0",
            "initials": "JK",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
          },
          "billable": false,
          "start": "1595289395842",
          "end": 1595289452790,
          "duration": 56948,
          "description": "",
          "tags": [],
          "source": "clickup",
          "at": 1595289452790
        }
      },
      "DeleteatimeEntryresponse": {
        "title": "DeleteatimeEntryresponse",
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data3"
          }
        },
        "example": {
          "data": {
            "id": "timer_id",
            "task": {
              "id": "task_id",
              "name": "test task",
              "status": {
                "status": "to do",
                "color": "#d3d3d3",
                "type": "open",
                "orderindex": 0
              },
              "custom_type": null
            },
            "wid": "workspace_id",
            "user": {
              "id": 1,
              "username": "first_name last_name",
              "email": "test@gmail.com",
              "color": "#08c7e0",
              "initials": "JK",
              "profilePicture": "https://attachments-public.clickup.com/profilePictures/1_HHk.jpg"
            },
            "billable": false,
            "start": "1595289395842",
            "end": 1595289452790,
            "duration": 56948,
            "description": "",
            "tags": [],
            "source": "clickup",
            "at": 1595289452790
          }
        }
      },
      "UpdateatimeEntryrequest": {
        "title": "UpdateatimeEntryrequest",
        "required": [
          "description",
          "tags",
          "tag_action",
          "start",
          "end",
          "tid",
          "billable",
          "duration"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tags6"
            },
            "description": ""
          },
          "tag_action": {
            "type": "string"
          },
          "start": {
            "type": "integer",
            "format": "int64"
          },
          "end": {
            "type": "integer",
            "format": "int64"
          },
          "tid": {
            "type": "string"
          },
          "billable": {
            "type": "boolean"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "description": "",
          "tags": [
            {
              "name": "name of tag",
              "tag_bg": "#BF55EC",
              "tag_fg": "#FFFFFF"
            }
          ],
          "tag_action": "add",
          "start": 1595289395842,
          "end": 1595289495842,
          "tid": "task_id",
          "billable": true,
          "duration": 100000
        }
      },
      "InviteUserToWorkspacerequest": {
        "title": "InviteUserToWorkspacerequest",
        "required": [
          "email",
          "admin"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        },
        "example": {
          "email": "user@example.com",
          "admin": true
        }
      },
      "InviteUserToWorkspaceresponse": {
        "title": "InviteUserToWorkspaceresponse",
        "required": [
          "team"
        ],
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/Team3"
          }
        },
        "example": {
          "team": {
            "id": "333",
            "name": "Team Name",
            "color": "#8D00D4",
            "avatar": null,
            "members": [
              {
                "user": {
                  "id": 184,
                  "username": null,
                  "email": "user@example.com",
                  "color": null,
                  "profilePicture": null,
                  "initials": "G",
                  "role": 2,
                  "last_active": null,
                  "date_joined": null,
                  "date_invited": "1583358383412"
                },
                "invited_by": {
                  "id": 183,
                  "color": "#827718",
                  "username": "Jerry",
                  "email": "jerry@example.com",
                  "initials": "J",
                  "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
                }
              }
            ]
          }
        }
      },
      "Team3": {
        "title": "Team3",
        "required": [
          "id",
          "name",
          "color",
          "avatar",
          "members"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Members3"
            },
            "description": ""
          }
        },
        "example": {
          "id": "333",
          "name": "Team Name",
          "color": "#8D00D4",
          "avatar": null,
          "members": [
            {
              "user": {
                "id": 184,
                "username": null,
                "email": "user@example.com",
                "color": null,
                "profilePicture": null,
                "initials": "G",
                "role": 2,
                "last_active": null,
                "date_joined": null,
                "date_invited": "1583358383412"
              },
              "invited_by": {
                "id": 183,
                "color": "#827718",
                "username": "Jerry",
                "email": "jerry@example.com",
                "initials": "J",
                "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
              }
            }
          ]
        }
      },
      "Members3": {
        "title": "Members3",
        "required": [
          "user",
          "invited_by"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User5"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": null,
            "email": "user@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 2,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          }
        }
      },
      "EditUserOnWorkspacerequest": {
        "title": "EditUserOnWorkspacerequest",
        "required": [
          "username",
          "admin"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        },
        "example": {
          "username": "User Name",
          "admin": false
        }
      },
      "EditUserOnWorkspaceresponse": {
        "title": "EditUserOnWorkspaceresponse",
        "required": [
          "member"
        ],
        "type": "object",
        "properties": {
          "member": {
            "$ref": "#/components/schemas/Member8"
          }
        },
        "example": {
          "member": {
            "user": {
              "id": 184,
              "username": "User Name",
              "email": "user@example.com",
              "color": null,
              "profilePicture": null,
              "initials": "G",
              "role": 3,
              "last_active": null,
              "date_joined": null,
              "date_invited": "1583358383412"
            },
            "invited_by": {
              "id": 183,
              "color": "#827718",
              "username": "Jerry",
              "email": "jerry@example.com",
              "initials": "J",
              "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
            },
            "shared": {
              "tasks": [],
              "lists": [],
              "folders": []
            }
          }
        }
      },
      "Member8": {
        "title": "Member8",
        "required": [
          "user",
          "invited_by",
          "shared"
        ],
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User21"
          },
          "invited_by": {
            "$ref": "#/components/schemas/InvitedBy"
          },
          "shared": {
            "$ref": "#/components/schemas/Shared"
          }
        },
        "example": {
          "user": {
            "id": 184,
            "username": "User Name",
            "email": "user@example.com",
            "color": null,
            "profilePicture": null,
            "initials": "G",
            "role": 3,
            "last_active": null,
            "date_joined": null,
            "date_invited": "1583358383412"
          },
          "invited_by": {
            "id": 183,
            "color": "#827718",
            "username": "Jerry",
            "email": "jerry@example.com",
            "initials": "J",
            "profilePicture": "https://dev-attachments-public.clickup.com/profilePictures/profile.jpg"
          },
          "shared": {
            "tasks": [],
            "lists": [],
            "folders": []
          }
        }
      },
      "User21": {
        "title": "User21",
        "required": [
          "id",
          "username",
          "email",
          "color",
          "profilePicture",
          "initials",
          "role",
          "last_active",
          "date_joined",
          "date_invited"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "profilePicture": {
            "type": "string",
            "nullable": true
          },
          "initials": {
            "type": "string"
          },
          "role": {
            "type": "integer",
            "format": "int32"
          },
          "last_active": {
            "type": "string",
            "nullable": true
          },
          "date_joined": {
            "type": "string",
            "nullable": true
          },
          "date_invited": {
            "type": "string"
          }
        },
        "example": {
          "id": 184,
          "username": "User Name",
          "email": "user@example.com",
          "color": null,
          "profilePicture": null,
          "initials": "G",
          "role": 3,
          "last_active": null,
          "date_joined": null,
          "date_invited": "1583358383412"
        }
      },
      "RemoveUserFromWorkspaceresponse": {
        "title": "RemoveUserFromWorkspaceresponse",
        "required": [
          "team"
        ],
        "type": "object",
        "properties": {
          "team": {
            "$ref": "#/components/schemas/Team2"
          }
        },
        "example": {
          "team": {
            "id": "333",
            "name": "Team Name",
            "color": "#8D00D4",
            "avatar": null,
            "members": []
          }
        }
      },
      "CreateTeamViewrequest": {
        "title": "CreateTeamViewrequest",
        "required": [
          "name",
          "type",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "name": "New Team View Name",
          "type": "list",
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "Grouping": {
        "title": "Grouping",
        "required": [
          "field",
          "dir",
          "collapsed",
          "ignore"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "dir": {
            "type": "integer",
            "format": "int32"
          },
          "collapsed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "ignore": {
            "type": "boolean"
          }
        },
        "example": {
          "field": "status",
          "dir": 1,
          "collapsed": [],
          "ignore": false
        }
      },
      "Divide": {
        "title": "Divide",
        "required": [
          "field",
          "dir",
          "collapsed"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "nullable": true
          },
          "dir": {
            "type": "string",
            "nullable": true
          },
          "collapsed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "field": null,
          "dir": null,
          "collapsed": []
        }
      },
      "Sorting": {
        "title": "Sorting",
        "required": [
          "fields"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "fields": []
        }
      },
      "Filters": {
        "title": "Filters",
        "required": [
          "op",
          "fields",
          "search",
          "show_closed"
        ],
        "type": "object",
        "properties": {
          "op": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "search": {
            "type": "string"
          },
          "show_closed": {
            "type": "boolean"
          }
        },
        "example": {
          "op": "AND",
          "fields": [],
          "search": "",
          "show_closed": false
        }
      },
      "Columns": {
        "title": "Columns",
        "required": [
          "fields"
        ],
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "fields": []
        }
      },
      "TeamSidebar": {
        "title": "TeamSidebar",
        "required": [
          "assignees",
          "assigned_comments",
          "unassigned_tasks"
        ],
        "type": "object",
        "properties": {
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "assigned_comments": {
            "type": "boolean"
          },
          "unassigned_tasks": {
            "type": "boolean"
          }
        },
        "example": {
          "assignees": [],
          "assigned_comments": false,
          "unassigned_tasks": false
        }
      },
      "Settings": {
        "title": "Settings",
        "required": [
          "show_task_locations",
          "show_subtasks",
          "show_subtask_parent_names",
          "show_closed_subtasks",
          "show_assignees",
          "show_images",
          "collapse_empty_columns",
          "me_comments",
          "me_subtasks",
          "me_checklists"
        ],
        "type": "object",
        "properties": {
          "show_task_locations": {
            "type": "boolean"
          },
          "show_subtasks": {
            "type": "integer",
            "format": "int32"
          },
          "show_subtask_parent_names": {
            "type": "boolean"
          },
          "show_closed_subtasks": {
            "type": "boolean"
          },
          "show_assignees": {
            "type": "boolean"
          },
          "show_images": {
            "type": "boolean"
          },
          "collapse_empty_columns": {
            "type": "string",
            "nullable": true
          },
          "me_comments": {
            "type": "boolean"
          },
          "me_subtasks": {
            "type": "boolean"
          },
          "me_checklists": {
            "type": "boolean"
          }
        },
        "example": {
          "show_task_locations": false,
          "show_subtasks": 3,
          "show_subtask_parent_names": false,
          "show_closed_subtasks": false,
          "show_assignees": true,
          "show_images": true,
          "collapse_empty_columns": null,
          "me_comments": true,
          "me_subtasks": true,
          "me_checklists": true
        }
      },
      "CreateTeamViewresponse": {
        "title": "CreateTeamViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-105",
            "name": "New Team View Name",
            "type": "list",
            "parent": {
              "id": "512",
              "type": 7
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "View": {
        "title": "View",
        "required": [
          "id",
          "name",
          "type",
          "parent",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Parent"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "id": "3c-105",
          "name": "New Team View Name",
          "type": "list",
          "parent": {
            "id": "512",
            "type": 7
          },
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "Parent": {
        "title": "Parent",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "id": "512",
          "type": 7
        }
      },
      "CreateSpaceViewrequest": {
        "title": "CreateSpaceViewrequest",
        "required": [
          "name",
          "type",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "name": "New Space View Name",
          "type": "list",
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "CreateSpaceViewresponse": {
        "title": "CreateSpaceViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-106",
            "name": "New Space View Name",
            "type": "list",
            "parent": {
              "id": "790",
              "type": 4
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "CreateFolderViewrequest": {
        "title": "CreateFolderViewrequest",
        "required": [
          "name",
          "type",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "name": "New Folder View Name",
          "type": "list",
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "CreateFolderViewresponse": {
        "title": "CreateFolderViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-107",
            "name": "New Folder View Name",
            "type": "list",
            "parent": {
              "id": "457",
              "type": 5
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "CreateListViewrequest": {
        "title": "CreateListViewrequest",
        "required": [
          "name",
          "type",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "name": "New List View Name",
          "type": "list",
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "CreateListViewresponse": {
        "title": "CreateListViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-108",
            "name": "New List View Name",
            "type": "list",
            "parent": {
              "id": "124",
              "type": 6
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "GetTeamViewsresponse": {
        "title": "GetTeamViewsresponse",
        "required": [
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "description": ""
          }
        },
        "example": {
          "views": [
            {
              "id": "3c-105",
              "name": "New View Name",
              "type": "list",
              "parent": {
                "id": "512",
                "type": 7
              },
              "grouping": {
                "field": "status",
                "dir": 1,
                "collapsed": [],
                "ignore": false
              },
              "divide": {
                "field": null,
                "dir": null,
                "collapsed": []
              },
              "sorting": {
                "fields": []
              },
              "filters": {
                "op": "AND",
                "fields": [],
                "search": "",
                "show_closed": false
              },
              "columns": {
                "fields": []
              },
              "team_sidebar": {
                "assignees": [],
                "assigned_comments": false,
                "unassigned_tasks": false
              },
              "settings": {
                "show_task_locations": false,
                "show_subtasks": 3,
                "show_subtask_parent_names": false,
                "show_closed_subtasks": false,
                "show_assignees": true,
                "show_images": true,
                "collapse_empty_columns": null,
                "me_comments": true,
                "me_subtasks": true,
                "me_checklists": true
              }
            }
          ]
        }
      },
      "GetSpaceViewsresponse": {
        "title": "GetSpaceViewsresponse",
        "required": [
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "description": ""
          }
        },
        "example": {
          "views": [
            {
              "id": "3c-106",
              "name": "New Space View Name",
              "type": "list",
              "parent": {
                "id": "790",
                "type": 4
              },
              "grouping": {
                "field": "status",
                "dir": 1,
                "collapsed": [],
                "ignore": false
              },
              "divide": {
                "field": null,
                "dir": null,
                "collapsed": []
              },
              "sorting": {
                "fields": []
              },
              "filters": {
                "op": "AND",
                "fields": [],
                "search": "",
                "show_closed": false
              },
              "columns": {
                "fields": []
              },
              "team_sidebar": {
                "assignees": [],
                "assigned_comments": false,
                "unassigned_tasks": false
              },
              "settings": {
                "show_task_locations": false,
                "show_subtasks": 3,
                "show_subtask_parent_names": false,
                "show_closed_subtasks": false,
                "show_assignees": true,
                "show_images": true,
                "collapse_empty_columns": null,
                "me_comments": true,
                "me_subtasks": true,
                "me_checklists": true
              }
            }
          ]
        }
      },
      "GetFolderViewsresponse": {
        "title": "GetFolderViewsresponse",
        "required": [
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "description": ""
          }
        },
        "example": {
          "views": [
            {
              "id": "3c-107",
              "name": "New Folder View Name",
              "type": "list",
              "parent": {
                "id": "457",
                "type": 5
              },
              "grouping": {
                "field": "status",
                "dir": 1,
                "collapsed": [],
                "ignore": false
              },
              "divide": {
                "field": null,
                "dir": null,
                "collapsed": []
              },
              "sorting": {
                "fields": []
              },
              "filters": {
                "op": "AND",
                "fields": [],
                "search": "",
                "show_closed": false
              },
              "columns": {
                "fields": []
              },
              "team_sidebar": {
                "assignees": [],
                "assigned_comments": false,
                "unassigned_tasks": false
              },
              "settings": {
                "show_task_locations": false,
                "show_subtasks": 3,
                "show_subtask_parent_names": false,
                "show_closed_subtasks": false,
                "show_assignees": true,
                "show_images": true,
                "collapse_empty_columns": null,
                "me_comments": true,
                "me_subtasks": true,
                "me_checklists": true
              }
            }
          ]
        }
      },
      "GetListViewsresponse": {
        "title": "GetListViewsresponse",
        "required": [
          "views"
        ],
        "type": "object",
        "properties": {
          "views": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "description": ""
          }
        },
        "example": {
          "views": [
            {
              "id": "3c-107",
              "name": "New List View Name",
              "type": "list",
              "parent": {
                "id": "124",
                "type": 6
              },
              "grouping": {
                "field": "status",
                "dir": 1,
                "collapsed": [],
                "ignore": false
              },
              "divide": {
                "field": null,
                "dir": null,
                "collapsed": []
              },
              "sorting": {
                "fields": []
              },
              "filters": {
                "op": "AND",
                "fields": [],
                "search": "",
                "show_closed": false
              },
              "columns": {
                "fields": []
              },
              "team_sidebar": {
                "assignees": [],
                "assigned_comments": false,
                "unassigned_tasks": false
              },
              "settings": {
                "show_task_locations": false,
                "show_subtasks": 3,
                "show_subtask_parent_names": false,
                "show_closed_subtasks": false,
                "show_assignees": true,
                "show_images": true,
                "collapse_empty_columns": null,
                "me_comments": true,
                "me_subtasks": true,
                "me_checklists": true
              }
            }
          ]
        }
      },
      "GetViewresponse": {
        "title": "GetViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-105",
            "name": "New View Name",
            "type": "list",
            "parent": {
              "id": "512",
              "type": 7
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "GetViewTasksresponse": {
        "title": "GetViewTasksresponse",
        "required": [
          "tasks",
          "last_page"
        ],
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task9"
            },
            "description": ""
          },
          "last_page": {
            "type": "boolean"
          }
        },
        "example": {
          "tasks": [
            {
              "id": "9hx",
              "name": "New Task Name",
              "status": {
                "status": "Open",
                "color": "#d3d3d3",
                "orderindex": 0,
                "type": "open"
              },
              "orderindex": "1.00000000000000000000000000000000",
              "date_created": "1567780450202",
              "date_updated": "1567780450202",
              "date_closed": null,
              "creator": {
                "id": 183,
                "username": "John Doe",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "assignees": [],
              "checklists": [],
              "tags": [],
              "parent": null,
              "priority": null,
              "due_date": null,
              "start_date": null,
              "time_estimate": null,
              "time_spent": null,
              "list": {
                "id": "123"
              },
              "folder": {
                "id": "456"
              },
              "space": {
                "id": "789"
              },
              "url": "https://app.clickup.com/t/9hx"
            },
            {
              "id": "9hz",
              "name": "Second task",
              "status": {
                "status": "Open",
                "color": "#d3d3d3",
                "orderindex": 0,
                "type": "open"
              },
              "orderindex": "2.00000000000000000000000000000000",
              "date_created": "1567780450202",
              "date_updated": "1567780450202",
              "date_closed": null,
              "creator": {
                "id": 183,
                "username": "John Doe",
                "color": "#827718",
                "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
              },
              "assignees": [],
              "checklists": [],
              "tags": [],
              "parent": null,
              "priority": null,
              "due_date": null,
              "start_date": null,
              "time_estimate": null,
              "time_spent": null,
              "list": {
                "id": "123"
              },
              "folder": {
                "id": "456"
              },
              "space": {
                "id": "789"
              },
              "url": "https://app.clickup.com/t/9hz"
            }
          ],
          "last_page": true
        }
      },
      "Task9": {
        "title": "Task9",
        "required": [
          "id",
          "name",
          "status",
          "orderindex",
          "date_created",
          "date_updated",
          "date_closed",
          "creator",
          "assignees",
          "checklists",
          "tags",
          "parent",
          "priority",
          "due_date",
          "start_date",
          "time_estimate",
          "time_spent",
          "list",
          "folder",
          "space",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "orderindex": {
            "type": "string"
          },
          "date_created": {
            "type": "string"
          },
          "date_updated": {
            "type": "string"
          },
          "date_closed": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "$ref": "#/components/schemas/Creator"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "checklists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "parent": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "nullable": true
          },
          "start_date": {
            "type": "string",
            "nullable": true
          },
          "time_estimate": {
            "type": "string",
            "nullable": true
          },
          "time_spent": {
            "type": "string",
            "nullable": true
          },
          "list": {
            "$ref": "#/components/schemas/List"
          },
          "folder": {
            "$ref": "#/components/schemas/Folder"
          },
          "space": {
            "$ref": "#/components/schemas/Space"
          },
          "url": {
            "type": "string"
          }
        },
        "example": {
          "id": "9hx",
          "name": "New Task Name",
          "status": {
            "status": "Open",
            "color": "#d3d3d3",
            "orderindex": 0,
            "type": "open"
          },
          "orderindex": "1.00000000000000000000000000000000",
          "date_created": "1567780450202",
          "date_updated": "1567780450202",
          "date_closed": null,
          "creator": {
            "id": 183,
            "username": "John Doe",
            "color": "#827718",
            "profilePicture": "https://attachments-public.clickup.com/profilePictures/183_abc.jpg"
          },
          "assignees": [],
          "checklists": [],
          "tags": [],
          "parent": null,
          "priority": null,
          "due_date": null,
          "start_date": null,
          "time_estimate": null,
          "time_spent": null,
          "list": {
            "id": "123"
          },
          "folder": {
            "id": "456"
          },
          "space": {
            "id": "789"
          },
          "url": "https://app.clickup.com/t/9hx"
        }
      },
      "UpdateViewrequest": {
        "title": "UpdateViewrequest",
        "required": [
          "name",
          "type",
          "parent",
          "grouping",
          "divide",
          "sorting",
          "filters",
          "columns",
          "team_sidebar",
          "settings"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Parent"
          },
          "grouping": {
            "$ref": "#/components/schemas/Grouping"
          },
          "divide": {
            "$ref": "#/components/schemas/Divide"
          },
          "sorting": {
            "$ref": "#/components/schemas/Sorting"
          },
          "filters": {
            "$ref": "#/components/schemas/Filters"
          },
          "columns": {
            "$ref": "#/components/schemas/Columns"
          },
          "team_sidebar": {
            "$ref": "#/components/schemas/TeamSidebar"
          },
          "settings": {
            "$ref": "#/components/schemas/Settings"
          }
        },
        "example": {
          "name": "New View Name",
          "type": "list",
          "parent": {
            "id": "512",
            "type": 7
          },
          "grouping": {
            "field": "status",
            "dir": 1,
            "collapsed": [],
            "ignore": false
          },
          "divide": {
            "field": null,
            "dir": null,
            "collapsed": []
          },
          "sorting": {
            "fields": []
          },
          "filters": {
            "op": "AND",
            "fields": [],
            "search": "",
            "show_closed": false
          },
          "columns": {
            "fields": []
          },
          "team_sidebar": {
            "assignees": [],
            "assigned_comments": false,
            "unassigned_tasks": false
          },
          "settings": {
            "show_task_locations": false,
            "show_subtasks": 3,
            "show_subtask_parent_names": false,
            "show_closed_subtasks": false,
            "show_assignees": true,
            "show_images": true,
            "collapse_empty_columns": null,
            "me_comments": true,
            "me_subtasks": true,
            "me_checklists": true
          }
        }
      },
      "UpdateViewresponse": {
        "title": "UpdateViewresponse",
        "required": [
          "view"
        ],
        "type": "object",
        "properties": {
          "view": {
            "$ref": "#/components/schemas/View"
          }
        },
        "example": {
          "view": {
            "id": "3c-105",
            "name": "New View Name",
            "type": "list",
            "parent": {
              "id": "512",
              "type": 7
            },
            "grouping": {
              "field": "status",
              "dir": 1,
              "collapsed": [],
              "ignore": false
            },
            "divide": {
              "field": null,
              "dir": null,
              "collapsed": []
            },
            "sorting": {
              "fields": []
            },
            "filters": {
              "op": "AND",
              "fields": [],
              "search": "",
              "show_closed": false
            },
            "columns": {
              "fields": []
            },
            "team_sidebar": {
              "assignees": [],
              "assigned_comments": false,
              "unassigned_tasks": false
            },
            "settings": {
              "show_task_locations": false,
              "show_subtasks": 3,
              "show_subtask_parent_names": false,
              "show_closed_subtasks": false,
              "show_assignees": true,
              "show_images": true,
              "collapse_empty_columns": null,
              "me_comments": true,
              "me_subtasks": true,
              "me_checklists": true
            }
          }
        }
      },
      "CreateWebhookrequest": {
        "title": "CreateWebhookrequest",
        "required": [
          "endpoint",
          "events"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "example": {
          "endpoint": "https://yourdomain.com/webhook",
          "events": [
            "taskCreated",
            "taskUpdated",
            "taskDeleted",
            "taskPriorityUpdated",
            "taskStatusUpdated",
            "taskAssigneeUpdated",
            "taskDueDateUpdated",
            "taskTagUpdated",
            "taskMoved",
            "taskCommentPosted",
            "taskCommentUpdated",
            "taskTimeEstimateUpdated",
            "taskTimeTrackedUpdated",
            "listCreated",
            "listUpdated",
            "listDeleted",
            "folderCreated",
            "folderUpdated",
            "folderDeleted",
            "spaceCreated",
            "spaceUpdated",
            "spaceDeleted",
            "goalCreated",
            "goalUpdated",
            "goalDeleted",
            "keyResultCreated",
            "keyResultUpdated",
            "keyResultDeleted"
          ]
        }
      },
      "CreateWebhookresponse": {
        "title": "CreateWebhookresponse",
        "required": [
          "id",
          "webhook"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "webhook": {
            "$ref": "#/components/schemas/Webhook"
          }
        },
        "example": {
          "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
          "webhook": {
            "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
            "userid": 183,
            "team_id": 108,
            "endpoint": "https://yourdomain.com/webhook",
            "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
            "events": [
              "taskCreated",
              "taskUpdated",
              "taskDeleted",
              "taskPriorityUpdated",
              "taskStatusUpdated",
              "taskAssigneeUpdated",
              "taskDueDateUpdated",
              "taskTagUpdated",
              "taskMoved",
              "taskCommentPosted",
              "taskCommentUpdated",
              "taskTimeEstimateUpdated",
              "taskTimeTrackedUpdated",
              "listCreated",
              "listUpdated",
              "listDeleted",
              "folderCreated",
              "folderUpdated",
              "folderDeleted",
              "spaceCreated",
              "spaceUpdated",
              "spaceDeleted",
              "goalCreated",
              "goalUpdated",
              "goalDeleted",
              "keyResultCreated",
              "keyResultUpdated",
              "keyResultDeleted"
            ],
            "task_id": null,
            "list_id": null,
            "folder_id": null,
            "space_id": null,
            "health": {
              "status": "active",
              "fail_count": 0
            },
            "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
          }
        }
      },
      "Webhook": {
        "title": "Webhook",
        "required": [
          "id",
          "userid",
          "team_id",
          "endpoint",
          "client_id",
          "events",
          "task_id",
          "list_id",
          "folder_id",
          "space_id",
          "health",
          "secret"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userid": {
            "type": "integer",
            "format": "int32"
          },
          "team_id": {
            "type": "integer",
            "format": "int32"
          },
          "endpoint": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "task_id": {
            "type": "string",
            "nullable": true
          },
          "list_id": {
            "type": "string",
            "nullable": true
          },
          "folder_id": {
            "type": "string",
            "nullable": true
          },
          "space_id": {
            "type": "string",
            "nullable": true
          },
          "health": {
            "$ref": "#/components/schemas/Health"
          },
          "secret": {
            "type": "string"
          }
        },
        "example": {
          "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
          "userid": 183,
          "team_id": 108,
          "endpoint": "https://yourdomain.com/webhook",
          "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
          "events": [
            "taskCreated",
            "taskUpdated",
            "taskDeleted",
            "taskPriorityUpdated",
            "taskStatusUpdated",
            "taskAssigneeUpdated",
            "taskDueDateUpdated",
            "taskTagUpdated",
            "taskMoved",
            "taskCommentPosted",
            "taskCommentUpdated",
            "taskTimeEstimateUpdated",
            "taskTimeTrackedUpdated",
            "listCreated",
            "listUpdated",
            "listDeleted",
            "folderCreated",
            "folderUpdated",
            "folderDeleted",
            "spaceCreated",
            "spaceUpdated",
            "spaceDeleted",
            "goalCreated",
            "goalUpdated",
            "goalDeleted",
            "keyResultCreated",
            "keyResultUpdated",
            "keyResultDeleted"
          ],
          "task_id": null,
          "list_id": null,
          "folder_id": null,
          "space_id": null,
          "health": {
            "status": "active",
            "fail_count": 0
          },
          "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
        }
      },
      "Health": {
        "title": "Health",
        "required": [
          "status",
          "fail_count"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "fail_count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "example": {
          "status": "active",
          "fail_count": 0
        }
      },
      "UpdateWebhookrequest": {
        "title": "UpdateWebhookrequest",
        "required": [
          "endpoint",
          "events",
          "status"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "type": "string"
          },
          "events": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "example": {
          "endpoint": "https://yourdomain.com/webhook",
          "events": "*",
          "status": "active"
        }
      },
      "UpdateWebhookresponse": {
        "title": "UpdateWebhookresponse",
        "required": [
          "id",
          "webhook"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "webhook": {
            "$ref": "#/components/schemas/Webhook"
          }
        },
        "example": {
          "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
          "webhook": {
            "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
            "userid": 183,
            "team_id": 108,
            "endpoint": "https://yourdomain.com/webhook",
            "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
            "events": [
              "taskCreated",
              "taskUpdated",
              "taskDeleted",
              "taskPriorityUpdated",
              "taskStatusUpdated",
              "taskAssigneeUpdated",
              "taskDueDateUpdated",
              "taskTagUpdated",
              "taskMoved",
              "taskCommentPosted",
              "taskCommentUpdated",
              "taskTimeEstimateUpdated",
              "taskTimeTrackedUpdated",
              "listCreated",
              "listUpdated",
              "listDeleted",
              "folderCreated",
              "folderUpdated",
              "folderDeleted",
              "spaceCreated",
              "spaceUpdated",
              "spaceDeleted",
              "goalCreated",
              "goalUpdated",
              "goalDeleted",
              "keyResultCreated",
              "keyResultUpdated",
              "keyResultDeleted"
            ],
            "task_id": null,
            "list_id": null,
            "folder_id": null,
            "space_id": null,
            "health": {
              "status": "active",
              "fail_count": 0
            },
            "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
          }
        }
      },
      "GetWebhooksresponse": {
        "title": "GetWebhooksresponse",
        "required": [
          "webhooks"
        ],
        "type": "object",
        "properties": {
          "webhooks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Webhook"
            },
            "description": ""
          }
        },
        "example": {
          "webhooks": [
            {
              "id": "4b67ac88-e506-4a29-9d42-26e504e3435e",
              "userid": 183,
              "team_id": 108,
              "endpoint": "https://yourdomain.com/webhook",
              "client_id": "QVOQP06ZXC6CMGVFKB0ZT7J9Y7APOYGO",
              "events": [
                "taskCreated",
                "taskUpdated",
                "taskDeleted",
                "taskPriorityUpdated",
                "taskStatusUpdated",
                "taskAssigneeUpdated",
                "taskDueDateUpdated",
                "taskTagUpdated",
                "taskMoved",
                "taskCommentPosted",
                "taskCommentUpdated",
                "taskTimeEstimateUpdated",
                "taskTimeTrackedUpdated",
                "listCreated",
                "listUpdated",
                "listDeleted",
                "folderCreated",
                "folderUpdated",
                "folderDeleted",
                "spaceCreated",
                "spaceUpdated",
                "spaceDeleted",
                "goalCreated",
                "goalUpdated",
                "goalDeleted",
                "keyResultCreated",
                "keyResultUpdated",
                "keyResultDeleted"
              ],
              "task_id": null,
              "list_id": null,
              "folder_id": null,
              "space_id": null,
              "health": {
                "status": "failing",
                "fail_count": 5
              },
              "secret": "O94IM25S7PXBPYTMNXLLET230SRP0S89COR7B1YOJ2ZIE8WQNK5UUKEF26W0Z5GA"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "httpBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "httpBearer": []
    }
  ],
  "tags": []
}
